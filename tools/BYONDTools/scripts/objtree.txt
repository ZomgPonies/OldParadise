
/
/AStar(start,end,adjacent,dist,maxnodes,maxnodedepth = 30,mintargetdist,minnodedist,id=null, var/turf/exclude=null)
/AddBan(ckey, computerid, reason, bannedby, temp, minutes, address)
/AddBanjob(ckey, computerid, reason, bannedby, temp, minutes, rank)
/AdminCreateVirus(var/mob/user)
/Advance_Mix(var/list/D_list)
/AngleToHue(angle)
/Atan2(x, y)
/AutoUpdateAI(obj/subject)
/BlendHSV(hsv1, hsv2, amount)
/BlendRGB(rgb1, rgb2, amount)
/BlendRGBasHSV(rgb1, rgb2, amount)
/Broadcast_SimpleMessage(var/source, var/frequency, var/text, var/data, var/mob/M, var/compression, var/level)
/CallHook(var/name as text, var/list/args)
/CanHug(var/mob/M)
/Ceiling(x)
/Centcomm_announce(var/text , var/mob/Sender)
/Centcomm_fax(var/sent, var/sentname, var/mob/Sender)
/CheckBan(var/ckey, var/id, var/address)
/ChristmasEvent()
/Christmas_Game_Start()
/Clamp(val, min, max)
/ClearAllBans()
/ClearAllBansjob()
/ClearTempbans()
/ClearTempbansjob()
/ColorTone(rgb, tone)
/Cot(x)
/CreateBans()
/CreateBansjob()
/Csc(x)
/DBColumn
/DBColumn/New(name_handler,table_handler,position_handler,type_handler,flag_handler,length_handler,max_length_handler)
/DBColumn/SqlTypeName(type_handler=src.sql_type)
/DBConnection
/DBConnection/Connect(dbi_handler=src.dbi,user_handler=src.user,password_handler=src.password,cursor_handler)
/DBConnection/Disconnect() return _dm_db_close(_db_con)
/DBConnection/ErrorMsg() return _dm_db_error_msg(_db_con)
/DBConnection/IsConnected()
/DBConnection/New(dbi_handler,username,password_handler,cursor_handler)
/DBConnection/NewQuery(sql_query,cursor_handler=src.default_cursor) return new/DBQuery(sql_query,src,cursor_handler)
/DBConnection/Quote(str) return _dm_db_quote(_db_con,str)
/DBConnection/SelectDB(database_name,dbi)
/DBQuery
/DBQuery/Close()
/DBQuery/Columns()
/DBQuery/ErrorMsg() return _dm_db_error_msg(_db_query)
/DBQuery/Execute(sql_query=src.sql,cursor_handler=default_cursor)
/DBQuery/GetRowData()
/DBQuery/New(sql_query,DBConnection/connection_handler,cursor_handler)
/DBQuery/NextRow() return _dm_db_next_row(_db_query,item,conversions)
/DBQuery/Quote(str)
/DBQuery/RowCount() return _dm_db_row_count(_db_query)
/DBQuery/RowsAffected() return _dm_db_rows_affected(_db_query)
/DBQuery/SetConversion(column,conversion)
/Default(a, b)
/DirBlocked(turf/loc,var/dir)
/DirBlockedWithAccess(turf/loc,var/dir,var/obj/item/weapon/card/id/ID)
/DuplicateObject(obj/original, var/perfectcopy = 0 , var/sameloc = 0)
/EgijkAeN(const/A, const/B)
/Ellipsis(original_msg, chance = 50)
/EncodeDNABlock(var/value)
/EquipCustomItems(mob/living/carbon/human/M)
/EquipRacialItems(mob/living/carbon/human/M)
/FindNameFromID(var/mob/living/carbon/human/H)
/Floor(x)
/GameOver()
/GaussRand(var/sigma)
/GaussRandRound(var/sigma,var/roundto)
/Gcd(a, b)
/GenerateKey()
/GetAnomalySusceptibility(var/mob/living/carbon/human/H)
/GetBanExpjob(minutes as num)
/GetDNABounds(var/block)
/GetExp(minutes as num)
/Get_Angle(atom/movable/start,atom/movable/end)
/Get_Holiday()
/Gibberish(t, p)
/GrayScale(rgb)
/GunTrace(X1,Y1,X2,Y2,Z=1,exc_obj,PX1=16,PY1=16,PX2=16,PY2=16)
/HONK_announce(var/text , var/mob/Sender)
/HSVtoRGB(hsv)
/HackProperties(var/mob/living/carbon/human/M,var/obj/item/I,var/script)
/Holiday_Game_Start()
/Holiday_Random_Event()
/HueToAngle(hue)
/InRange(var/A, var/lower, var/upper)
/InitializeSwapMaps()
/Intoxicated(phrase)
/Inverse(x)
/IonStorm(botEmagChance = 10)
/IsAboutEqual(a, b, deviation = 0.1)
/IsEven(x)
/IsGuestKey(key)
/IsInRange(val, min, max)
/IsInteger(x)
/IsMultiple(x, y)
/IsOdd(x)
/Lcm(a, b)
/Lerp(a, b, amount = 0.5)
/LinkBlocked(turf/A, turf/B)
/LinkBlockedWithAccess(turf/A, turf/B, obj/item/weapon/card/id/ID)
/LoadBans()
/LoadBansjob()
/Mean(...)
/NewStutter(phrase,stunned)
/NukeNameAssign(var/lastname,var/list/syndicates)
/PathNode
/PathNode/New(s,p,pg,ph,pnt)
/PathWeightCompare(PathNode/a, PathNode/b)
/PriorityQueue
/PriorityQueue/Dequeue()
/PriorityQueue/Enqueue(d)
/PriorityQueue/IsEmpty()
/PriorityQueue/List()
/PriorityQueue/New(compare)
/PriorityQueue/Remove(i)
/PriorityQueue/RemoveItem(i)
/PriorityQueue/_Fix(i)
/RGBtoHSV(rgb)
/ReadHSV(hsv)
/ReadRGB(rgb)
/RemoveBan(foldername)
/RemoveBanjob(foldername)
/Root(n, x)
/RotateHue(hsv, angle)
/RoundHealth(health)
/ScreenText(obj/O, maptext="", screen_loc="CENTER-7,CENTER-7", maptext_height=480, maptext_width=480)
/Sec(x)
/SendFax(var/sent, var/sentname, var/mob/Sender, var/dpt)
/SetViruses(var/datum/reagent/R, var/list/data)
/SetupHooks()
/SetupMinerals()
/SetupXenoarch()
/ShareHeat(datum/gas_mixture/A, datum/gas_mixture/B, connecting_tiles)
/ShareRatio(datum/gas_mixture/A, datum/gas_mixture/B, connecting_tiles)
/ShareSpace(datum/gas_mixture/A, list/unsimulated_tiles, dbg_output)
/Show2Group4Delay(obj/O, list/group, delay=0)
/SkinCmdRegister(var/mob/user, var/name as text, var/O as obj)
/SolveQuadratic(a, b, c)
/Stagger(mob/M,d)
/SwapMaps_AddIconToCache(name,icon)
/SwapMaps_CreateFromTemplate(template_id)
/SwapMaps_DeleteFile(id)
/SwapMaps_Find(id)
/SwapMaps_GetSize(id)
/SwapMaps_Load(id)
/SwapMaps_LoadChunk(chunk_id,turf/locorner)
/SwapMaps_Save(id)
/SwapMaps_SaveChunk(chunk_id,turf/corner1,turf/corner2)
/SwapMaps_Save_All()
/SwapMaps_Unload(id)
/Syndicate_announce(var/text , var/mob/Sender)
/Tan(x)
/ToDegrees(radians)
/ToRadians(degrees)
/ToRban_autoupdate()
/ToRban_isbanned(var/ip_address)
/ToRban_update()
/TurfBlockedNonWindow(turf/loc)
/UpdateTime()
/Wrap(val, min, max)
/_jobban_isbanned(var/client/clientvar, var/rank)
/active_ais()
/add_logs(mob/target, mob/user, what_done, var/object=null, var/addition=null)
/add_lspace(t, u)
/add_tspace(t, u)
/add_zero(t, u)
/add_zero2(t, u)
/admin_spawn_room_at_pos()
/adminscrub(var/t,var/limit=1024)
/age2agedescription(age)
/airborne_can_reach(turf/source, turf/target, var/radius=5)
/alien_infestation(var/spawncount = 1)
/angle2dir(var/degree)
/angle2text(var/degree)
/anim(turf/location as turf,target as mob|obj,a_icon,a_icon_state as text,flick_anim as text,sleeptime = 0,direction as num)
/announce_newscaster_news(datum/news_announcement/news)
/antigens2string(var/antigens)
/anyprob(value)
/appearance_client_fullban(ckey)
/appearance_fullban(mob/M, reason)
/appearance_isbanned(mob/M)
/appearance_loadbanfile()
/appearance_remove(X)
/appearance_savebanfile()
/appearance_unban(mob/M)
/appearance_updatelegacybans()
/appendicitis()
/arctan(x)
/area
/area/AIsattele
/area/Adjacent(var/atom/neighbor)
/area/CloseFirelocks()
/area/Entered(A)
/area/InitializeLighting()
/area/New()
/area/OpenFirelocks()
/area/SetLightLevel(light)
/area/admin/
/area/adminconstruction
/area/ai_monitored
/area/ai_monitored/Entered(atom/movable/O)
/area/ai_monitored/Exited(atom/movable/O)
/area/ai_monitored/New()
/area/ai_monitored/storage/emergency
/area/ai_monitored/storage/eva
/area/ai_monitored/storage/secure
/area/airtunnel1/
/area/alien
/area/arrival
/area/arrival/start
/area/assembly/assembly_line
/area/assembly/chargebay
/area/assembly/robotics
/area/assembly/showroom
/area/asteroid
/area/asteroid/artifactroom
/area/asteroid/cave
/area/atmos
/area/awaymission
/area/awaymission/BMPship1
/area/awaymission/BMPship2
/area/awaymission/BMPship3
/area/awaymission/beach
/area/awaymission/beach/Entered(atom/movable/Obj,atom/OldLoc)
/area/awaymission/beach/Exited(atom/movable/Obj)
/area/awaymission/beach/New()
/area/awaymission/beach/process()
/area/awaymission/clownplanet/mine
/area/awaymission/clownplanet/miningtown
/area/awaymission/desert
/area/awaymission/example
/area/awaymission/listeningpost
/area/awaymission/spacebattle
/area/awaymission/spacebattle/cruiser
/area/awaymission/spacebattle/secret
/area/awaymission/spacebattle/syndicate1
/area/awaymission/spacebattle/syndicate2
/area/awaymission/spacebattle/syndicate3
/area/awaymission/spacebattle/syndicate4
/area/awaymission/spacebattle/syndicate5
/area/awaymission/spacebattle/syndicate6
/area/awaymission/spacebattle/syndicate7
/area/awaymission/wwgov
/area/awaymission/wwmines
/area/awaymission/wwrefine
/area/awaymission/wwvault
/area/awaymission/wwvaultdoors
/area/beach
/area/beach/Entered(atom/movable/Obj,atom/OldLoc)
/area/beach/Exited(atom/movable/Obj)
/area/beach/New()
/area/beach/process()
/area/blueshield
/area/bridge
/area/bridge/meeting_room
/area/centcom
/area/centcom/control
/area/centcom/creed
/area/centcom/evac
/area/centcom/ferry
/area/centcom/holding
/area/centcom/living
/area/centcom/shuttle
/area/centcom/specops
/area/centcom/suppy
/area/centcom/test
/area/chapel/main
/area/chapel/office
/area/civilian/barber
/area/civilian/clothing
/area/clear_usage()
/area/comms
/area/construction
/area/construction/Storage
/area/construction/hallway
/area/construction/qmaint
/area/construction/quarters
/area/construction/solars
/area/construction/solarscontrol
/area/construction/supplyshuttle
/area/copy_contents_to(var/area/A , var/platingRequired = 0 )
/area/copy_turfs_to(var/area/A , var/platingRequired = 0 )
/area/crew_quarters
/area/crew_quarters/bar
/area/crew_quarters/cafeteria
/area/crew_quarters/captain
/area/crew_quarters/chief
/area/crew_quarters/courtroom
/area/crew_quarters/fitness
/area/crew_quarters/heads
/area/crew_quarters/heads/chief
/area/crew_quarters/heads/cmo
/area/crew_quarters/heads/hop
/area/crew_quarters/heads/hor
/area/crew_quarters/heads/hos
/area/crew_quarters/hor
/area/crew_quarters/hos
/area/crew_quarters/kitchen
/area/crew_quarters/locker
/area/crew_quarters/locker/locker_toilet
/area/crew_quarters/mrchangs
/area/crew_quarters/sleep
/area/crew_quarters/sleep_female
/area/crew_quarters/sleep_female/toilet_female
/area/crew_quarters/sleep_male
/area/crew_quarters/sleep_male/toilet_male
/area/crew_quarters/toilet
/area/derelict
/area/derelict/arrival
/area/derelict/bridge
/area/derelict/bridge/access
/area/derelict/bridge/ai_upload
/area/derelict/crew_quarters
/area/derelict/eva
/area/derelict/hallway/primary
/area/derelict/hallway/secondary
/area/derelict/medical
/area/derelict/medical/chapel
/area/derelict/medical/morgue
/area/derelict/secret
/area/derelict/ship
/area/derelict/singularity_engine
/area/derelict/solar_control
/area/derelict/storage/engine_storage
/area/derelict/storage/equipment
/area/derelict/storage/storage_access
/area/derelict/teleporter
/area/djstation
/area/djstation/solars
/area/dummy/
/area/dynamic
/area/dynamic/destination
/area/dynamic/destination/lobby
/area/dynamic/source
/area/dynamic/source/lobby_bar
/area/dynamic/source/lobby_disco
/area/dynamic/source/lobby_russian
/area/engine
/area/engine/
/area/engine/atmos_storage
/area/engine/aux_control
/area/engine/break_room
/area/engine/chiefs_office
/area/engine/construction_storage
/area/engine/control
/area/engine/electrical_storage
/area/engine/engine_monitoring
/area/engine/engine_smes
/area/engine/engineering
/area/engine/engineering/poweralert(var/state, var/source)
/area/engine/fore
/area/engine/generators
/area/engine/hallway
/area/engine/locker
/area/engine/mechanic_workshop
/area/engine/port_gyro_bay
/area/engine/reactor_airlock
/area/engine/reactor_core
/area/engine/reactor_fuel_ports
/area/engine/reactor_fuel_storage
/area/engine/reactor_gas
/area/engine/starboard_gyro_bay
/area/engine/storage
/area/engine/turbine_control
/area/firealert()
/area/firereset()
/area/gateway
/area/generic
/area/get_apc()
/area/gravitychange(var/gravitystate = 0, var/area/A)
/area/hallway/primary/aft
/area/hallway/primary/central
/area/hallway/primary/central/east
/area/hallway/primary/central/ne
/area/hallway/primary/central/north
/area/hallway/primary/central/nw
/area/hallway/primary/central/se
/area/hallway/primary/central/south
/area/hallway/primary/central/sw
/area/hallway/primary/central/west
/area/hallway/primary/fore
/area/hallway/primary/port
/area/hallway/primary/port/east
/area/hallway/primary/port/west
/area/hallway/primary/starboard
/area/hallway/primary/starboard/east
/area/hallway/primary/starboard/west
/area/hallway/secondary/construction
/area/hallway/secondary/entry
/area/hallway/secondary/entry/louge
/area/hallway/secondary/entry/north
/area/hallway/secondary/entry/south
/area/hallway/secondary/exit
/area/holodeck
/area/holodeck/alphadeck
/area/holodeck/source_basketball
/area/holodeck/source_beach
/area/holodeck/source_boxingcourt
/area/holodeck/source_burntest
/area/holodeck/source_desert
/area/holodeck/source_emptycourt
/area/holodeck/source_meetinghall
/area/holodeck/source_picnicarea
/area/holodeck/source_plating
/area/holodeck/source_snowfield
/area/holodeck/source_space
/area/holodeck/source_theatre
/area/holodeck/source_thunderdomecourt
/area/holodeck/source_wildlife
/area/hydroponics
/area/janitor/
/area/jungle
/area/jungle/crash_ship_clean
/area/jungle/crash_ship_four
/area/jungle/crash_ship_one
/area/jungle/crash_ship_source
/area/jungle/crash_ship_three
/area/jungle/crash_ship_two
/area/jungle/temple_five
/area/jungle/temple_four
/area/jungle/temple_one
/area/jungle/temple_six
/area/jungle/temple_three
/area/jungle/temple_two
/area/lawoffice
/area/library
/area/maintenance/aft
/area/maintenance/apmaint
/area/maintenance/asmaint
/area/maintenance/asmaint2
/area/maintenance/atmos_control
/area/maintenance/auxsolarport
/area/maintenance/auxsolarstarboard
/area/maintenance/disposal
/area/maintenance/fore
/area/maintenance/fpmaint
/area/maintenance/fpmaint2
/area/maintenance/fsmaint
/area/maintenance/fsmaint2
/area/maintenance/incinerator
/area/maintenance/maintcentral
/area/maintenance/port
/area/maintenance/portsolar
/area/maintenance/starboard
/area/maintenance/starboardsolar
/area/maintenance/storage
/area/medical/biostorage
/area/medical/chemistry
/area/medical/cmo
/area/medical/cmostore
/area/medical/cryo
/area/medical/exam_room
/area/medical/genetics
/area/medical/genetics_cloning
/area/medical/iso_access
/area/medical/medbay
/area/medical/medbay2
/area/medical/medbay3
/area/medical/medbreak
/area/medical/morgue
/area/medical/patient_a
/area/medical/patient_b
/area/medical/patient_c
/area/medical/patients_rooms
/area/medical/psych
/area/medical/reception
/area/medical/research
/area/medical/research_shuttle_dock
/area/medical/robotics
/area/medical/sleeper
/area/medical/surgery
/area/medical/surgeryobs
/area/medical/virology
/area/medical/ward
/area/mine
/area/mine/abandoned
/area/mine/cafeteria
/area/mine/eva
/area/mine/explored
/area/mine/hydroponics
/area/mine/living_quarters
/area/mine/lobby
/area/mine/maintenance
/area/mine/north_outpost
/area/mine/production
/area/mine/sleeper
/area/mine/storage
/area/mine/unexplored
/area/mine/west_outpost
/area/mint
/area/move_contents_to(var/area/A, var/turftoleave=null, var/direction = null)
/area/ninja
/area/ninja/holding
/area/ninja/outpost
/area/ntrep
/area/partyalert()
/area/partyreset()
/area/planet/clown
/area/power_change()
/area/poweralert(var/state, var/obj/source as obj)
/area/powered(var/chan)
/area/prison
/area/prison/arrival_airlock
/area/prison/cell_block/A
/area/prison/cell_block/B
/area/prison/cell_block/C
/area/prison/closet
/area/prison/control
/area/prison/crew_quarters
/area/prison/hallway/aft
/area/prison/hallway/fore
/area/prison/hallway/port
/area/prison/hallway/starboard
/area/prison/medical
/area/prison/medical_research
/area/prison/morgue
/area/prison/podbay
/area/prison/rec_room
/area/prison/solar
/area/prison/solar_control
/area/prison/solitary
/area/quartermaster
/area/quartermaster/mechbay
/area/quartermaster/miningdock
/area/quartermaster/miningstorage
/area/quartermaster/office
/area/quartermaster/qm
/area/quartermaster/sorting
/area/quartermaster/storage
/area/radiation_alert()
/area/readyalert()
/area/readyreset()
/area/research_outpost
/area/research_outpost/anomaly
/area/research_outpost/atmos
/area/research_outpost/entry
/area/research_outpost/gearstore
/area/research_outpost/hallway
/area/research_outpost/harvesting
/area/research_outpost/iso1
/area/research_outpost/iso2
/area/research_outpost/iso3
/area/research_outpost/longtermstorage
/area/research_outpost/maint
/area/research_outpost/maintstore1
/area/research_outpost/maintstore2
/area/research_outpost/med
/area/research_outpost/power
/area/research_outpost/sample
/area/research_outpost/spectro
/area/research_outpost/tempstorage
/area/reset_radiation_alert()
/area/secret/gaybar
/area/security/armoury
/area/security/armoury/gamma
/area/security/brig
/area/security/checkpoint
/area/security/checkpoint/engineering
/area/security/checkpoint/medical
/area/security/checkpoint/science
/area/security/checkpoint/supply
/area/security/checkpoint2
/area/security/detectives_office
/area/security/hos
/area/security/lobby
/area/security/main
/area/security/nuke_storage
/area/security/prison
/area/security/processing
/area/security/range
/area/security/vacantoffice
/area/security/vacantoffice2
/area/security/warden
/area/server
/area/shuttle
/area/shuttle/administration/centcom
/area/shuttle/administration/station
/area/shuttle/alien/base
/area/shuttle/alien/mine
/area/shuttle/arrival
/area/shuttle/arrival/pre_game
/area/shuttle/arrival/station
/area/shuttle/escape
/area/shuttle/escape/centcom
/area/shuttle/escape/station
/area/shuttle/escape/transit
/area/shuttle/escape_pod1
/area/shuttle/escape_pod1/centcom
/area/shuttle/escape_pod1/station
/area/shuttle/escape_pod1/transit
/area/shuttle/escape_pod2
/area/shuttle/escape_pod2/centcom
/area/shuttle/escape_pod2/station
/area/shuttle/escape_pod2/transit
/area/shuttle/escape_pod3
/area/shuttle/escape_pod3/centcom
/area/shuttle/escape_pod3/station
/area/shuttle/escape_pod3/transit
/area/shuttle/escape_pod5
/area/shuttle/escape_pod5/centcom
/area/shuttle/escape_pod5/station
/area/shuttle/escape_pod5/transit
/area/shuttle/gamma/space
/area/shuttle/gamma/station
/area/shuttle/mining
/area/shuttle/mining/outpost
/area/shuttle/mining/station
/area/shuttle/prison/
/area/shuttle/prison/prison
/area/shuttle/prison/station
/area/shuttle/research
/area/shuttle/research/outpost
/area/shuttle/research/station
/area/shuttle/salvage
/area/shuttle/salvage/abandoned_ship
/area/shuttle/salvage/arrivals
/area/shuttle/salvage/clown_asteroid
/area/shuttle/salvage/commssat
/area/shuttle/salvage/derelict
/area/shuttle/salvage/djstation
/area/shuttle/salvage/east
/area/shuttle/salvage/mining
/area/shuttle/salvage/north
/area/shuttle/salvage/south
/area/shuttle/salvage/start
/area/shuttle/salvage/trading_post
/area/shuttle/salvage/transit
/area/shuttle/siberia
/area/shuttle/siberia/outpost
/area/shuttle/siberia/station
/area/shuttle/specops/centcom
/area/shuttle/specops/station
/area/shuttle/syndicate_elite/mothership
/area/shuttle/syndicate_elite/station
/area/shuttle/thunderdome
/area/shuttle/thunderdome/grnshuttle
/area/shuttle/thunderdome/grnshuttle/dome
/area/shuttle/thunderdome/grnshuttle/station
/area/shuttle/thunderdome/redshuttle
/area/shuttle/thunderdome/redshuttle/dome
/area/shuttle/thunderdome/redshuttle/station
/area/shuttle/transport1/centcom
/area/shuttle/transport1/station
/area/shuttle/vox/station
/area/solar
/area/solar/aft
/area/solar/auxport
/area/solar/auxstarboard
/area/solar/derelict_aft
/area/solar/derelict_starboard
/area/solar/fore
/area/solar/port
/area/solar/starboard
/area/start
/area/storage/art
/area/storage/autolathe
/area/storage/auxillary
/area/storage/emergency
/area/storage/emergency2
/area/storage/eva
/area/storage/primary
/area/storage/secure
/area/storage/tech
/area/storage/testroom
/area/storage/tools
/area/supply/dock
/area/supply/station
/area/syndicate_mothership
/area/syndicate_mothership/control
/area/syndicate_mothership/elite_squad
/area/syndicate_station
/area/syndicate_station/commssat
/area/syndicate_station/mining
/area/syndicate_station/north
/area/syndicate_station/northeast
/area/syndicate_station/northwest
/area/syndicate_station/south
/area/syndicate_station/southeast
/area/syndicate_station/southwest
/area/syndicate_station/start
/area/syndicate_station/transit
/area/tcommsat/chamber
/area/tcommsat/computer
/area/tcommsat/entrance
/area/tcommsat/lounge
/area/tdome
/area/tdome/tdome1
/area/tdome/tdome2
/area/tdome/tdomeadmin
/area/tdome/tdomeobserve
/area/teleporter
/area/thunk(var/mob/living/carbon/human/M)
/area/toxins/hallway
/area/toxins/lab
/area/toxins/misc_lab
/area/toxins/mixing
/area/toxins/rdoffice
/area/toxins/server
/area/toxins/storage
/area/toxins/supermatter
/area/toxins/telesci
/area/toxins/test_area
/area/toxins/xenobiology
/area/turret_protected
/area/turret_protected/
/area/turret_protected/AIsatextAP
/area/turret_protected/AIsatextAS
/area/turret_protected/AIsatextFP
/area/turret_protected/AIsatextFS
/area/turret_protected/Entered(O)
/area/turret_protected/Exited(O)
/area/turret_protected/NewAIMain
/area/turret_protected/ai
/area/turret_protected/ai_upload
/area/turret_protected/ai_upload_foyer
/area/turret_protected/aisat
/area/turret_protected/aisat_interior
/area/turret_protected/subjectDied(target)
/area/turret_protected/tcomeast
/area/turret_protected/tcomfoyer
/area/turret_protected/tcomsat
/area/turret_protected/tcomwest
/area/updateDangerLevel()
/area/updateicon()
/area/usage(var/chan)
/area/use_battery_power(var/amount, var/chan)
/area/use_power(var/amount, var/chan)
/area/vox_station/mining
/area/vox_station/northeast_solars
/area/vox_station/northwest_solars
/area/vox_station/southeast_solars
/area/vox_station/southwest_solars
/area/vox_station/transit
/area/wizard_station
/area/wreck/ai
/area/wreck/bridge
/area/wreck/engineering
/area/wreck/main
/area/xenos_station/north
/area/xenos_station/northeast
/area/xenos_station/northwest
/area/xenos_station/south
/area/xenos_station/southeast
/area/xenos_station/southwest
/area/xenos_station/start
/area/xenos_station/transit
/atan2(x, y)
/atom
/atom/AIAltClick()
/atom/AICtrlClick()
/atom/AIShiftClick()
/atom/Adjacent(var/atom/neighbor)
/atom/AltClick(var/mob/user)
/atom/Beam(atom/BeamTarget,icon_state="b_beam",icon='icons/effects/beam.dmi',time=50, maxdistance=10)
/atom/Bumped(AM as mob|obj)
/atom/CanPass(atom/movable/mover, turf/target, height=1.5, air_group = 0)
/atom/CheckExit()
/atom/CheckParts()
/atom/Click(location,control,params)
/atom/CtrlClick(var/mob/user)
/atom/DblClick()
/atom/DblClick(location,control,params)
/atom/Del()
/atom/Destroy()
/atom/GetAllContents(searchDepth = 5)
/atom/GetTypeInAllContents(typepath)
/atom/HasProximity(atom/movable/AM as mob|obj)
/atom/MouseDrop(atom/over)
/atom/MouseDrop_T(atom/dropping, mob/user)
/atom/Read(savefile/S)
/atom/SetLuminosity(new_luminosity, max_luminosity = 12)
/atom/SetOpacity(var/new_opacity)
/atom/ShiftClick(var/mob/user)
/atom/UpdateAffectingLights()
/atom/Write(savefile/S)
/atom/add_blood(mob/living/carbon/human/M as mob)
/atom/add_fibers(mob/living/carbon/human/M)
/atom/add_fingerprint(mob/living/M as mob)
/atom/add_hiddenprint(mob/living/M as mob)
/atom/add_poop_floor(mob/living/carbon/M as mob)
/atom/add_vomit_floor(mob/living/carbon/M as mob, var/toxvomit = 0)
/atom/allow_drop()
/atom/assume_air(datum/gas_mixture/giver)
/atom/attack_admin(mob/user as mob)
/atom/attack_ai(mob/user as mob)
/atom/attack_alien(mob/user as mob)
/atom/attack_animal(mob/user as mob)
/atom/attack_ghost(mob/user as mob)
/atom/attack_hand(mob/user as mob)
/atom/attack_larva(mob/user as mob)
/atom/attack_paw(mob/user as mob)
/atom/attack_robot(mob/user as mob)
/atom/attack_self_tk(mob/user)
/atom/attack_slime(mob/user as mob)
/atom/attack_tk(mob/user)
/atom/attackby(obj/item/W, mob/user)
/atom/auto_turn()
/atom/blob_act()
/atom/bullet_act(var/obj/item/projectile/Proj)
/atom/c_airblock(turf/other)
/atom/check_eye(user as mob)
/atom/checkpass(passflag)
/atom/clean_blood()
/atom/create_reagents(var/max_vol)
/atom/cult_log(var/message)
/atom/emp_act(var/severity)
/atom/ex_act()
/atom/fire_act()
/atom/get_global_map_pos()
/atom/hitby(atom/movable/AM as mob|obj)
/atom/in_contents_of(container)
/atom/investigate_log(var/message, var/subject)
/atom/is_open_container()
/atom/laserhit(L as obj)
/atom/meteorhit(obj/meteor as obj)
/atom/movable
/atom/movable/Adjacent(var/atom/neighbor)
/atom/movable/Bump(atom/A)
/atom/movable/Bump(var/atom/A as mob|obj|turf|area, yes)
/atom/movable/Crossed(atom/movable/AM)
/atom/movable/CtrlClick(var/mob/user)
/atom/movable/Destroy()
/atom/movable/GotoAirflowDest(n)
/atom/movable/Move()
/atom/movable/Move(NewLoc, direct)
/atom/movable/New()
/atom/movable/RepelAirflowDest(n)
/atom/movable/airflow_hit(atom/A)
/atom/movable/attackby(obj/item/W, mob/user)
/atom/movable/canSingulothPull(var/obj/machinery/singularity/singulo)
/atom/movable/check_airflow_movable(n)
/atom/movable/forceMove(atom/destination)
/atom/movable/hit_check(var/speed)
/atom/movable/initialize()
/atom/movable/overlay
/atom/movable/overlay/New()
/atom/movable/overlay/attack_hand(a, b, c)
/atom/movable/overlay/attack_paw(a, b, c)
/atom/movable/overlay/attackby(a, b)
/atom/movable/pipe_eject(var/direction)
/atom/movable/proc/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/atom/movable/resetVariables()
/atom/movable/throw_at(atom/target, range, speed)
/atom/movable/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/atom/movable/var/tmp/turf/airflow_dest
/atom/movable/verb/pull()
/atom/move_camera_by_click()
/atom/on_reagent_change()
/atom/proc/add_fibers(mob/living/carbon/human/M)
/atom/relativewall()
/atom/relativewall_neighbours()
/atom/relaymove()
/atom/remove_air(amount)
/atom/return_air()
/atom/search_contents_for(path,list/filter_path=null)
/atom/telecomms_process()
/atom/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/atom/test_telecomms()
/atom/throw_impact(atom/hit_atom, var/speed)
/atom/transfer_fingerprints_to(var/atom/A)
/atom/ul_FalloffAmount(var/atom/ref)
/atom/var/list/suit_fibers
/atom/verb/examine()
/atom/verb/point()
/atom/visible_message(var/message, var/blind_message)
/attempt_account_access_nosec(var/attempt_account_number)
/ban_unban_log_save(var/formatted_log)
/between(var/low, var/middle, var/high)
/biomass_infestation()
/bioproc_empath(var/mob/living/carbon/M in range(7,usr))
/bioproc_melt()
/bitfield2list(bitfield = 0, list/wordlist)
/blood_incompatible(donor,receiver)
/build_click(var/mob/user, buildmode, params, var/obj/object)
/build_composite_icon(atom/A)
/callHook(hook, list/args=null)
/call_shuttle_proc(var/mob/user)
/camera_sort(list/L)
/can_operate(mob/living/carbon/M)
/can_see(var/atom/source, var/atom/target, var/length=5)
/capitalize(var/t as text)
/captain_announce(var/text)
/cardinalrange(var/center)
/carp_migration()
/change_command_name(var/name)
/cheap_hypotenuse(Ax,Ay,Bx,By)
/cheap_pythag(var/dx, var/dy)
/checkEvent()
/check_complex_placement(var/turf/T,var/size_x,var/size_y,var/ignore_walls=0)
/check_for_newscaster_updates(type)
/check_if_greater_rights_than(client/other)
/check_rights(rights_required, show_msg=1)
/check_role_table(name, list/members, admins, show_objectives=1)
/check_role_table_row(mob/M, admins=src, show_objectives)
/check_tank_exists(parent_tank, var/mob/living/carbon/human/M, var/obj/O)
/check_target_facings(mob/living/initator, mob/living/target)
/check_zone(zone)
/checkhtml(var/t)
/church_name()
/circlerange(center=usr,radius=3)
/circlerangeturfs(center=usr,radius=3)
/circleview(center=usr,radius=3)
/circleviewturfs(center=usr,radius=3)
/clearlist(list/list)
/client
/client/AIMove(n, direct, var/mob/living/silicon/ai/user)
/client/AllowUpload(filename, filelength)
/client/Cell()
/client/Center()
/client/DB_ban_panel()
/client/DB_job_unlock(var/job,var/cost)
/client/DB_species_unlock(var/species,var/cost)
/client/Debug2()
/client/Del()
/client/East()
/client/Getkey()
/client/Getmob(var/mob/M in mob_list)
/client/Jump(var/area/A in return_sorted_areas())
/client/Move(n, direct)
/client/Move_object(direct)
/client/New(TopicData)
/client/North()
/client/Northeast()
/client/Northwest()
/client/Process_Grab()
/client/Process_Incorpmove(direct)
/client/Set_Holiday(T as text|null)
/client/South()
/client/Southeast()
/client/Southwest()
/client/Test_ZAS_Connection(var/turf/simulated/T as turf)
/client/ToRban(task in list("update","toggle","show","remove","remove all","find"))
/client/Topic(href, href_list, hsrc)
/client/West()
/client/ZASSettings()
/client/ZoneTick()
/client/Zone_Info(turf/T as null|turf)
/client/add_admin_verbs()
/client/add_gun_icons()
/client/admin_call_shuttle()
/client/admin_cancel_shuttle()
/client/admin_deny_shuttle()
/client/admin_ghost()
/client/admin_memo(task in list("write","show","delete"))
/client/admin_memo_delete()
/client/admin_memo_show()
/client/admin_memo_write()
/client/air_report()
/client/air_status(turf/target as turf)
/client/atmosscan()
/client/break_all_air_groups()
/client/browse_files(root="data/logs/", max_iterations=10, list/valid_extensions=list(".txt",".log",".htm"))
/client/callproc()
/client/camera_view()
/client/check_ai_laws()
/client/check_antagonists()
/client/check_customitem_activity()
/client/check_words()
/client/cinematic(var/cinematic as anything in list("explosion",null))
/client/cmd_admin_add_freeform_ai_law()
/client/cmd_admin_add_random_ai_law()
/client/cmd_admin_alienize(var/mob/M in mob_list)
/client/cmd_admin_animalize(var/mob/M in mob_list)
/client/cmd_admin_areatest()
/client/cmd_admin_attack_log(mob/M as mob in mob_list)
/client/cmd_admin_change_custom_event()
/client/cmd_admin_check_contents(mob/living/M as mob in mob_list)
/client/cmd_admin_create_centcom_report()
/client/cmd_admin_delete(atom/O as obj|mob|turf in world)
/client/cmd_admin_direct_narrate(var/mob/M)
/client/cmd_admin_dress(var/mob/living/carbon/human/M in mob_list)
/client/cmd_admin_drop_everything(mob/M as mob in mob_list)
/client/cmd_admin_emp(atom/O as obj|mob|turf in world)
/client/cmd_admin_explosion(atom/O as obj|mob|turf in world)
/client/cmd_admin_gib(mob/M as mob in mob_list)
/client/cmd_admin_gib_self()
/client/cmd_admin_godmode(mob/M as mob in mob_list)
/client/cmd_admin_grantfullaccess(var/mob/M in mob_list)
/client/cmd_admin_irc_pm()
/client/cmd_admin_list_open_jobs()
/client/cmd_admin_ninjafy(var/mob/M in player_list)
/client/cmd_admin_pm(var/client/C, var/msg)
/client/cmd_admin_pm_context(mob/M as mob in mob_list)
/client/cmd_admin_pm_panel()
/client/cmd_admin_prison(mob/M as mob in mob_list)
/client/cmd_admin_rejuvenate(mob/living/M as mob in mob_list)
/client/cmd_admin_robotize(var/mob/M in mob_list)
/client/cmd_admin_say(msg as text)
/client/cmd_admin_slimeize(var/mob/M in mob_list)
/client/cmd_admin_subtle_message(mob/M as mob in mob_list)
/client/cmd_admin_toggle_block(var/mob/M,var/block)
/client/cmd_admin_world_narrate()
/client/cmd_assume_direct_control(var/mob/M in mob_list)
/client/cmd_debug_del_all()
/client/cmd_debug_make_powernets()
/client/cmd_debug_mob_lists()
/client/cmd_debug_tog_aliens()
/client/cmd_mass_modify_object_variables(atom/A, var/var_name)
/client/cmd_mentor_check_new_players()
/client/cmd_mod_say(msg as text)
/client/cmd_modify_ticker_variables()
/client/cmd_switch_radio()
/client/colorooc()
/client/count_objects_all()
/client/count_objects_on_z_level()
/client/create_death_commando(obj/spawn_location, leader_selected = 0)
/client/create_honksquad(obj/spawn_location, honk_leader_selected = 0)
/client/create_response_team(obj/spawn_location, leader_selected = 0, commando_name)
/client/create_syndicate_death_commando(obj/spawn_location, syndicate_leader_selected = 0)
/client/deadmin()
/client/deadmin_self()
/client/debug_controller(controller in list("Master","Failsafe","Ticker","Lighting","Air","Jobs","Sun","Radio","Supply Shuttle","Emergency Shuttle","Configuration","pAI", "Cameras","Garbage", "Crafting"))
/client/debug_variable(name, value, level, var/datum/DA = null)
/client/debug_variables(datum/D in world)
/client/delbook()
/client/disable_communication()
/client/disable_movement()
/client/do_not_use_these()
/client/drop_bomb()
/client/dsay(msg as text)
/client/edit_admin_permissions()
/client/editappear(mob/living/carbon/human/M as mob in world)
/client/enable_debug_verbs()
/client/everyone_random()
/client/file_spam_check()
/client/fix_next_move()
/client/forceEvent(var/type in allEvents)
/client/free_slot()
/client/game_panel()
/client/getFiles()
/client/get_ghosts(var/notify = 0,var/what = 2)
/client/getruntimelog()
/client/getserverlog()
/client/gib_money()
/client/give_disease(mob/T as mob in mob_list)
/client/give_disease2(mob/T as mob in mob_list)
/client/give_spell(mob/T as mob in mob_list)
/client/giveruntimelog()
/client/global_man_up()
/client/handle_spam_prevention(var/message, var/mute_type)
/client/hide_most_verbs()
/client/hide_verbs()
/client/honksquad()
/client/intercom_view()
/client/investigate_show( subject in list("hrefs","notes","singulo") )
/client/invisimin()
/client/is_afk(duration=3000)
/client/jobbans()
/client/jump_to_dead_group()
/client/jumptocoord(tx as num, ty as num, tz as num)
/client/jumptokey()
/client/jumptomob(var/mob/M in mob_list)
/client/jumptoturf(var/turf/T in world)
/client/kaboom()
/client/karmacharge(var/cost)
/client/karmashopmenu()
/client/kill_air()
/client/kill_air_processing()
/client/kill_airgroup()
/client/kill_pipe_processing()
/client/log_client_to_db()
/client/make_sound(var/obj/O in world)
/client/makepAI(var/turf/T in mob_list)
/client/man_up(mob/T as mob in mob_list)
/client/massmodify_variables(var/atom/O, var/var_name = "", var/method = 0)
/client/mimespeak()
/client/mimewall()
/client/mod_list(var/list/L)
/client/mod_list_add(var/list/L)
/client/mod_list_add_ass()
/client/mod_panel()
/client/modify_variables(var/atom/O, var/param_var_name = null, var/autodetect_class = 0)
/client/object_talk(var/msg as text)
/client/one_click_antag()
/client/only_one()
/client/only_one_team()
/client/pdiff()
/client/play_local_sound(S as sound)
/client/play_sound(S as sound)
/client/player_panel()
/client/player_panel_new()
/client/playernotes()
/client/playtitlemusic()
/client/powerdebug()
/client/preload_vox()
/client/print_jobban_old()
/client/print_jobban_old_filter()
/client/proc/count_objects_all()
/client/proc/disable_communication()
/client/proc/kill_air_processing()
/client/proc/update_mob_sprite(mob/living/carbon/human/H as mob)
/client/qdel_toggle()
/client/radio_report()
/client/reactivate_camera(obj/machinery/camera/C as obj in cameranet.viewpoints)
/client/regroup_all_air_groups()
/client/reload_admins()
/client/remove_admin_verbs()
/client/remove_gun_icons()
/client/respawn_character()
/client/response_team()
/client/restart_controller(controller in list("Master","Failsafe","Lighting","Supply Shuttle"))
/client/sec_camera_report()
/client/secrets()
/client/send_resources()
/client/send_space_ninja()
/client/sendmob(var/mob/M in sortmobs())
/client/set_ooc(newColor as color)
/client/show_verbs()
/client/splash()
/client/startSinglo()
/client/stealth()
/client/strike_team()
/client/syndicate_strike_team()
/client/ticklag()
/client/toggle_antagHUD_restrictions()
/client/toggle_antagHUD_use()
/client/toggle_hear_radio()
/client/toggle_log_hrefs()
/client/toggle_random_events()
/client/toggle_view_range()
/client/toggleadminhelpsound()
/client/toggleattacklogs()
/client/togglebuildmodeself()
/client/toggledebuglogs()
/client/toggledrones()
/client/toggleprayers()
/client/triple_ai()
/client/unban_panel()
/client/update_mob_sprite(mob/living/carbon/human/H as mob)
/client/update_world()
/client/upgrade_camera(obj/machinery/camera/C as obj in cameranet.viewpoints)
/client/vampire/vampire_bats()
/client/vampire/vampire_cloak()
/client/vampire/vampire_disease()
/client/vampire/vampire_enthrall()
/client/vampire/vampire_glare()
/client/vampire/vampire_hypnotise()
/client/vampire/vampire_jaunt()
/client/vampire/vampire_rejuvinate()
/client/vampire/vampire_screech()
/client/vampire/vampire_shadowstep()
/client/vampire/vampire_shapeshift()
/client/var
/client/var/list/zone_debug_images
/client/verb/AllowTargetClick()
/client/verb/AllowTargetMove()
/client/verb/AllowTargetRun()
/client/verb/JoinResponseTeam()
/client/verb/ToggleGunMode()
/client/verb/Toggle_Soundscape()
/client/verb/adminhelp(msg as text)
/client/verb/adminwho()
/client/verb/attack_self()
/client/verb/change_ui()
/client/verb/change_volume()
/client/verb/changerank(newrank in admin_ranks)
/client/verb/changerights(newrights as num)
/client/verb/changes()
/client/verb/check_karma()
/client/verb/cmd_view_custom_event()
/client/verb/deadchat()
/client/verb/delete_key_pressed()
/client/verb/donate()
/client/verb/drop_item()
/client/verb/exittcs()
/client/verb/forum()
/client/verb/hotkeys_help()
/client/verb/karmashop()
/client/verb/listen_looc()
/client/verb/listen_ooc()
/client/verb/looc(msg as text)
/client/verb/nanoclose(var/uiref as text)
/client/verb/ooc(msg as text)
/client/verb/rules()
/client/verb/swap_hand()
/client/verb/tcsclearmem()
/client/verb/tcscompile()
/client/verb/tcsrevert()
/client/verb/tcsrun()
/client/verb/tcssave()
/client/verb/toggle_be_special(role in be_special_flags)
/client/verb/toggle_ghost_ears()
/client/verb/toggle_ghost_radio()
/client/verb/toggle_ghost_sight()
/client/verb/toggle_media()
/client/verb/toggle_throw_mode()
/client/verb/togglemidis()
/client/verb/toggletitlemusic()
/client/verb/togglevoices()
/client/verb/who()
/client/verb/wiki()
/client/verb/windowclose(var/atomref as text)
/client/verb/windowclosed(var/atomref as text)
/client/verify_karma()
/client/view_var_Topic(href, href_list, hsrc)
/client/warn(warned_ckey)
/cmd_admin_mute(mob/M as mob, mute_type, automute = 0)
/color_windows(area = "common")
/color_windows_init()
/command_alert(var/text, var/title = "")
/command_name()
/communications_blackout(var/silent = 1)
/connection/New(turf/simulated/A, turf/simulated/B)
/connection/direct()
/connection/erase()
/connection/mark_direct()
/connection/mark_indirect()
/connection/mark_space()
/connection/update()
/connection/valid()
/connection/var/connection_edge/edge
/connection/var/turf/simulated/A
/connection/var/turf/simulated/B
/connection/var/zone/zoneA
/connection/var/zone/zoneB
/connection_edge/New()
/connection_edge/add_connection(connection/c)
/connection_edge/contains_zone(zone/Z)
/connection_edge/erase()
/connection_edge/flow(list/movable, differential, repelled)
/connection_edge/remove_connection(connection/c)
/connection_edge/tick()
/connection_edge/unsimulated/New(zone/A, turf/B)
/connection_edge/unsimulated/add_connection(connection/c)
/connection_edge/unsimulated/contains_zone(zone/Z)
/connection_edge/unsimulated/erase()
/connection_edge/unsimulated/remove_connection(connection/c)
/connection_edge/unsimulated/tick()
/connection_edge/unsimulated/var/datum/gas_mixture/air
/connection_edge/unsimulated/var/turf/B
/connection_edge/var/zone/A
/connection_edge/zone/New(zone/A, zone/B)
/connection_edge/zone/add_connection(connection/c)
/connection_edge/zone/contains_zone(zone/Z)
/connection_edge/zone/erase()
/connection_edge/zone/get_connected_zone(zone/from)
/connection_edge/zone/remove_connection(connection/c)
/connection_edge/zone/tick()
/connection_edge/zone/var/zone/B
/connection_manager/check(connection/c)
/connection_manager/erase_all()
/connection_manager/get(d)
/connection_manager/place(connection/c, d)
/connection_manager/update_all()
/connection_manager/var/connection/D
/connection_manager/var/connection/E
/connection_manager/var/connection/N
/connection_manager/var/connection/S
/connection_manager/var/connection/U
/connection_manager/var/connection/W
/convert2energy(var/M)
/convert2mass(var/E)
/count_by_type(var/list/L, type)
/count_cash(var/list/cash)
/createRandomZlevel()
/create_account(var/new_owner_name = "Default user", var/starting_funds = 0, var/obj/machinery/account_database/source_db)
/create_all_genesequences()
/create_department_account(department)
/create_space_ninja(obj/spawn_point)
/create_station_account()
/create_wormhole(var/turf/enter as turf, var/turf/exit as turf)
/create_xeno(ckey)
/datum
/datum/AI_Module
/datum/AI_Module/large/
/datum/AI_Module/large/disable_rcd
/datum/AI_Module/large/fireproof_core
/datum/AI_Module/large/place_cyborg_transformer
/datum/AI_Module/large/upgrade_turrets
/datum/AI_Module/small/
/datum/AI_Module/small/blackout
/datum/AI_Module/small/interhack
/datum/AI_Module/small/overload_machine
/datum/AI_Module/small/reactivate_camera
/datum/AI_Module/small/upgrade_camera
/datum/TCS_Compiler
/datum/TCS_Compiler/Compile(code as message)
/datum/TCS_Compiler/Run(var/datum/signal/signal)
/datum/admins
/datum/admins/DB_ban_edit(var/banid = null, var/param = null)
/datum/admins/DB_ban_panel(var/playerckey = null, var/adminckey = null, var/playerip = null, var/pban = null, var/tban = null, var/jpban = null, var/jtban = null)
/datum/admins/DB_ban_record(var/bantype, var/mob/banned_mob, var/duration = -1, var/reason, var/job = "", var/rounds = 0, var/banckey = null)
/datum/admins/DB_ban_unban(var/ckey, var/bantype, var/job = "")
/datum/admins/DB_ban_unban_by_id(var/id)
/datum/admins/Game()
/datum/admins/Jobbans()
/datum/admins/New(initial_rank = "Temporary Admin", initial_rights = 0, ckey)
/datum/admins/PlayerNotes()
/datum/admins/PlayerNotesPage(page)
/datum/admins/Secrets()
/datum/admins/Topic(href, href_list)
/datum/admins/access_news_network()
/datum/admins/announce()
/datum/admins/associate(client/C)
/datum/admins/check_antagonists()
/datum/admins/create_mob(var/mob/user)
/datum/admins/create_object(var/mob/user)
/datum/admins/create_syndicate_death_commando(obj/spawn_location, syndicate_leader_selected = 0)
/datum/admins/create_turf(var/mob/user)
/datum/admins/create_vox_raider(obj/spawn_location, leader_chosen = 0)
/datum/admins/delay()
/datum/admins/disassociate()
/datum/admins/edit_admin_permissions()
/datum/admins/immreboot()
/datum/admins/log_admin_permission_modification(var/adm_ckey, var/new_permission)
/datum/admins/log_admin_rank_modification(var/adm_ckey, var/new_rank)
/datum/admins/makeAliens()
/datum/admins/makeChanglings()
/datum/admins/makeCult()
/datum/admins/makeDeathsquad()
/datum/admins/makeMalfAImode()
/datum/admins/makeNukeTeam()
/datum/admins/makeRevs()
/datum/admins/makeSpaceNinja()
/datum/admins/makeTraitors()
/datum/admins/makeVoxRaiders()
/datum/admins/makeWizard()
/datum/admins/one_click_antag()
/datum/admins/output_ai_laws()
/datum/admins/player_has_info(var/key as text)
/datum/admins/player_panel_new()
/datum/admins/player_panel_old()
/datum/admins/quick_create_object(var/mob/user)
/datum/admins/restart()
/datum/admins/show_player_info(var/key as text)
/datum/admins/show_player_panel(var/mob/M in mob_list)
/datum/admins/show_traitor_panel(var/mob/M in mob_list)
/datum/admins/spawn_atom(var/object as text)
/datum/admins/startnow()
/datum/admins/toggleAI()
/datum/admins/toggle_aliens()
/datum/admins/toggle_space_ninja()
/datum/admins/toggleaban()
/datum/admins/toggledsay()
/datum/admins/toggleenter()
/datum/admins/toggleguests()
/datum/admins/toggleooc()
/datum/admins/toggleoocdead()
/datum/admins/toggletintedweldhelmets()
/datum/admins/toggletraitorscaling()
/datum/admins/unbanpanel()
/datum/admins/unjobbanpanel()
/datum/admins/unprison(var/mob/M in mob_list)
/datum/admins/view_atk_log()
/datum/admins/view_txt_log()
/datum/ai_laws
/datum/ai_laws/add_inherent_law(var/law)
/datum/ai_laws/add_ion_law(var/law)
/datum/ai_laws/add_supplied_law(var/number, var/law)
/datum/ai_laws/alienmov
/datum/ai_laws/antimov
/datum/ai_laws/asimov
/datum/ai_laws/asimovpp
/datum/ai_laws/clear_inherent_laws()
/datum/ai_laws/clear_ion_laws()
/datum/ai_laws/clear_supplied_laws()
/datum/ai_laws/custom
/datum/ai_laws/custom/New()
/datum/ai_laws/default/corporate
/datum/ai_laws/default/crewsimov
/datum/ai_laws/default/crewsimovpp
/datum/ai_laws/default/nanotrasen
/datum/ai_laws/default/paladin
/datum/ai_laws/default/robocop
/datum/ai_laws/drone/New()
/datum/ai_laws/malfunction
/datum/ai_laws/malfunction/New()
/datum/ai_laws/ninja_override
/datum/ai_laws/set_zeroth_law(var/law, var/law_borg = null)
/datum/ai_laws/show_laws(var/who)
/datum/ai_laws/syndicate_override
/datum/ai_laws/tyrant
/datum/artifact_effect
/datum/artifact_effect/DoEffectAura(var/atom/holder)
/datum/artifact_effect/DoEffectPulse(var/atom/holder)
/datum/artifact_effect/DoEffectTouch(var/mob/user)
/datum/artifact_effect/New(var/atom/location)
/datum/artifact_effect/ToggleActivate(var/reveal_toggle = 1)
/datum/artifact_effect/UpdateMove()
/datum/artifact_effect/badfeeling
/datum/artifact_effect/badfeeling/DoEffectAura()
/datum/artifact_effect/badfeeling/DoEffectPulse()
/datum/artifact_effect/badfeeling/DoEffectTouch(var/mob/user)
/datum/artifact_effect/cellcharge
/datum/artifact_effect/cellcharge/DoEffectAura()
/datum/artifact_effect/cellcharge/DoEffectPulse()
/datum/artifact_effect/cellcharge/DoEffectTouch(var/mob/user)
/datum/artifact_effect/celldrain
/datum/artifact_effect/celldrain/DoEffectAura()
/datum/artifact_effect/celldrain/DoEffectPulse()
/datum/artifact_effect/celldrain/DoEffectTouch(var/mob/user)
/datum/artifact_effect/cold
/datum/artifact_effect/cold/DoEffectAura()
/datum/artifact_effect/cold/DoEffectTouch(var/mob/user)
/datum/artifact_effect/cold/New()
/datum/artifact_effect/dnaswitch
/datum/artifact_effect/dnaswitch/DoEffectAura()
/datum/artifact_effect/dnaswitch/DoEffectPulse()
/datum/artifact_effect/dnaswitch/DoEffectTouch(var/mob/toucher)
/datum/artifact_effect/dnaswitch/New()
/datum/artifact_effect/emp
/datum/artifact_effect/emp/DoEffectPulse()
/datum/artifact_effect/emp/New()
/datum/artifact_effect/forcefield
/datum/artifact_effect/forcefield/New()
/datum/artifact_effect/forcefield/ToggleActivate()
/datum/artifact_effect/forcefield/UpdateMove()
/datum/artifact_effect/forcefield/process()
/datum/artifact_effect/gasco2
/datum/artifact_effect/gasco2/DoEffectAura()
/datum/artifact_effect/gasco2/DoEffectTouch(var/mob/user)
/datum/artifact_effect/gasco2/New()
/datum/artifact_effect/gasnitro
/datum/artifact_effect/gasnitro/DoEffectAura()
/datum/artifact_effect/gasnitro/DoEffectTouch(var/mob/user)
/datum/artifact_effect/gasnitro/New()
/datum/artifact_effect/gasoxy
/datum/artifact_effect/gasoxy/DoEffectAura()
/datum/artifact_effect/gasoxy/DoEffectTouch(var/mob/user)
/datum/artifact_effect/gasoxy/New()
/datum/artifact_effect/gasplasma
/datum/artifact_effect/gasplasma/DoEffectAura()
/datum/artifact_effect/gasplasma/DoEffectTouch(var/mob/user)
/datum/artifact_effect/gasplasma/New()
/datum/artifact_effect/gassleeping
/datum/artifact_effect/gassleeping/DoEffectAura()
/datum/artifact_effect/gassleeping/DoEffectTouch(var/mob/user)
/datum/artifact_effect/gassleeping/New()
/datum/artifact_effect/goodfeeling
/datum/artifact_effect/goodfeeling/DoEffectAura()
/datum/artifact_effect/goodfeeling/DoEffectPulse()
/datum/artifact_effect/goodfeeling/DoEffectTouch(var/mob/user)
/datum/artifact_effect/heal
/datum/artifact_effect/heal/DoEffectAura()
/datum/artifact_effect/heal/DoEffectPulse()
/datum/artifact_effect/heal/DoEffectTouch(var/mob/toucher)
/datum/artifact_effect/heat
/datum/artifact_effect/heat/DoEffectAura()
/datum/artifact_effect/heat/DoEffectTouch(var/mob/user)
/datum/artifact_effect/heat/New()
/datum/artifact_effect/hurt
/datum/artifact_effect/hurt/DoEffectAura()
/datum/artifact_effect/hurt/DoEffectPulse()
/datum/artifact_effect/hurt/DoEffectTouch(var/mob/toucher)
/datum/artifact_effect/process()
/datum/artifact_effect/radiate
/datum/artifact_effect/radiate/DoEffectAura()
/datum/artifact_effect/radiate/DoEffectPulse()
/datum/artifact_effect/radiate/DoEffectTouch(var/mob/living/user)
/datum/artifact_effect/radiate/New()
/datum/artifact_effect/roboheal
/datum/artifact_effect/roboheal/DoEffectAura()
/datum/artifact_effect/roboheal/DoEffectPulse()
/datum/artifact_effect/roboheal/DoEffectTouch(var/mob/user)
/datum/artifact_effect/roboheal/New()
/datum/artifact_effect/robohurt
/datum/artifact_effect/robohurt/DoEffectAura()
/datum/artifact_effect/robohurt/DoEffectPulse()
/datum/artifact_effect/robohurt/DoEffectTouch(var/mob/user)
/datum/artifact_effect/robohurt/New()
/datum/artifact_effect/sleepy
/datum/artifact_effect/sleepy/DoEffectAura()
/datum/artifact_effect/sleepy/DoEffectPulse()
/datum/artifact_effect/sleepy/DoEffectTouch(var/mob/toucher)
/datum/artifact_effect/sleepy/New()
/datum/artifact_effect/stun
/datum/artifact_effect/stun/DoEffectAura()
/datum/artifact_effect/stun/DoEffectPulse()
/datum/artifact_effect/stun/DoEffectTouch(var/mob/toucher)
/datum/artifact_effect/stun/New()
/datum/artifact_effect/teleport
/datum/artifact_effect/teleport/DoEffectAura()
/datum/artifact_effect/teleport/DoEffectPulse()
/datum/artifact_effect/teleport/DoEffectTouch(var/mob/user)
/datum/artifact_find
/datum/artifact_find/New()
/datum/autopsy_data
/datum/autopsy_data/copy()
/datum/autopsy_data_scanner
/datum/borrowbook
/datum/breach
/datum/breach/update_descriptor()
/datum/browser
/datum/browser/New(nuser, nwindow_id, ntitle = 0, nwidth = 0, nheight = 0, var/atom/nref = null)
/datum/browser/add_content(ncontent)
/datum/browser/add_head_content(nhead_content)
/datum/browser/add_script(name, file)
/datum/browser/add_stylesheet(name, file)
/datum/browser/close()
/datum/browser/get_content()
/datum/browser/get_footer()
/datum/browser/get_header()
/datum/browser/open(var/use_onclose = 1)
/datum/browser/set_content(ncontent)
/datum/browser/set_title(ntitle)
/datum/browser/set_title_buttons(ntitle_buttons)
/datum/browser/set_title_image(ntitle_image)
/datum/browser/set_window_options(nwindow_options)
/datum/bullethole
/datum/bullethole/New(var/obj/item/target/Target, var/pixel_x = 0, var/pixel_y = 0)
/datum/cargoprofile
/datum/cargoprofile/boxes
/datum/cargoprofile/cargo
/datum/cargoprofile/cargo/empty
/datum/cargoprofile/cargo/empty/contains(var/atom/A)
/datum/cargoprofile/cargo/full
/datum/cargoprofile/cargo/full/contains(var/atom/A)
/datum/cargoprofile/cargo/outlet_reaction(var/atom/W,var/turf/D)
/datum/cargoprofile/cargo/unload
/datum/cargoprofile/cargo/unload/contains(var/atom/A)
/datum/cargoprofile/cargo/unload/inlet_reaction(var/obj/W,var/turf/S, var/remaining)
/datum/cargoprofile/chemical
/datum/cargoprofile/clothing
/datum/cargoprofile/contains(var/atom/A)
/datum/cargoprofile/exotics
/datum/cargoprofile/finished
/datum/cargoprofile/finished/contains(var/atom/A)
/datum/cargoprofile/food
/datum/cargoprofile/in_stacker
/datum/cargoprofile/in_stacker/inlet_reaction(var/atom/W,var/turf/S,var/remaining)
/datum/cargoprofile/in_stacker/outlet_reaction(var/atom/W,var/turf/D)
/datum/cargoprofile/inlet_reaction(var/atom/W,var/turf/S,var/remaining)
/datum/cargoprofile/organics
/datum/cargoprofile/outlet_reaction(var/atom/W,var/turf/D)
/datum/cargoprofile/people
/datum/cargoprofile/people/contains(var/atom/A)
/datum/cargoprofile/people/inlet_reaction(var/atom/W,var/turf/S,var/remaining)
/datum/cargoprofile/people/outlet_reaction(var/atom/W,var/turf/D)
/datum/cargoprofile/pressure
/datum/cargoprofile/pressure/empty
/datum/cargoprofile/pressure/empty/contains(var/atom/A)
/datum/cargoprofile/pressure/full
/datum/cargoprofile/pressure/full/contains(var/atom/A)
/datum/cargoprofile/slow
/datum/cargoprofile/slow/inlet_reaction(var/atom/W,var/turf/S,var/remaining)
/datum/cargoprofile/stripping
/datum/cargoprofile/supplies
/datum/cargoprofile/tools
/datum/cargoprofile/trash
/datum/cargoprofile/unary/gibber
/datum/cargoprofile/unary/gibber/contains(var/atom/A)
/datum/cargoprofile/unary/gibber/inlet_reaction(var/atom/W,var/turf/S,var/remaining)
/datum/cargoprofile/unary/gibber/outlet_reaction(var/atom/W,var/turf/D)
/datum/cargoprofile/unary/shredder
/datum/cargoprofile/unary/shredder/cliptags(var/Text)
/datum/cargoprofile/unary/shredder/garble_keeptags(var/Text)
/datum/cargoprofile/unary/shredder/garbletext(var/Text)
/datum/cargoprofile/unary/shredder/outlet_reaction(var/atom/W,var/turf/D)
/datum/cargoprofile/unary/stacker
/datum/cargoprofile/unary/stacker/inlet_reaction(var/atom/W,var/turf/S,var/remaining)
/datum/cargoprofile/unary/stacker/outlet_reaction(var/atom/W,var/turf/D)
/datum/cargoprofile/unary/trainer
/datum/cargoprofile/unary/trainer/contains(var/atom/A)
/datum/cargoprofile/unary/trainer/inlet_reaction(var/atom/W,var/turf/S,var/remaining)
/datum/cargoprofile/unary/trainer/punch(var/mob/living/carbon/human/M,var/maxpunches)
/datum/cargoprofile/weapons
/datum/changeling
/datum/changeling/EvolutionMenu()
/datum/changeling/GetDNA(var/dna_owner)
/datum/changeling/New(var/gender=FEMALE)
/datum/changeling/Topic(href, href_list)
/datum/changeling/purchasePower(var/datum/mind/M, var/Pname, var/remake_verbs = 1)
/datum/changeling/regenerate()
/datum/chatroom
/datum/chatroom/attempt_connect(var/obj/item/device/pda/device, var/obj/password)
/datum/chemical_reaction
/datum/chemical_reaction/acidspit
/datum/chemical_reaction/alkysine
/datum/chemical_reaction/alliescocktail
/datum/chemical_reaction/aloe
/datum/chemical_reaction/amasec
/datum/chemical_reaction/ammonia
/datum/chemical_reaction/analysis_liquid
/datum/chemical_reaction/andalusia
/datum/chemical_reaction/anti_toxin
/datum/chemical_reaction/antifreeze
/datum/chemical_reaction/arithrazine
/datum/chemical_reaction/atomicbomb
/datum/chemical_reaction/b52
/datum/chemical_reaction/bahama_mama
/datum/chemical_reaction/bananahonk
/datum/chemical_reaction/barefoot
/datum/chemical_reaction/beepsky_smash
/datum/chemical_reaction/bicaridine
/datum/chemical_reaction/bilk
/datum/chemical_reaction/black_russian
/datum/chemical_reaction/bloody_mary
/datum/chemical_reaction/booger
/datum/chemical_reaction/brave_bull
/datum/chemical_reaction/brownstar
/datum/chemical_reaction/cafe_latte
/datum/chemical_reaction/changelingsting
/datum/chemical_reaction/cheesewheel
/datum/chemical_reaction/cheesewheel/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/chemsmoke
/datum/chemical_reaction/chemsmoke/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/chloralhydrate
/datum/chemical_reaction/chocolate_bar
/datum/chemical_reaction/chocolate_bar/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/chocolate_bar2
/datum/chemical_reaction/chocolate_bar2/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/citalopram
/datum/chemical_reaction/clonexadone
/datum/chemical_reaction/coffee
/datum/chemical_reaction/condensedcapsaicin
/datum/chemical_reaction/coolant
/datum/chemical_reaction/cryoxadone
/datum/chemical_reaction/cryptobiolin
/datum/chemical_reaction/cuba_libre
/datum/chemical_reaction/demonsblood
/datum/chemical_reaction/density_separated_liquid
/datum/chemical_reaction/dermaline
/datum/chemical_reaction/devilskiss
/datum/chemical_reaction/dexalin
/datum/chemical_reaction/dexalinp
/datum/chemical_reaction/diethylamine
/datum/chemical_reaction/doctor_delight
/datum/chemical_reaction/doughball
/datum/chemical_reaction/driestmartini
/datum/chemical_reaction/emp_pulse
/datum/chemical_reaction/emp_pulse/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/erikasurprise
/datum/chemical_reaction/ethanoloxidation
/datum/chemical_reaction/ethylredoxrazine
/datum/chemical_reaction/explosion_potassium
/datum/chemical_reaction/explosion_potassium/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/flash_powder
/datum/chemical_reaction/flash_powder/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/foam
/datum/chemical_reaction/foam/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/foaming_agent
/datum/chemical_reaction/gargle_blaster
/datum/chemical_reaction/gin_fizz
/datum/chemical_reaction/gin_tonic
/datum/chemical_reaction/glycerol
/datum/chemical_reaction/goldschlager
/datum/chemical_reaction/grog
/datum/chemical_reaction/hell_ramen
/datum/chemical_reaction/hippiesdelight
/datum/chemical_reaction/holy_water
/datum/chemical_reaction/hooch
/datum/chemical_reaction/hot_coco
/datum/chemical_reaction/hot_ramen
/datum/chemical_reaction/hyperzine
/datum/chemical_reaction/hyronalin
/datum/chemical_reaction/icecoffee
/datum/chemical_reaction/iced_beer
/datum/chemical_reaction/iced_beer2
/datum/chemical_reaction/icetea
/datum/chemical_reaction/imidazoline
/datum/chemical_reaction/impedrezene
/datum/chemical_reaction/inaprovaline
/datum/chemical_reaction/irish_coffee
/datum/chemical_reaction/irish_cream
/datum/chemical_reaction/irishcarbomb
/datum/chemical_reaction/ironfoam
/datum/chemical_reaction/ironfoam/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/kahlua
/datum/chemical_reaction/kelotane
/datum/chemical_reaction/kiraspecial
/datum/chemical_reaction/lemonade
/datum/chemical_reaction/leporazine
/datum/chemical_reaction/lexorin
/datum/chemical_reaction/lipozine
/datum/chemical_reaction/lithiumsodiumtungstate
/datum/chemical_reaction/longislandicedtea
/datum/chemical_reaction/lube
/datum/chemical_reaction/manhattan
/datum/chemical_reaction/manhattan_proj
/datum/chemical_reaction/manly_dorf
/datum/chemical_reaction/margarita
/datum/chemical_reaction/martini
/datum/chemical_reaction/mead
/datum/chemical_reaction/metalfoam
/datum/chemical_reaction/metalfoam/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/methylphenidate
/datum/chemical_reaction/milkshake
/datum/chemical_reaction/mindbreaker
/datum/chemical_reaction/moonshine
/datum/chemical_reaction/mutagen
/datum/chemical_reaction/napalm
/datum/chemical_reaction/napalm/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/neurotoxin
/datum/chemical_reaction/nitroglycerin
/datum/chemical_reaction/nitroglycerin/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/nuka_cola
/datum/chemical_reaction/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/oxycodone
/datum/chemical_reaction/pacid
/datum/chemical_reaction/paroxetine
/datum/chemical_reaction/patron
/datum/chemical_reaction/peridaxon
/datum/chemical_reaction/plantbgone
/datum/chemical_reaction/plasmasolidification
/datum/chemical_reaction/plasmasolidification/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/plastication
/datum/chemical_reaction/plastication/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/potassium_chloride
/datum/chemical_reaction/potassium_chlorophoride
/datum/chemical_reaction/red_mead
/datum/chemical_reaction/rewriter
/datum/chemical_reaction/rezadone
/datum/chemical_reaction/ryetalyn
/datum/chemical_reaction/sake
/datum/chemical_reaction/sbiten
/datum/chemical_reaction/screwdriver
/datum/chemical_reaction/silencer
/datum/chemical_reaction/singulo
/datum/chemical_reaction/slimebloodlust
/datum/chemical_reaction/slimebloodlust/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimebork
/datum/chemical_reaction/slimebork/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimecasp
/datum/chemical_reaction/slimecell
/datum/chemical_reaction/slimecell/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/slimecrit
/datum/chemical_reaction/slimecrit/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimedrinks
/datum/chemical_reaction/slimedrinks/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeexplosion
/datum/chemical_reaction/slimeexplosion/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimefire
/datum/chemical_reaction/slimefire/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimefreeze
/datum/chemical_reaction/slimefreeze/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimefrost
/datum/chemical_reaction/slimeglow
/datum/chemical_reaction/slimeglow/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeglycerol
/datum/chemical_reaction/slimegolem
/datum/chemical_reaction/slimegolem/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimejam
/datum/chemical_reaction/slimemetal
/datum/chemical_reaction/slimemetal/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemonkey
/datum/chemical_reaction/slimemonkey/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimemutate
/datum/chemical_reaction/slimemutate2
/datum/chemical_reaction/slimeoverload
/datum/chemical_reaction/slimeoverload/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/slimeplasma
/datum/chemical_reaction/slimeplasma/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimepotion2
/datum/chemical_reaction/slimepotion2/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimeppotion
/datum/chemical_reaction/slimeppotion/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimepsteroid
/datum/chemical_reaction/slimepsteroid/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/slimespawn
/datum/chemical_reaction/slimespawn/on_reaction(var/datum/reagents/holder)
/datum/chemical_reaction/snowwhite
/datum/chemical_reaction/sodiumchloride
/datum/chemical_reaction/soy_latte
/datum/chemical_reaction/soysauce
/datum/chemical_reaction/space_cleaner
/datum/chemical_reaction/space_drugs
/datum/chemical_reaction/spaceacillin
/datum/chemical_reaction/spacebeer
/datum/chemical_reaction/sterilizine
/datum/chemical_reaction/stoxin
/datum/chemical_reaction/surfactant
/datum/chemical_reaction/synaptizine
/datum/chemical_reaction/syndicatebomb
/datum/chemical_reaction/syntiflesh
/datum/chemical_reaction/syntiflesh/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/tea
/datum/chemical_reaction/tequilla_sunrise
/datum/chemical_reaction/thermite
/datum/chemical_reaction/threemileisland
/datum/chemical_reaction/tofu
/datum/chemical_reaction/tofu/on_reaction(var/datum/reagents/holder, var/created_volume)
/datum/chemical_reaction/toxins_special
/datum/chemical_reaction/tramadol
/datum/chemical_reaction/tricordrazine
/datum/chemical_reaction/virus_food
/datum/chemical_reaction/vodka
/datum/chemical_reaction/vodka_tonic
/datum/chemical_reaction/vodkamartini
/datum/chemical_reaction/whiskey_cola
/datum/chemical_reaction/whiskeysoda
/datum/chemical_reaction/white_russian
/datum/chemical_reaction/wine
/datum/chemical_reaction/zombiepowder
/datum/comm_log_entry
/datum/computer
/datum/computer/file
/datum/computer/file/embedded_program
/datum/computer/file/embedded_program/access_controller
/datum/computer/file/embedded_program/access_controller/process()
/datum/computer/file/embedded_program/access_controller/receive_signal(datum/signal/signal, receive_method, receive_param)
/datum/computer/file/embedded_program/access_controller/receive_user_command(command)
/datum/computer/file/embedded_program/airlock_controller
/datum/computer/file/embedded_program/airlock_controller/process()
/datum/computer/file/embedded_program/airlock_controller/receive_signal(datum/signal/signal, receive_method, receive_param)
/datum/computer/file/embedded_program/airlock_controller/receive_user_command(command)
/datum/computer/file/embedded_program/post_signal(datum/signal/signal, comm_line)
/datum/computer/file/embedded_program/process()
/datum/computer/file/embedded_program/receive_signal(datum/signal/signal, receive_method, receive_param)
/datum/computer/file/embedded_program/receive_user_command(command)
/datum/computer/file/embedded_program/simple_vent_controller
/datum/computer/file/embedded_program/simple_vent_controller/process()
/datum/computer/file/embedded_program/simple_vent_controller/receive_user_command(command)
/datum/computer/file/embedded_program/smart_airlock_controller
/datum/computer/file/embedded_program/smart_airlock_controller/New()
/datum/computer/file/embedded_program/smart_airlock_controller/process()
/datum/computer/file/embedded_program/smart_airlock_controller/receive_signal(datum/signal/signal, receive_method, receive_param)
/datum/computer/file/embedded_program/smart_airlock_controller/receive_user_command(command)
/datum/computer/folder
/datum/configuration
/datum/configuration/New()
/datum/configuration/get_runnable_modes()
/datum/configuration/load(filename, type = "config")
/datum/configuration/loadforumsql(filename)
/datum/configuration/loadsql(filename)
/datum/configuration/pick_mode(mode_name)
/datum/construction
/datum/construction/New(atom)
/datum/construction/action(atom/used_atom,mob/user as mob)
/datum/construction/check_all_steps(atom/used_atom,mob/user as mob)
/datum/construction/check_step(atom/used_atom,mob/user as mob)
/datum/construction/custom_action(step, used_atom, user)
/datum/construction/is_right_key(atom/used_atom)
/datum/construction/mecha/durand_chassis
/datum/construction/mecha/durand_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/durand_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/durand_chassis/spawn_result(mob/user as mob)
/datum/construction/mecha/firefighter_chassis
/datum/construction/mecha/firefighter_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/firefighter_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/firefighter_chassis/spawn_result(mob/user as mob)
/datum/construction/mecha/gygax_chassis
/datum/construction/mecha/gygax_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/gygax_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/gygax_chassis/spawn_result(mob/user as mob)
/datum/construction/mecha/honker
/datum/construction/mecha/honker/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/honker/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/honker/spawn_result(mob/user as mob)
/datum/construction/mecha/honker_chassis
/datum/construction/mecha/honker_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/honker_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/honker_chassis/spawn_result(mob/user as mob)
/datum/construction/mecha/odysseus_chassis
/datum/construction/mecha/odysseus_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/odysseus_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/odysseus_chassis/spawn_result(mob/user as mob)
/datum/construction/mecha/phazon_chassis
/datum/construction/mecha/phazon_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/phazon_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/ripley_chassis
/datum/construction/mecha/ripley_chassis/action(atom/used_atom,mob/user as mob)
/datum/construction/mecha/ripley_chassis/custom_action(step, atom/used_atom, mob/user)
/datum/construction/mecha/ripley_chassis/spawn_result(mob/user as mob)
/datum/construction/next_step(mob/user as mob)
/datum/construction/reversible
/datum/construction/reversible/New(atom)
/datum/construction/reversible/check_step(atom/used_atom,mob/user as mob)
/datum/construction/reversible/custom_action(index, diff, used_atom, user)
/datum/construction/reversible/is_right_key(atom/used_atom)
/datum/construction/reversible/mecha/durand
/datum/construction/reversible/mecha/durand/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/durand/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/durand/spawn_result(mob/user as mob)
/datum/construction/reversible/mecha/firefighter
/datum/construction/reversible/mecha/firefighter/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/firefighter/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/firefighter/spawn_result(mob/user as mob)
/datum/construction/reversible/mecha/gygax
/datum/construction/reversible/mecha/gygax/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/gygax/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/gygax/spawn_result(mob/user as mob)
/datum/construction/reversible/mecha/odysseus
/datum/construction/reversible/mecha/odysseus/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/odysseus/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/odysseus/spawn_result(mob/user as mob)
/datum/construction/reversible/mecha/ripley
/datum/construction/reversible/mecha/ripley/action(atom/used_atom,mob/user as mob)
/datum/construction/reversible/mecha/ripley/custom_action(index, diff, atom/used_atom, mob/user)
/datum/construction/reversible/mecha/ripley/spawn_result(mob/user as mob)
/datum/construction/reversible/update_index(diff as num, mob/user as mob)
/datum/construction/reversible2
/datum/construction/reversible2/New(atom)
/datum/construction/reversible2/action(used_atom,user)
/datum/construction/reversible2/check_step(atom/used_atom,mob/user as mob)
/datum/construction/reversible2/custom_action(index, diff, used_atom, var/mob/user)
/datum/construction/reversible2/fixText(text,user)
/datum/construction/reversible2/is_right_key(mob/user as mob,atom/used_atom)
/datum/construction/reversible2/pod
/datum/construction/reversible2/pod/spawn_result(mob/user as mob)
/datum/construction/reversible2/update_icon()
/datum/construction/reversible2/update_index(diff as num, mob/user as mob)
/datum/construction/set_desc(index as num)
/datum/construction/spawn_result(mob/user as mob)
/datum/construction/try_consume(mob/user as mob, atom/used_atom, amount)
/datum/controller/air_system/Setup()
/datum/controller/air_system/Start()
/datum/controller/air_system/Tick()
/datum/controller/air_system/add_zone(zone/z)
/datum/controller/air_system/air_blocked(turf/A, turf/B)
/datum/controller/air_system/connect(turf/simulated/A, turf/simulated/B)
/datum/controller/air_system/equivalent_pressure(zone/A, zone/B)
/datum/controller/air_system/get_edge(zone/A, zone/B)
/datum/controller/air_system/has_same_air(turf/A, turf/B)
/datum/controller/air_system/has_valid_zone(turf/simulated/T)
/datum/controller/air_system/mark_for_update(turf/T)
/datum/controller/air_system/mark_zone_update(zone/Z)
/datum/controller/air_system/merge(zone/A, zone/B)
/datum/controller/air_system/remove_edge(connection/c)
/datum/controller/air_system/remove_zone(zone/z)
/datum/controller/failsafe
/datum/controller/failsafe/New()
/datum/controller/failsafe/process()
/datum/controller/game_controller
/datum/controller/game_controller/New()
/datum/controller/game_controller/Recover()
/datum/controller/game_controller/process()
/datum/controller/game_controller/processDiseases()
/datum/controller/game_controller/processEvents()
/datum/controller/game_controller/processMachines()
/datum/controller/game_controller/processMobs()
/datum/controller/game_controller/processNano()
/datum/controller/game_controller/processObjects()
/datum/controller/game_controller/processPipenets()
/datum/controller/game_controller/processPowernets()
/datum/controller/game_controller/processPuddles()
/datum/controller/game_controller/setup()
/datum/controller/game_controller/setup_objects()
/datum/controller/game_controller/var/list/fusion_reactions
/datum/controller/gameticker
/datum/controller/gameticker/collect_minds()
/datum/controller/gameticker/create_characters()
/datum/controller/gameticker/declare_completion()
/datum/controller/gameticker/equip_characters()
/datum/controller/gameticker/getfactionbyname(var/name)
/datum/controller/gameticker/karmareminder()
/datum/controller/gameticker/pregame()
/datum/controller/gameticker/process()
/datum/controller/gameticker/scoreboard()
/datum/controller/gameticker/setup()
/datum/controller/gameticker/station_explosion_cinematic(var/station_missed=0, var/override = null)
/datum/controller/gameticker/votetimer()
/datum/controller/garbage_collector
/datum/controller/garbage_collector/AddTrash(var/atom/movable/A)
/datum/controller/garbage_collector/New()
/datum/controller/garbage_collector/Pop()
/datum/controller/garbage_collector/process()
/datum/controller/lighting
/datum/controller/lighting/Initialize(var/z_level)
/datum/controller/lighting/New()
/datum/controller/lighting/Recover()
/datum/controller/lighting/process()
/datum/controller/occupations
/datum/controller/occupations/AssignRole(var/mob/new_player/player, var/rank, var/latejoin = 0)
/datum/controller/occupations/CheckHeadPositions(var/level)
/datum/controller/occupations/Debug(var/text)
/datum/controller/occupations/DivideOccupations()
/datum/controller/occupations/EquipRank(var/mob/living/carbon/human/H, var/rank, var/joined_late = 0)
/datum/controller/occupations/FillAIPosition()
/datum/controller/occupations/FillHeadPosition()
/datum/controller/occupations/FindOccupationCandidates(datum/job/job, level, flag)
/datum/controller/occupations/FreeRole(var/rank)
/datum/controller/occupations/GetJob(var/rank)
/datum/controller/occupations/GetPlayerAltTitle(mob/new_player/player, rank)
/datum/controller/occupations/GiveRandomJob(var/mob/new_player/player)
/datum/controller/occupations/HandleFeedbackGathering()
/datum/controller/occupations/LoadJobs(jobsfile)
/datum/controller/occupations/ResetOccupations()
/datum/controller/occupations/SetupOccupations(var/faction = "Station")
/datum/controller/occupations/spawnId(var/mob/living/carbon/human/H, rank, title)
/datum/controller/radio
/datum/controller/radio/add_object(obj/device as obj, var/new_frequency as num, var/filter = null as text|null)
/datum/controller/radio/remove_object(obj/device, old_frequency)
/datum/controller/radio/return_frequency(var/new_frequency as num)
/datum/controller/supply_shuttle
/datum/controller/supply_shuttle/New()
/datum/controller/supply_shuttle/buy()
/datum/controller/supply_shuttle/can_move()
/datum/controller/supply_shuttle/forbidden_atoms_check(atom/A)
/datum/controller/supply_shuttle/process()
/datum/controller/supply_shuttle/sell()
/datum/controller/supply_shuttle/send()
/datum/controller/vote
/datum/controller/vote/New()
/datum/controller/vote/Topic(href,href_list[],hsrc)
/datum/controller/vote/announce_result()
/datum/controller/vote/autotransfer()
/datum/controller/vote/get_result()
/datum/controller/vote/initiate_vote(var/vote_type, var/initiator_key)
/datum/controller/vote/interface(var/client/C)
/datum/controller/vote/process()
/datum/controller/vote/reset()
/datum/controller/vote/result()
/datum/controller/vote/submit_vote(var/ckey, var/vote)
/datum/coords
/datum/crafting_controller
/datum/crafting_controller/New()
/datum/crafting_controller/add_family(name, list/members, list/recipes)
/datum/crafting_controller/add_global_recipe(datum/crafting_recipe/CR)
/datum/crafting_controller/add_member_to_family(family_name, member)
/datum/crafting_controller/add_recipe_to_family(family_name, datum/crafting_recipe/recipe)
/datum/crafting_controller/get_family_by_name(name)
/datum/crafting_controller/remove_family(family_name)
/datum/crafting_controller/remove_global_recipe(datum/crafting_recipe/CR)
/datum/crafting_controller/remove_member(family_name, member)
/datum/crafting_controller/remove_recipe_from_family(family_name, datum/crafting_recipe/recipe)
/datum/crafting_family
/datum/crafting_family/New(new_name, list/new_members = list(), list/new_recipes = list())
/datum/crafting_family/add_member(datum/crafting_holder/member)
/datum/crafting_family/add_recipe(datum/crafting_recipe/recipe)
/datum/crafting_family/remove_member(datum/crafting_holder/member)
/datum/crafting_family/remove_recipe(datum/crafting_recipe/recipe)
/datum/crafting_holder
/datum/crafting_holder/New(atom/location, family_name)
/datum/crafting_holder/Topic(href, href_list)
/datum/crafting_holder/add_recipe(recipe)
/datum/crafting_holder/check_contents(datum/crafting_recipe/R, list/holder_contents)
/datum/crafting_holder/check_holder()
/datum/crafting_holder/check_tools(mob/user, datum/crafting_recipe/R, list/holder_contents)
/datum/crafting_holder/construct_item(mob/user, datum/crafting_recipe/R)
/datum/crafting_holder/deconstruct(mob/user, datum/crafting_recipe/R)
/datum/crafting_holder/del_reqs(datum/crafting_recipe/R, list/holder_contents)
/datum/crafting_holder/interact(mob/user)
/datum/crafting_holder/remove_recipe(recipe)
/datum/crafting_recipe
/datum/crafting_recipe/New()
/datum/crafting_recipe/table/IED
/datum/crafting_recipe/table/New()
/datum/crafting_recipe/table/cleanbot
/datum/crafting_recipe/table/ed209
/datum/crafting_recipe/table/flamethrower
/datum/crafting_recipe/table/floorbot
/datum/crafting_recipe/table/medbot
/datum/crafting_recipe/table/secbot
/datum/crafting_recipe/table/stunprod
/datum/data
/datum/data/function
/datum/data/function/data_control
/datum/data/function/display()
/datum/data/function/id_changer
/datum/data/function/r_input(href, href_list, mob/user as mob)
/datum/data/function/reset()
/datum/data/mining_equipment/
/datum/data/mining_equipment/New(name, path, cost)
/datum/data/record
/datum/data/text
/datum/data/vending_product
/datum/data_pda_msg
/datum/data_pda_msg/New(var/param_rec = "",var/param_sender = "",var/param_message = "")
/datum/data_rc_msg
/datum/data_rc_msg/New(var/param_rec = "",var/param_sender = "",var/param_message = "",var/param_stamp = "",var/param_id_auth = "",var/param_priority)
/datum/debug
/datum/depth_scan
/datum/design
/datum/design/CalcReliability(var/list/temp_techs)
/datum/design/adv_capacitor
/datum/design/adv_mass_spectrometer
/datum/design/adv_matter_bin
/datum/design/adv_reagent_scanner
/datum/design/adv_sensor
/datum/design/aicore
/datum/design/aifixer
/datum/design/air_management
/datum/design/aiupload
/datum/design/ammo_9mm
/datum/design/arcadebattle
/datum/design/asimov
/datum/design/atmosalerts
/datum/design/autolathe
/datum/design/bag_holding
/datum/design/basic_capacitor
/datum/design/basic_cell
/datum/design/basic_matter_bin
/datum/design/basic_micro_laser
/datum/design/basic_sensor
/datum/design/beacon
/datum/design/binaryencrypt
/datum/design/bluespace_belt
/datum/design/bluespacebeaker
/datum/design/borg_syndicate_module
/datum/design/borgupload
/datum/design/cart_atmos
/datum/design/cart_basic
/datum/design/cart_captain
/datum/design/cart_ce
/datum/design/cart_chemistry
/datum/design/cart_clown
/datum/design/cart_cmo
/datum/design/cart_engineering
/datum/design/cart_hop
/datum/design/cart_hos
/datum/design/cart_janitor
/datum/design/cart_medical
/datum/design/cart_mime
/datum/design/cart_quartermaster
/datum/design/cart_rd
/datum/design/cart_security
/datum/design/cart_toxins
/datum/design/chemsprayer
/datum/design/circuit_imprinter
/datum/design/clonecontrol
/datum/design/clonepod
/datum/design/clonescanner
/datum/design/clusterbang_launcher
/datum/design/comconsole
/datum/design/comm_monitor
/datum/design/comm_server
/datum/design/corporate_module
/datum/design/crewconsole
/datum/design/custom_module
/datum/design/decloner
/datum/design/design_disk
/datum/design/destructive_analyzer
/datum/design/drill
/datum/design/drill_diamond
/datum/design/dronecontrol
/datum/design/durand_main
/datum/design/durand_peri
/datum/design/durand_targ
/datum/design/flora_gun
/datum/design/freeform_module
/datum/design/freeformcore_module
/datum/design/gygax_main
/datum/design/gygax_peri
/datum/design/gygax_targ
/datum/design/health_hud
/datum/design/high_cell
/datum/design/high_micro_laser
/datum/design/honker_main
/datum/design/honker_peri
/datum/design/honker_targ
/datum/design/hyper_cell
/datum/design/hyperwave_filter
/datum/design/idcardconsole
/datum/design/intellicard
/datum/design/ionrifle
/datum/design/jackhammer
/datum/design/large_grenade
/datum/design/largecrossbow
/datum/design/lasercannon
/datum/design/light_replacer
/datum/design/mag_smg
/datum/design/mass_spectrometer
/datum/design/mech_carbine
/datum/design/mech_ccw_armor
/datum/design/mech_diamond_drill
/datum/design/mech_energy_relay
/datum/design/mech_generator_nuclear
/datum/design/mech_gravcatapult
/datum/design/mech_grenade_launcher
/datum/design/mech_ion
/datum/design/mech_laser
/datum/design/mech_laser_heavy
/datum/design/mech_missile_rack
/datum/design/mech_plasma_generator
/datum/design/mech_proj_armor
/datum/design/mech_rcd
/datum/design/mech_repair_droid
/datum/design/mech_scattershot
/datum/design/mech_syringe_gun
/datum/design/mech_teleporter
/datum/design/mech_wormhole_gen
/datum/design/mechacontrol
/datum/design/mechapower
/datum/design/mechfab
/datum/design/med_data
/datum/design/mesons
/datum/design/message_monitor
/datum/design/micro_mani
/datum/design/mmi
/datum/design/mmi_radio
/datum/design/mrspacman
/datum/design/nano_mani
/datum/design/nanopaste
/datum/design/noreactbeaker
/datum/design/nuclear_gun
/datum/design/odysseus_main
/datum/design/odysseus_peri
/datum/design/onehuman_module
/datum/design/operating
/datum/design/ordercomp
/datum/design/orion_trail
/datum/design/oxygen_module
/datum/design/pacman
/datum/design/paicard
/datum/design/paladin_module
/datum/design/pandemic
/datum/design/pda
/datum/design/phasic_sensor
/datum/design/pick_diamond
/datum/design/pico_mani
/datum/design/plasmacutter
/datum/design/plasmapistol
/datum/design/portaseed
/datum/design/posibrain
/datum/design/powermonitor
/datum/design/prisonmanage
/datum/design/programmable
/datum/design/protectstation_module
/datum/design/protolathe
/datum/design/purge_module
/datum/design/quarantine_module
/datum/design/rapidsyringe
/datum/design/rdconsole
/datum/design/rdserver
/datum/design/rdservercontrol
/datum/design/reagent_scanner
/datum/design/reset_module
/datum/design/ripley_main
/datum/design/ripley_peri
/datum/design/robocontrol
/datum/design/rust_core
/datum/design/rust_core_control
/datum/design/rust_fuel_compressor
/datum/design/rust_fuel_control
/datum/design/rust_fuel_port
/datum/design/rust_injector
/datum/design/safeguard_module
/datum/design/scan_console
/datum/design/seccamera
/datum/design/secdata
/datum/design/security_hud
/datum/design/shield_cap
/datum/design/shield_gen
/datum/design/shield_gen_ex
/datum/design/smg
/datum/design/solarcontrol
/datum/design/spacepod_main
/datum/design/stunrevolver
/datum/design/stunshell
/datum/design/subspace_amplifier
/datum/design/subspace_analyzer
/datum/design/subspace_ansible
/datum/design/subspace_broadcaster
/datum/design/subspace_crystal
/datum/design/subspace_receiver
/datum/design/subspace_transmitter
/datum/design/subspace_treatment
/datum/design/super_capacitor
/datum/design/super_cell
/datum/design/super_matter_bin
/datum/design/superpacman
/datum/design/supplycomp
/datum/design/synthetic_flash
/datum/design/tech_disk
/datum/design/telecomms_bus
/datum/design/telecomms_hub
/datum/design/telecomms_processor
/datum/design/telecomms_relay
/datum/design/telecomms_server
/datum/design/teleconsole
/datum/design/telepad_beacon
/datum/design/temp_gun
/datum/design/tyrant_module
/datum/design/ultra_micro_laser
/datum/design/xray
/datum/directive
/datum/directive/New(var/datum/game_mode/mutiny/M)
/datum/directive/bluespace_contagion
/datum/directive/bluespace_contagion/directives_complete()
/datum/directive/bluespace_contagion/get_description()
/datum/directive/bluespace_contagion/get_infection_candidates()
/datum/directive/bluespace_contagion/initialize()
/datum/directive/bluespace_contagion/meets_prerequisites()
/datum/directive/directives_complete()
/datum/directive/get_description()
/datum/directive/initialize()
/datum/directive/ipc_virus
/datum/directive/ipc_virus/directives_complete()
/datum/directive/ipc_virus/get_description()
/datum/directive/ipc_virus/get_ipcs()
/datum/directive/ipc_virus/get_roboticists()
/datum/directive/ipc_virus/initialize()
/datum/directive/ipc_virus/meets_prerequisites()
/datum/directive/meets_prerequisites()
/datum/directive/research_to_ripleys
/datum/directive/research_to_ripleys/count_researchers_reassigned()
/datum/directive/research_to_ripleys/directives_complete()
/datum/directive/research_to_ripleys/get_description()
/datum/directive/research_to_ripleys/get_researchers()
/datum/directive/research_to_ripleys/initialize()
/datum/directive/research_to_ripleys/is_researcher(mob/M)
/datum/directive/research_to_ripleys/meets_prerequisites()
/datum/directive/tau_ceti_needs_women
/datum/directive/tau_ceti_needs_women/count_heads_reassigned()
/datum/directive/tau_ceti_needs_women/directives_complete()
/datum/directive/tau_ceti_needs_women/get_crew_of_target_gender()
/datum/directive/tau_ceti_needs_women/get_description()
/datum/directive/tau_ceti_needs_women/get_target_aliens()
/datum/directive/tau_ceti_needs_women/get_target_gender()
/datum/directive/tau_ceti_needs_women/get_target_heads()
/datum/directive/tau_ceti_needs_women/initialize()
/datum/directive/tau_ceti_needs_women/is_target_gender(mob/M)
/datum/directive/tau_ceti_needs_women/meets_prerequisites()
/datum/directive/terminations
/datum/directive/terminations/alien_fraud
/datum/directive/terminations/alien_fraud/get_crew_to_terminate()
/datum/directive/terminations/alien_fraud/get_description()
/datum/directive/terminations/alien_fraud/is_alien(mob/M)
/datum/directive/terminations/alien_fraud/meets_prerequisites()
/datum/directive/terminations/directives_complete()
/datum/directive/terminations/financial_crisis
/datum/directive/terminations/financial_crisis/get_crew_to_terminate()
/datum/directive/terminations/financial_crisis/get_description()
/datum/directive/terminations/financial_crisis/meets_prerequisites()
/datum/directive/terminations/get_crew_to_terminate()
/datum/directive/terminations/initialize()
/datum/disease
/datum/disease/Copy(var/process = 0)
/datum/disease/IsSame(var/datum/disease/D)
/datum/disease/New(var/process=1, var/datum/disease/D)
/datum/disease/advance
/datum/disease/advance/AddSymptom(var/datum/symptom/S)
/datum/disease/advance/AssignName(var/name = "Unknown")
/datum/disease/advance/AssignProperties(var/list/properties = list())
/datum/disease/advance/Copy(var/process = 0)
/datum/disease/advance/Del()
/datum/disease/advance/Devolve()
/datum/disease/advance/Evolve(var/level = 2)
/datum/disease/advance/GenerateCure(var/list/properties = list())
/datum/disease/advance/GenerateProperties()
/datum/disease/advance/GenerateSymptoms(var/type_level_limit = 2, var/amount_get = 0)
/datum/disease/advance/GetDiseaseID()
/datum/disease/advance/HasSymptom(var/datum/symptom/S)
/datum/disease/advance/IsSame(var/datum/disease/advance/D)
/datum/disease/advance/Mix(var/datum/disease/advance/D)
/datum/disease/advance/New(var/process = 1, var/datum/disease/advance/D)
/datum/disease/advance/Refresh(var/new_name = 0)
/datum/disease/advance/RemoveSymptom(var/datum/symptom/S)
/datum/disease/advance/SetSeverity(var/level_sev)
/datum/disease/advance/SetSpread(var/spread_id)
/datum/disease/advance/cold/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/cure(var/resistance=1)
/datum/disease/advance/flu/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/heal/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/hullucigen/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/advance/stage_act()
/datum/disease/advance/voice_change/New(var/process = 1, var/datum/disease/advance/D, var/copy = 0)
/datum/disease/appendicitis
/datum/disease/appendicitis/stage_act()
/datum/disease/brainrot
/datum/disease/brainrot/stage_act()
/datum/disease/cold
/datum/disease/cold/stage_act()
/datum/disease/cold9
/datum/disease/cold9/stage_act()
/datum/disease/cure(var/resistance=1)
/datum/disease/dna_retrovirus
/datum/disease/dna_retrovirus/New()
/datum/disease/dna_retrovirus/stage_act()
/datum/disease/dnaspread
/datum/disease/dnaspread/Del()
/datum/disease/dnaspread/stage_act()
/datum/disease/fake_gbs
/datum/disease/fake_gbs/stage_act()
/datum/disease/flu
/datum/disease/flu/stage_act()
/datum/disease/fluspanish
/datum/disease/gbs
/datum/disease/gbs/stage_act()
/datum/disease/has_cure()
/datum/disease/inquisition/stage_act()
/datum/disease/jungle_fever
/datum/disease/magnitis
/datum/disease/magnitis/stage_act()
/datum/disease/pierrot_throat
/datum/disease/pierrot_throat/stage_act()
/datum/disease/plasmatoid
/datum/disease/process()
/datum/disease/rhumba_beat
/datum/disease/rhumba_beat/stage_act()
/datum/disease/robotic_transformation
/datum/disease/robotic_transformation/stage_act()
/datum/disease/spread(var/atom/source=null, var/airborne_range = 2,  var/force_spread)
/datum/disease/spread_by_touch()
/datum/disease/stage_act()
/datum/disease/wizarditis
/datum/disease/wizarditis/spawn_wizard_clothes(var/chance = 0)
/datum/disease/wizarditis/stage_act()
/datum/disease/wizarditis/teleport()
/datum/disease/xeno_transformation
/datum/disease/xeno_transformation/stage_act()
/datum/disease2/disease
/datum/disease2/disease/New()
/datum/disease2/disease/activate(var/mob/living/carbon/mob)
/datum/disease2/disease/addToDB()
/datum/disease2/disease/cure(var/mob/living/carbon/mob)
/datum/disease2/disease/get_info()
/datum/disease2/disease/getcopy()
/datum/disease2/disease/issame(var/datum/disease2/disease/disease)
/datum/disease2/disease/majormutate()
/datum/disease2/disease/makerandom(var/greater=0)
/datum/disease2/disease/minormutate()
/datum/disease2/disease/name()
/datum/disease2/effect
/datum/disease2/effect/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/alien
/datum/disease2/effect/alien/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/beard
/datum/disease2/effect/beard/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/blind
/datum/disease2/effect/blind/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/bloodynose
/datum/disease2/effect/bloodynose/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/bones
/datum/disease2/effect/bones/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/bones/deactivate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/catbeast
/datum/disease2/effect/catbeast/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/confusion
/datum/disease2/effect/confusion/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/cough
/datum/disease2/effect/cough/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/deactivate(var/mob/living/carbon/mob)
/datum/disease2/effect/deaf
/datum/disease2/effect/deaf/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/dna
/datum/disease2/effect/dna/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/drained
/datum/disease2/effect/drained/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/drool
/datum/disease2/effect/drool/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/drowsness
/datum/disease2/effect/drowsness/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/drunk
/datum/disease2/effect/drunk/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/elvis
/datum/disease2/effect/elvis/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/eyewater
/datum/disease2/effect/eyewater/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/fizzle
/datum/disease2/effect/fizzle/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/fridge
/datum/disease2/effect/fridge/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/gaben
/datum/disease2/effect/gaben/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/gibbingtons
/datum/disease2/effect/gibbingtons/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/giggle
/datum/disease2/effect/giggle/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/gmagnitis
/datum/disease2/effect/gmagnitis/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/groan
/datum/disease2/effect/groan/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/gunck
/datum/disease2/effect/gunck/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/hair
/datum/disease2/effect/hair/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/hallucinations
/datum/disease2/effect/hallucinations/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/headache
/datum/disease2/effect/headache/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/horsethroat
/datum/disease2/effect/horsethroat/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/hungry
/datum/disease2/effect/hungry/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/immortal
/datum/disease2/effect/immortal/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/immortal/deactivate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/invisible
/datum/disease2/effect/invisible/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/itching
/datum/disease2/effect/itching/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/killertoxins
/datum/disease2/effect/killertoxins/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/lantern
/datum/disease2/effect/lantern/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/lmagnitis
/datum/disease2/effect/lmagnitis/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/mind
/datum/disease2/effect/mind/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/monkey
/datum/disease2/effect/monkey/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/mutation
/datum/disease2/effect/mutation/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/necrosis
/datum/disease2/effect/necrosis/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/optimistic
/datum/disease2/effect/optimistic/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/orbweapon
/datum/disease2/effect/orbweapon/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/organs
/datum/disease2/effect/organs/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/organs/deactivate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/organs/vampire
/datum/disease2/effect/plasma
/datum/disease2/effect/plasma/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/poop
/datum/disease2/effect/poop/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/pthroat
/datum/disease2/effect/pthroat/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/radian
/datum/disease2/effect/radian/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/scc
/datum/disease2/effect/scc/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/scream
/datum/disease2/effect/scream/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/shakey
/datum/disease2/effect/shakey/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/sleepy
/datum/disease2/effect/sleepy/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/sneeze
/datum/disease2/effect/sneeze/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/spider
/datum/disease2/effect/spider/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/stimulant
/datum/disease2/effect/stimulant/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/suicide
/datum/disease2/effect/suicide/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/sweat
/datum/disease2/effect/sweat/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/telepathic
/datum/disease2/effect/telepathic/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/toxins
/datum/disease2/effect/toxins/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/twitch
/datum/disease2/effect/twitch/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/viralsputum
/datum/disease2/effect/viralsputum/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effect/wheeze
/datum/disease2/effect/wheeze/activate(var/mob/living/carbon/mob,var/multiplier)
/datum/disease2/effectholder
/datum/disease2/effectholder/getrandomeffect(var/badness = 1)
/datum/disease2/effectholder/majormutate()
/datum/disease2/effectholder/minormutate()
/datum/disease2/effectholder/runeffect(var/mob/living/carbon/human/mob,var/stage)
/datum/dna
/datum/dna/Clone()
/datum/dna/GetSEBlock(var/block)
/datum/dna/GetSEState(var/block)
/datum/dna/GetSESubBlock(var/block,var/subBlock)
/datum/dna/GetSEValue(var/block)
/datum/dna/GetSEValueRange(var/block,var/maxvalue)
/datum/dna/GetUIBlock(var/block)
/datum/dna/GetUIState(var/block)
/datum/dna/GetUISubBlock(var/block,var/subBlock)
/datum/dna/GetUIValue(var/block)
/datum/dna/GetUIValueRange(var/block,var/maxvalue)
/datum/dna/ResetSE()
/datum/dna/ResetUI(var/defer=0)
/datum/dna/ResetUIFrom(var/mob/living/carbon/human/character)
/datum/dna/SetSEBlock(var/block,var/value,var/defer=0)
/datum/dna/SetSEState(var/block,var/on,var/defer=0)
/datum/dna/SetSESubBlock(var/block,var/subBlock, var/newSubBlock, var/defer=0)
/datum/dna/SetSEValue(var/block,var/value,var/defer=0)
/datum/dna/SetSEValueRange(var/block,var/value,var/maxvalue)
/datum/dna/SetUIBlock(var/block,var/value,var/defer=0)
/datum/dna/SetUIState(var/block,var/on,var/defer=0)
/datum/dna/SetUISubBlock(var/block,var/subBlock, var/newSubBlock, var/defer=0)
/datum/dna/SetUIValue(var/block,var/value,var/defer=0)
/datum/dna/SetUIValueRange(var/block,var/value,var/maxvalue,var/defer=0)
/datum/dna/UpdateSE()
/datum/dna/UpdateUI()
/datum/dna/check_integrity(var/mob/living/carbon/human/character)
/datum/dna/gene
/datum/dna/gene/OnDrawUnderlays(var/mob/M, var/g, var/fat)
/datum/dna/gene/OnMobDeath(var/mob/M)
/datum/dna/gene/OnMobLife(var/mob/M)
/datum/dna/gene/OnSay(var/mob/M, var/message)
/datum/dna/gene/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic
/datum/dna/gene/basic/activate(var/mob/M)
/datum/dna/gene/basic/can_activate(var/mob/M,var/flags)
/datum/dna/gene/basic/cold_resist
/datum/dna/gene/basic/cold_resist/New()
/datum/dna/gene/basic/cold_resist/OnDrawUnderlays(var/mob/M,var/g,var/fat)
/datum/dna/gene/basic/cold_resist/can_activate(var/mob/M,var/flags)
/datum/dna/gene/basic/deactivate(var/mob/M)
/datum/dna/gene/basic/grant_spell
/datum/dna/gene/basic/grant_spell/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic/grant_spell/cryo
/datum/dna/gene/basic/grant_spell/cryo/New()
/datum/dna/gene/basic/grant_spell/deactivate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic/grant_spell/hulk
/datum/dna/gene/basic/grant_spell/hulk/New()
/datum/dna/gene/basic/grant_spell/hulk/OnDrawUnderlays(var/mob/M,var/g,var/fat)
/datum/dna/gene/basic/grant_spell/hulk/OnMobLife(var/mob/living/carbon/human/M)
/datum/dna/gene/basic/grant_spell/hulk/can_activate(var/mob/M,var/flags)
/datum/dna/gene/basic/grant_spell/immolate
/datum/dna/gene/basic/grant_spell/immolate/New()
/datum/dna/gene/basic/grant_spell/jumpy
/datum/dna/gene/basic/grant_spell/jumpy/New()
/datum/dna/gene/basic/grant_spell/mattereater
/datum/dna/gene/basic/grant_spell/mattereater/New()
/datum/dna/gene/basic/grant_spell/polymorph
/datum/dna/gene/basic/grant_spell/polymorph/New()
/datum/dna/gene/basic/grant_verb
/datum/dna/gene/basic/grant_verb/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic/grant_verb/deactivate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic/grant_verb/empath
/datum/dna/gene/basic/grant_verb/empath/New()
/datum/dna/gene/basic/grant_verb/melt
/datum/dna/gene/basic/grant_verb/melt/New()
/datum/dna/gene/basic/heat_resist
/datum/dna/gene/basic/heat_resist/New()
/datum/dna/gene/basic/heat_resist/OnDrawUnderlays(var/mob/M,var/g,var/fat)
/datum/dna/gene/basic/heat_resist/can_activate(var/mob/M,var/flags)
/datum/dna/gene/basic/increaserun
/datum/dna/gene/basic/increaserun/New()
/datum/dna/gene/basic/midget
/datum/dna/gene/basic/midget/New()
/datum/dna/gene/basic/midget/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic/midget/can_activate(var/mob/M,var/flags)
/datum/dna/gene/basic/morph
/datum/dna/gene/basic/morph/New()
/datum/dna/gene/basic/morph/activate(var/mob/M)
/datum/dna/gene/basic/nobreath
/datum/dna/gene/basic/nobreath/New()
/datum/dna/gene/basic/noprints
/datum/dna/gene/basic/noprints/New()
/datum/dna/gene/basic/noshock
/datum/dna/gene/basic/noshock/New()
/datum/dna/gene/basic/psychic_resist
/datum/dna/gene/basic/psychic_resist/New()
/datum/dna/gene/basic/regenerate
/datum/dna/gene/basic/regenerate/New()
/datum/dna/gene/basic/remotetalk
/datum/dna/gene/basic/remotetalk/New()
/datum/dna/gene/basic/remotetalk/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic/remoteview
/datum/dna/gene/basic/remoteview/New()
/datum/dna/gene/basic/remoteview/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/basic/sober
/datum/dna/gene/basic/sober/New()
/datum/dna/gene/basic/stealth
/datum/dna/gene/basic/stealth/can_activate(var/mob/M, var/flags)
/datum/dna/gene/basic/stealth/chameleon
/datum/dna/gene/basic/stealth/chameleon/New()
/datum/dna/gene/basic/stealth/chameleon/OnMobLife(var/mob/M)
/datum/dna/gene/basic/stealth/darkcloak
/datum/dna/gene/basic/stealth/darkcloak/New()
/datum/dna/gene/basic/stealth/darkcloak/OnMobLife(var/mob/M)
/datum/dna/gene/basic/stealth/deactivate(var/mob/M)
/datum/dna/gene/basic/superfart
/datum/dna/gene/basic/superfart/New()
/datum/dna/gene/basic/tk
/datum/dna/gene/basic/tk/New()
/datum/dna/gene/basic/tk/OnDrawUnderlays(var/mob/M,var/g,var/fat)
/datum/dna/gene/basic/xray
/datum/dna/gene/basic/xray/New()
/datum/dna/gene/can_activate(var/mob/M, var/flags)
/datum/dna/gene/deactivate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/disability
/datum/dna/gene/disability/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/disability/blindness
/datum/dna/gene/disability/blindness/New()
/datum/dna/gene/disability/can_activate(var/mob/M,var/flags)
/datum/dna/gene/disability/clumsy
/datum/dna/gene/disability/clumsy/New()
/datum/dna/gene/disability/cough
/datum/dna/gene/disability/cough/New()
/datum/dna/gene/disability/deactivate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/disability/deaf
/datum/dna/gene/disability/deaf/New()
/datum/dna/gene/disability/deaf/activate(var/mob/M, var/connected, var/flags)
/datum/dna/gene/disability/epilepsy
/datum/dna/gene/disability/epilepsy/New()
/datum/dna/gene/disability/fat
/datum/dna/gene/disability/fat/New()
/datum/dna/gene/disability/hallucinate
/datum/dna/gene/disability/hallucinate/New()
/datum/dna/gene/disability/horns
/datum/dna/gene/disability/horns/New()
/datum/dna/gene/disability/horns/OnDrawUnderlays(var/mob/M,var/g,var/fat)
/datum/dna/gene/disability/lisp
/datum/dna/gene/disability/lisp/New()
/datum/dna/gene/disability/lisp/OnSay(var/mob/M, var/message)
/datum/dna/gene/disability/mute
/datum/dna/gene/disability/mute/New()
/datum/dna/gene/disability/mute/OnSay(var/mob/M, var/message)
/datum/dna/gene/disability/nearsighted
/datum/dna/gene/disability/nearsighted/New()
/datum/dna/gene/disability/nervousness
/datum/dna/gene/disability/nervousness/New()
/datum/dna/gene/disability/radioactive
/datum/dna/gene/disability/radioactive/New()
/datum/dna/gene/disability/radioactive/OnDrawUnderlays(var/mob/M,var/g,var/fat)
/datum/dna/gene/disability/radioactive/OnMobLife(var/mob/owner)
/datum/dna/gene/disability/speech/chav
/datum/dna/gene/disability/speech/chav/New()
/datum/dna/gene/disability/speech/chav/OnSay(var/mob/M, var/message)
/datum/dna/gene/disability/speech/swedish
/datum/dna/gene/disability/speech/swedish/New()
/datum/dna/gene/disability/speech/swedish/OnSay(var/mob/M, var/message)
/datum/dna/gene/disability/strong
/datum/dna/gene/disability/strong/New()
/datum/dna/gene/disability/tourettes
/datum/dna/gene/disability/tourettes/New()
/datum/dna/gene/disability/toxic_farts
/datum/dna/gene/disability/toxic_farts/New()
/datum/dna/gene/disability/unintelligable
/datum/dna/gene/disability/unintelligable/New()
/datum/dna/gene/disability/unintelligable/OnSay(var/mob/M, var/message)
/datum/dna/gene/is_active(var/mob/M)
/datum/dna/gene/monkey
/datum/dna/gene/monkey/New()
/datum/dna/gene/monkey/activate(var/mob/living/M, var/connected, var/flags)
/datum/dna/gene/monkey/can_activate(var/mob/M,var/flags)
/datum/dna/gene/monkey/deactivate(var/mob/living/M, var/connected, var/flags)
/datum/dna/ready_dna(mob/living/carbon/human/character)
/datum/dna2/record
/datum/dna2/record/GetData()
/datum/effect/effect/system
/datum/effect/effect/system/attach(atom/atom)
/datum/effect/effect/system/bad_smoke_spread
/datum/effect/effect/system/bad_smoke_spread/set_up(n = 5, c = 0, loca, direct)
/datum/effect/effect/system/bad_smoke_spread/start()
/datum/effect/effect/system/chem_smoke_spread
/datum/effect/effect/system/chem_smoke_spread/New()
/datum/effect/effect/system/chem_smoke_spread/fart
/datum/effect/effect/system/chem_smoke_spread/fart/set_up(var/mob/M, n = 5, c = 0, loca, direct)
/datum/effect/effect/system/chem_smoke_spread/set_up(var/datum/reagents/carry = null, n = 5, c = 0, loca, direct, silent = 0)
/datum/effect/effect/system/chem_smoke_spread/start()
/datum/effect/effect/system/foam_spread
/datum/effect/effect/system/foam_spread/set_up(amt=5, loca, var/datum/reagents/carry = null, var/metalfoam = 0)
/datum/effect/effect/system/foam_spread/start()
/datum/effect/effect/system/harmless_smoke_spread
/datum/effect/effect/system/harmless_smoke_spread/set_up(n = 5, c = 0, loca, direct)
/datum/effect/effect/system/harmless_smoke_spread/start()
/datum/effect/effect/system/ion_trail_follow
/datum/effect/effect/system/ion_trail_follow/set_up(atom/atom)
/datum/effect/effect/system/ion_trail_follow/space_trail
/datum/effect/effect/system/ion_trail_follow/space_trail/start()
/datum/effect/effect/system/ion_trail_follow/start()
/datum/effect/effect/system/ion_trail_follow/stop()
/datum/effect/effect/system/mustard_gas_spread
/datum/effect/effect/system/mustard_gas_spread/set_up(n = 5, c = 0, loca, direct)
/datum/effect/effect/system/mustard_gas_spread/start()
/datum/effect/effect/system/reagents_explosion
/datum/effect/effect/system/reagents_explosion/if(istype(loc, /turf/))
/datum/effect/effect/system/set_up(n = 3, c = 0, turf/loc)
/datum/effect/effect/system/sleep_smoke_spread
/datum/effect/effect/system/sleep_smoke_spread/set_up(n = 5, c = 0, loca, direct)
/datum/effect/effect/system/sleep_smoke_spread/start()
/datum/effect/effect/system/spark_spread
/datum/effect/effect/system/spark_spread/set_up(n = 3, c = 0, loca)
/datum/effect/effect/system/spark_spread/start()
/datum/effect/effect/system/start()
/datum/effect/effect/system/steam_spread
/datum/effect/effect/system/steam_spread/set_up(n = 3, c = 0, turf/loc)
/datum/effect/effect/system/steam_spread/start()
/datum/effect/effect/system/steam_trail_follow
/datum/effect/effect/system/steam_trail_follow/set_up(atom/atom)
/datum/effect/effect/system/steam_trail_follow/start()
/datum/effect/effect/system/steam_trail_follow/stop()
/datum/effect/system/expl_particles
/datum/effect/system/expl_particles/set_up(n = 10, loca)
/datum/effect/system/expl_particles/start()
/datum/effect/system/explosion
/datum/effect/system/explosion/set_up(loca)
/datum/effect/system/explosion/start()
/datum/effects/system/sparkel_spread
/datum/effects/system/sparkel_spread/attach(atom/atom)
/datum/effects/system/sparkel_spread/set_up(n = 3, c = 0, loca)
/datum/effects/system/sparkel_spread/start()
/datum/event
/datum/event/Fire()
/datum/event/New()
/datum/event/New(tlistener,tprocname)
/datum/event/alien_infestation
/datum/event/alien_infestation/announce()
/datum/event/alien_infestation/setup()
/datum/event/alien_infestation/start()
/datum/event/announce()
/datum/event/anomaly
/datum/event/anomaly/announce()
/datum/event/anomaly/anomaly_bluespace
/datum/event/anomaly/anomaly_bluespace/announce()
/datum/event/anomaly/anomaly_bluespace/end()
/datum/event/anomaly/anomaly_bluespace/start()
/datum/event/anomaly/anomaly_flux
/datum/event/anomaly/anomaly_flux/announce()
/datum/event/anomaly/anomaly_flux/end()
/datum/event/anomaly/anomaly_flux/start()
/datum/event/anomaly/anomaly_grav
/datum/event/anomaly/anomaly_grav/announce()
/datum/event/anomaly/anomaly_grav/start()
/datum/event/anomaly/anomaly_pyro
/datum/event/anomaly/anomaly_pyro/announce()
/datum/event/anomaly/anomaly_pyro/start()
/datum/event/anomaly/anomaly_pyro/tick()
/datum/event/anomaly/anomaly_vortex
/datum/event/anomaly/anomaly_vortex/announce()
/datum/event/anomaly/anomaly_vortex/start()
/datum/event/anomaly/end()
/datum/event/anomaly/setup()
/datum/event/anomaly/start()
/datum/event/anomaly/tick()
/datum/event/biomass/start()
/datum/event/blob
/datum/event/blob/announce()
/datum/event/blob/start()
/datum/event/blob/tick()
/datum/event/borer_infestation
/datum/event/borer_infestation/announce()
/datum/event/borer_infestation/setup()
/datum/event/borer_infestation/start()
/datum/event/brand_intelligence
/datum/event/brand_intelligence/announce()
/datum/event/brand_intelligence/setup()
/datum/event/brand_intelligence/start()
/datum/event/brand_intelligence/tick()
/datum/event/carp_migration
/datum/event/carp_migration/announce()
/datum/event/carp_migration/end()
/datum/event/carp_migration/setup()
/datum/event/carp_migration/start()
/datum/event/communications_blackout/announce()
/datum/event/communications_blackout/start()
/datum/event/disease_outbreak
/datum/event/disease_outbreak/announce()
/datum/event/disease_outbreak/setup()
/datum/event/disease_outbreak/start()
/datum/event/dust
/datum/event/dust/meaty/announce()
/datum/event/dust/meaty/setup()
/datum/event/dust/meaty/start()
/datum/event/dust/setup()
/datum/event/dust/start()
/datum/event/economic_event
/datum/event/economic_event/announce()
/datum/event/economic_event/end()
/datum/event/economic_event/start()
/datum/event/electrical_storm
/datum/event/electrical_storm/announce()
/datum/event/electrical_storm/start()
/datum/event/end()
/datum/event/falsealarm
/datum/event/falsealarm/announce()
/datum/event/findEventArea()
/datum/event/ghosts
/datum/event/ghosts/announce()
/datum/event/ghosts/setup()
/datum/event/ghosts/start()
/datum/event/grid_check
/datum/event/grid_check/announce()
/datum/event/grid_check/end()
/datum/event/grid_check/setup()
/datum/event/grid_check/start()
/datum/event/immovable_rod
/datum/event/immovable_rod/announce()
/datum/event/immovable_rod/start()
/datum/event/infestation
/datum/event/infestation/announce()
/datum/event/infestation/start()
/datum/event/ionstorm
/datum/event/ionstorm/announce()
/datum/event/ionstorm/end()
/datum/event/ionstorm/tick()
/datum/event/kill()
/datum/event/mass_hallucination/announce()
/datum/event/mass_hallucination/setup()
/datum/event/mass_hallucination/start()
/datum/event/meteor_shower
/datum/event/meteor_shower/announce()
/datum/event/meteor_shower/end()
/datum/event/meteor_shower/setup()
/datum/event/meteor_shower/tick()
/datum/event/meteor_wave
/datum/event/meteor_wave/announce()
/datum/event/meteor_wave/end()
/datum/event/meteor_wave/setup()
/datum/event/meteor_wave/tick()
/datum/event/money_hacker
/datum/event/money_hacker/announce()
/datum/event/money_hacker/end()
/datum/event/money_hacker/setup()
/datum/event/money_hacker/start()
/datum/event/money_hacker/tick()
/datum/event/money_lotto
/datum/event/money_lotto/announce()
/datum/event/money_lotto/start()
/datum/event/mundane_news
/datum/event/mundane_news/announce()
/datum/event/num_players()
/datum/event/organ_failure
/datum/event/organ_failure/announce()
/datum/event/organ_failure/setup()
/datum/event/organ_failure/start()
/datum/event/pda_spam
/datum/event/pda_spam/setup()
/datum/event/pda_spam/tick()
/datum/event/prison_break
/datum/event/prison_break/announce()
/datum/event/prison_break/setup()
/datum/event/prison_break/start()
/datum/event/prison_break/tick()
/datum/event/process()
/datum/event/radiation_storm
/datum/event/radiation_storm/announce()
/datum/event/radiation_storm/is_safe_zone(var/area/A)
/datum/event/radiation_storm/start()
/datum/event/rogue_drone
/datum/event/rogue_drone/announce()
/datum/event/rogue_drone/end()
/datum/event/rogue_drone/start()
/datum/event/rogue_drone/tick()
/datum/event/setup()
/datum/event/space_ninja/setup()
/datum/event/spacevine
/datum/event/spacevine/start()
/datum/event/spider_infestation
/datum/event/spider_infestation/announce()
/datum/event/spider_infestation/setup()
/datum/event/spider_infestation/start()
/datum/event/spontaneous_appendicitis/start()
/datum/event/start()
/datum/event/tear
/datum/event/tear/announce()
/datum/event/tear/end()
/datum/event/tear/setup()
/datum/event/tear/start()
/datum/event/tick()
/datum/event/trivial_news
/datum/event/trivial_news/announce()
/datum/event/undead
/datum/event/undead/announce()
/datum/event/undead/start()
/datum/event/vent_clog
/datum/event/vent_clog/announce()
/datum/event/vent_clog/setup()
/datum/event/vent_clog/tick()
/datum/event/viral_infection
/datum/event/viral_infection/announce()
/datum/event/viral_infection/setup()
/datum/event/viral_infection/start()
/datum/event/viral_outbreak
/datum/event/viral_outbreak/announce()
/datum/event/viral_outbreak/setup()
/datum/event/viral_outbreak/start()
/datum/event/wallrot
/datum/event/wallrot/announce()
/datum/event/wallrot/setup()
/datum/event/wallrot/start()
/datum/event/wormholes
/datum/event/wormholes/announce()
/datum/event/wormholes/end()
/datum/event/wormholes/setup()
/datum/event/wormholes/start()
/datum/event/wormholes/tick()
/datum/events
/datum/events/New()
/datum/events/addEvent(event_type as text, proc_holder, proc_name as text)
/datum/events/addEventType(event_type as text)
/datum/events/clearEvent(event_type as text, datum/event/E)
/datum/events/fireEvent()
/datum/faction
/datum/faction/Cult
/datum/faction/Exolitics
/datum/faction/Wizard
/datum/faction/syndicate
/datum/faction/syndicate/Cybersun_Industries
/datum/faction/syndicate/Donk
/datum/faction/syndicate/Waffle
/datum/faction/syndicate/assign_objectives(var/datum/mind/traitor)
/datum/feed_channel
/datum/feed_channel/clear()
/datum/feed_message
/datum/feed_message/clear()
/datum/feed_network
/datum/feedback_variable
/datum/feedback_variable/New(var/param_variable,var/param_value = 0)
/datum/feedback_variable/add_details(var/text)
/datum/feedback_variable/dec(var/num = 1)
/datum/feedback_variable/get_details()
/datum/feedback_variable/get_parsed()
/datum/feedback_variable/get_value()
/datum/feedback_variable/get_variable()
/datum/feedback_variable/inc(var/num = 1)
/datum/feedback_variable/proc/get_parsed()
/datum/feedback_variable/set_details(var/text)
/datum/feedback_variable/set_value(var/num)
/datum/file
/datum/file/camnet_key
/datum/file/camnet_key/bombrange
/datum/file/camnet_key/creed
/datum/file/camnet_key/entertainment
/datum/file/camnet_key/execute(var/datum/file/source)
/datum/file/camnet_key/mining
/datum/file/camnet_key/prison
/datum/file/camnet_key/research
/datum/file/camnet_key/singulo
/datum/file/camnet_key/xeno
/datum/file/centcom_auth
/datum/file/centcom_auth/copy()
/datum/file/copy(var/obj/item/part/computer/storage/dest)
/datum/file/data
/datum/file/data/New()
/datum/file/data/copy(var/obj/O)
/datum/file/data/genome
/datum/file/data/genome/SE
/datum/file/data/genome/UE
/datum/file/data/genome/UI
/datum/file/data/genome/UI/UE
/datum/file/data/genome/cloning
/datum/file/data/research
/datum/file/data/set_content(var/text)
/datum/file/data/text
/datum/file/data/text/ClownProphecy
/datum/file/edit()
/datum/file/execute(var/datum/file/source)
/datum/file/move(var/obj/item/part/computer/storage/dest)
/datum/file/program
/datum/file/program/AIupload
/datum/file/program/Cloning
/datum/file/program/Cyborgupload
/datum/file/program/EmergencyShuttle
/datum/file/program/Exosuit
/datum/file/program/Genetics
/datum/file/program/NTOS
/datum/file/program/NTOS/Topic(href, list/href_list)
/datum/file/program/NTOS/buttonbar(var/type = 0)
/datum/file/program/NTOS/desktop(var/peripheralop = "viewperipheral")
/datum/file/program/NTOS/filegrid(var/list/filelist)
/datum/file/program/NTOS/interact()
/datum/file/program/NTOS/list_files()
/datum/file/program/NTOS/window(var/title,var/buttonbar,var/content)
/datum/file/program/New()
/datum/file/program/OperationMonitor
/datum/file/program/PodLaunch
/datum/file/program/PowerMonitor
/datum/file/program/PrisonerManagement
/datum/file/program/RD
/datum/file/program/RDserv
/datum/file/program/Reset()
/datum/file/program/Roboticscontrol
/datum/file/program/SMSmonitor
/datum/file/program/Stationalert
/datum/file/program/SuitSensors
/datum/file/program/TCOMlogs
/datum/file/program/TCOMmonitor
/datum/file/program/TCOMtraffic
/datum/file/program/Topic(href, href_list)
/datum/file/program/Topic(var/href,var/list/href_list)
/datum/file/program/aifixer
/datum/file/program/aifixer/Topic(var/href, var/list/href_list)
/datum/file/program/aifixer/aifixer_menu()
/datum/file/program/aifixer/interact()
/datum/file/program/aifixer/update_icon()
/datum/file/program/arcade
/datum/file/program/arcade/New()
/datum/file/program/arcade/Topic(href, list/href_list)
/datum/file/program/arcade/arcade_action()
/datum/file/program/arcade/interact()
/datum/file/program/atmos_alert
/datum/file/program/atmos_alert/Reset()
/datum/file/program/atmos_alert/Topic(var/href, var/list/href_list)
/datum/file/program/atmos_alert/execute(var/datum/file/program/source)
/datum/file/program/atmos_alert/interact()
/datum/file/program/atmos_alert/receive_signal(datum/signal/signal)
/datum/file/program/atmos_alert/return_text()
/datum/file/program/atmos_alert/update_icon()
/datum/file/program/attack_hand(mob/user as mob)
/datum/file/program/attackby(O as obj, user as mob)
/datum/file/program/borg_control
/datum/file/program/borg_control/Topic(var/href, var/list/href_list)
/datum/file/program/borg_control/interact()
/datum/file/program/borg_control/start_sequence()
/datum/file/program/card_comp
/datum/file/program/card_comp/Topic(href, list/href_list)
/datum/file/program/card_comp/accessblock()
/datum/file/program/card_comp/authenticate()
/datum/file/program/card_comp/card_modify_menu()
/datum/file/program/card_comp/centcom
/datum/file/program/card_comp/centcom/accessblock()
/datum/file/program/card_comp/centcom/authenticate()
/datum/file/program/card_comp/centcom/list_jobs()
/datum/file/program/card_comp/interact()
/datum/file/program/card_comp/list_jobs()
/datum/file/program/card_comp/login_menu()
/datum/file/program/card_comp/scriptblock()
/datum/file/program/card_comp/set_default_access(var/jobname)
/datum/file/program/card_comp/show_manifest()
/datum/file/program/check_access(obj/item/I)
/datum/file/program/communications
/datum/file/program/communications/Reset()
/datum/file/program/communications/Topic(var/href, var/list/href_list)
/datum/file/program/communications/confirm_menu(var/prompt,var/yes_option)
/datum/file/program/communications/interact()
/datum/file/program/communications/main_menu()
/datum/file/program/communications/post_status(var/command, var/data1, var/data2)
/datum/file/program/crew
/datum/file/program/crew/interact(mob/user)
/datum/file/program/crew/scan()
/datum/file/program/execute(var/datum/file/source)
/datum/file/program/fake_link(var/text)
/datum/file/program/holodeck
/datum/file/program/holodeck/Reset()
/datum/file/program/holodeck/Topic(var/href, var/list/href_list)
/datum/file/program/holodeck/checkInteg(var/area/A)
/datum/file/program/holodeck/derez(var/obj/obj , var/silent = 1)
/datum/file/program/holodeck/emergencyShutdown()
/datum/file/program/holodeck/interact()
/datum/file/program/holodeck/loadProgram(var/area/A)
/datum/file/program/holodeck/process()
/datum/file/program/holodeck/togglePower(var/toggleOn = 0)
/datum/file/program/interact()
/datum/file/program/interactable(var/mob/user = usr)
/datum/file/program/list_all_files_by_drive(var/typekey,var/linkop = "runfile")
/datum/file/program/medicalrecords
/datum/file/program/op_monitor
/datum/file/program/op_monitor/Topic()
/datum/file/program/op_monitor/interact()
/datum/file/program/powermon
/datum/file/program/powermon/Topic(var/href, var/list/href_list)
/datum/file/program/powermon/format(var/obj/machinery/power/apc/A)
/datum/file/program/powermon/interact()
/datum/file/program/process()
/datum/file/program/receive_signal(var/datum/signal/signal)
/datum/file/program/security
/datum/file/program/security/Reset()
/datum/file/program/security/Topic(var/href,var/list/href_list)
/datum/file/program/security/execute(var/datum/file/program/caller)
/datum/file/program/security/interact()
/datum/file/program/security/update_icon()
/datum/file/program/securitycam
/datum/file/program/securityrecords
/datum/file/program/update_icon()
/datum/find
/datum/find/New(var/digsite, var/exc_req)
/datum/food_processor_process
/datum/food_processor_process/carrot
/datum/food_processor_process/meat
/datum/food_processor_process/meat2
/datum/food_processor_process/mob
/datum/food_processor_process/mob/monkey
/datum/food_processor_process/mob/monkey/process(loc, what)
/datum/food_processor_process/mob/process(loc, what)
/datum/food_processor_process/mob/slime
/datum/food_processor_process/potato
/datum/food_processor_process/process(loc, what)
/datum/food_processor_process/soybeans
/datum/food_processor_process/spaghetti
/datum/food_processor_process/wheat
/datum/fusion_reaction
/datum/fusion_reaction/deuterium_deuterium
/datum/fusion_reaction/dilithium_obdurium
/datum/fusion_reaction/dilithium_solonium
/datum/fusion_reaction/pergium_deuterium
/datum/fusion_reaction/pergium_obdurium
/datum/fusion_reaction/pergium_solonium
/datum/fusion_reaction/pergium_tritium
/datum/fusion_reaction/rodinium6_obdurium
/datum/fusion_reaction/rodinium6_solonium
/datum/fusion_reaction/stravium7_dilithium
/datum/fusion_reaction/trilithium_obdurium
/datum/fusion_reaction/trilithium_solonium
/datum/fusion_reaction/tritium_deuterium
/datum/fusion_reaction/tritium_tritium
/datum/game_mode
/datum/game_mode/
/datum/game_mode/New()
/datum/game_mode/add_cult_icon(client/target_client,mob/target_mob)
/datum/game_mode/add_cult_icon_to_cultist(datum/mind/first_cultist,datum/mind/second_cultist)
/datum/game_mode/add_cult_icon_to_spirit(mob/spirit/currentSpirit,datum/mind/cultist)
/datum/game_mode/add_cult_viewpoint(var/mob/target)
/datum/game_mode/add_cultist(datum/mind/cult_mind)
/datum/game_mode/add_law_zero(mob/living/silicon/ai/killer)
/datum/game_mode/add_revolutionary(datum/mind/rev_mind)
/datum/game_mode/announce()
/datum/game_mode/auto_declare_completion_blob()
/datum/game_mode/auto_declare_completion_borer()
/datum/game_mode/auto_declare_completion_changeling()
/datum/game_mode/auto_declare_completion_cult()
/datum/game_mode/auto_declare_completion_enthralled()
/datum/game_mode/auto_declare_completion_heist()
/datum/game_mode/auto_declare_completion_malfunction()
/datum/game_mode/auto_declare_completion_ninja()
/datum/game_mode/auto_declare_completion_nuclear()
/datum/game_mode/auto_declare_completion_revolution()
/datum/game_mode/auto_declare_completion_trade()
/datum/game_mode/auto_declare_completion_traitor()
/datum/game_mode/auto_declare_completion_vampire()
/datum/game_mode/auto_declare_completion_wizard()
/datum/game_mode/blob
/datum/game_mode/blob/announce()
/datum/game_mode/blob/burst_blobs()
/datum/game_mode/blob/check_finished()
/datum/game_mode/blob/check_quarantine()
/datum/game_mode/blob/declare_completion()
/datum/game_mode/blob/get_nuke_code()
/datum/game_mode/blob/greet_blob(var/datum/mind/blob)
/datum/game_mode/blob/post_setup()
/datum/game_mode/blob/pre_setup()
/datum/game_mode/blob/send_intercept(var/report = 1)
/datum/game_mode/blob/show_message(var/message)
/datum/game_mode/blob/stage(var/stage)
/datum/game_mode/borer
/datum/game_mode/borer/announce()
/datum/game_mode/borer/can_start()
/datum/game_mode/borer/check_finished()
/datum/game_mode/borer/post_setup()
/datum/game_mode/borer/pre_setup()
/datum/game_mode/can_start()
/datum/game_mode/changeling
/datum/game_mode/changeling/announce()
/datum/game_mode/changeling/post_setup()
/datum/game_mode/changeling/pre_setup()
/datum/game_mode/check_antagonists_topic(href, href_list[])
/datum/game_mode/check_finished()
/datum/game_mode/check_win()
/datum/game_mode/cult
/datum/game_mode/cult/add_cultist(datum/mind/cult_mind)
/datum/game_mode/cult/announce()
/datum/game_mode/cult/check_cult_victory()
/datum/game_mode/cult/check_survive()
/datum/game_mode/cult/declare_completion()
/datum/game_mode/cult/get_unconvertables()
/datum/game_mode/cult/grant_runeword(mob/living/carbon/human/cult_mob, var/word)
/datum/game_mode/cult/memoize_cult_objectives(var/datum/mind/cult_mind)
/datum/game_mode/cult/post_setup()
/datum/game_mode/cult/pre_setup()
/datum/game_mode/cult_icon_pair_link(datum/mind/first_cultist,datum/mind/second_cultist)
/datum/game_mode/cult_icon_pair_unlink(datum/mind/first_cultist,datum/mind/second_cultist)
/datum/game_mode/declare_completion()
/datum/game_mode/declare_job_completion()
/datum/game_mode/equip_cultist(mob/living/carbon/human/mob)
/datum/game_mode/equip_revolutionary(mob/living/carbon/human/mob)
/datum/game_mode/equip_syndicate(mob/living/carbon/human/synd_mob)
/datum/game_mode/equip_traitor(mob/living/carbon/human/traitor_mob, var/safety = 0)
/datum/game_mode/equip_wizard(mob/living/carbon/human/wizard_mob)
/datum/game_mode/extended
/datum/game_mode/extended/post_setup()
/datum/game_mode/extended/pre_setup()
/datum/game_mode/finalize_traitor(var/datum/mind/traitor)
/datum/game_mode/forge_borer_objectives(var/datum/mind/borer, var/datum/mind/first_host)
/datum/game_mode/forge_changeling_objectives(var/datum/mind/changeling)
/datum/game_mode/forge_revolutionary_objectives(var/datum/mind/rev_mind)
/datum/game_mode/forge_syndicate_objectives(var/datum/mind/syndicate)
/datum/game_mode/forge_traitor_objectives(var/datum/mind/traitor)
/datum/game_mode/forge_vampire_objectives(var/datum/mind/vampire)
/datum/game_mode/forge_wizard_objectives(var/datum/mind/wizard)
/datum/game_mode/get_all_heads()
/datum/game_mode/get_living_heads()
/datum/game_mode/get_players_for_role(var/role, override_jobbans=0)
/datum/game_mode/grant_changeling_powers(mob/living/carbon/changeling_mob)
/datum/game_mode/grant_runeword(mob/living/carbon/human/cult_mob, var/word)
/datum/game_mode/grant_vampire_powers(mob/living/carbon/vampire_mob)
/datum/game_mode/greet_borer(var/datum/mind/borer, var/you_are=1)
/datum/game_mode/greet_changeling(var/datum/mind/changeling, var/you_are=1)
/datum/game_mode/greet_malf(var/datum/mind/malf)
/datum/game_mode/greet_revolutionary(var/datum/mind/rev_mind, var/you_are=1)
/datum/game_mode/greet_syndicate(var/datum/mind/syndicate, var/you_are=1)
/datum/game_mode/greet_traitor(var/datum/mind/traitor)
/datum/game_mode/greet_vampire(var/datum/mind/vampire, var/you_are=1)
/datum/game_mode/greet_wizard(var/datum/mind/wizard, var/you_are=1)
/datum/game_mode/is_malf_ai_dead()
/datum/game_mode/is_operatives_are_dead()
/datum/game_mode/latespawn(var/mob)
/datum/game_mode/malfunction
/datum/game_mode/malfunction/Topic(href, href_list)
/datum/game_mode/malfunction/ai_win()
/datum/game_mode/malfunction/announce()
/datum/game_mode/malfunction/capture_the_station()
/datum/game_mode/malfunction/check_finished()
/datum/game_mode/malfunction/check_win()
/datum/game_mode/malfunction/declare_completion()
/datum/game_mode/malfunction/hack_intercept()
/datum/game_mode/malfunction/post_setup()
/datum/game_mode/malfunction/pre_setup()
/datum/game_mode/malfunction/process()
/datum/game_mode/malfunction/takeover()
/datum/game_mode/meteor
/datum/game_mode/meteor/announce()
/datum/game_mode/meteor/declare_completion()
/datum/game_mode/meteor/post_setup()
/datum/game_mode/meteor/process()
/datum/game_mode/mutiny
/datum/game_mode/mutiny/New()
/datum/game_mode/mutiny/add_faction(datum/mind/M, faction, list/faction_list)
/datum/game_mode/mutiny/add_loyalist(datum/mind/M)
/datum/game_mode/mutiny/add_mutineer(datum/mind/M)
/datum/game_mode/mutiny/announce()
/datum/game_mode/mutiny/can_be_recruited(datum/mind/M, role)
/datum/game_mode/mutiny/check_antagonists_topic(href, href_list[])
/datum/game_mode/mutiny/check_antagonists_ui(admins)
/datum/game_mode/mutiny/equip_head_loyalist()
/datum/game_mode/mutiny/equip_head_mutineer()
/datum/game_mode/mutiny/get_directive_candidates()
/datum/game_mode/mutiny/get_equipment_slots()
/datum/game_mode/mutiny/get_head_loyalist_candidates()
/datum/game_mode/mutiny/get_head_mutineer_candidates()
/datum/game_mode/mutiny/make_secret_transcript()
/datum/game_mode/mutiny/post_setup()
/datum/game_mode/mutiny/pre_setup()
/datum/game_mode/mutiny/replace_nuke_with_ead()
/datum/game_mode/mutiny/reveal_directives()
/datum/game_mode/mutiny/round_outcome()
/datum/game_mode/mutiny/send_pda_message()
/datum/game_mode/mutiny/unbolt_vault_door()
/datum/game_mode/mutiny/update_all_icons()
/datum/game_mode/mutiny/update_icon(datum/mind/M)
/datum/game_mode/mutiny/was_bloodbath()
/datum/game_mode/name_wizard(mob/living/carbon/human/wizard_mob)
/datum/game_mode/nations
/datum/game_mode/nations/check_finished()
/datum/game_mode/nations/declare_completion(var/datum/nations/N)
/datum/game_mode/nations/populate_vars()
/datum/game_mode/nations/post_setup()
/datum/game_mode/nations/pre_pre_setup()
/datum/game_mode/nations/remove_flags()
/datum/game_mode/nations/send_intercept()
/datum/game_mode/nations/spawn_flags()
/datum/game_mode/nations/split_teams()
/datum/game_mode/ninja
/datum/game_mode/ninja/announce()
/datum/game_mode/ninja/can_start()
/datum/game_mode/ninja/check_finished()
/datum/game_mode/ninja/forge_ninja_objectives(var/datum/mind/ninja)
/datum/game_mode/ninja/post_setup()
/datum/game_mode/ninja/pre_setup()
/datum/game_mode/nuclear
/datum/game_mode/nuclear/announce()
/datum/game_mode/nuclear/can_start()
/datum/game_mode/nuclear/check_win()
/datum/game_mode/nuclear/declare_completion()
/datum/game_mode/nuclear/post_setup()
/datum/game_mode/nuclear/pre_setup()
/datum/game_mode/num_players()
/datum/game_mode/post_setup()
/datum/game_mode/pre_pre_setup()
/datum/game_mode/pre_setup()
/datum/game_mode/prepare_syndicate_leader(var/datum/mind/synd_mind, var/nuke_code)
/datum/game_mode/process()
/datum/game_mode/process_job_tasks()
/datum/game_mode/random_radio_frequency()
/datum/game_mode/remove_all_cult_icons(target)
/datum/game_mode/remove_all_cult_icons_from_client(client/target)
/datum/game_mode/remove_cult_icon(client/target_client,mob/target_mob)
/datum/game_mode/remove_cult_icon_from_cultist(datum/mind/first_cultist,datum/mind/second_cultist)
/datum/game_mode/remove_cult_icon_from_spirit(mob/spirit/currentSpirit,datum/mind/cultist)
/datum/game_mode/remove_cultist(datum/mind/cult_mind, show_message = 1)
/datum/game_mode/remove_revolutionary(datum/mind/rev_mind , beingborged)
/datum/game_mode/remove_traitor_mind(datum/mind/traitor_mind, datum/mind/head)
/datum/game_mode/remove_vampire_mind(datum/mind/vampire_mind, datum/mind/head)
/datum/game_mode/reset_cult_icons_for_cultist(var/datum/mind/target)
/datum/game_mode/reset_cult_icons_for_spirit(mob/spirit/target)
/datum/game_mode/revolution
/datum/game_mode/revolution/announce()
/datum/game_mode/revolution/check_finished()
/datum/game_mode/revolution/check_heads_victory()
/datum/game_mode/revolution/check_rev_victory()
/datum/game_mode/revolution/check_win()
/datum/game_mode/revolution/declare_completion()
/datum/game_mode/revolution/is_convertible(mob/M)
/datum/game_mode/revolution/post_setup()
/datum/game_mode/revolution/pre_setup()
/datum/game_mode/revolution/process()
/datum/game_mode/revolution/rp_revolution
/datum/game_mode/revolution/rp_revolution/add_revolutionary(datum/mind/rev_mind)
/datum/game_mode/revolution/rp_revolution/announce()
/datum/game_mode/revolution/rp_revolution/check_heads_victory()
/datum/game_mode/revolution/rp_revolution/command_report(message)
/datum/game_mode/revolution/rp_revolution/declare_completion()
/datum/game_mode/revolution/rp_revolution/greet_revolutionary(var/datum/mind/rev_mind, var/you_are=1)
/datum/game_mode/revolution/rp_revolution/latespawn(mob/M)
/datum/game_mode/revolution/rp_revolution/post_setup()
/datum/game_mode/revolution/rp_revolution/pre_setup()
/datum/game_mode/revolution/rp_revolution/process()
/datum/game_mode/send_intercept()
/datum/game_mode/traitor
/datum/game_mode/traitor/announce()
/datum/game_mode/traitor/autotraitor
/datum/game_mode/traitor/autotraitor/announce()
/datum/game_mode/traitor/autotraitor/latespawn(mob/living/carbon/human/character)
/datum/game_mode/traitor/autotraitor/post_setup()
/datum/game_mode/traitor/autotraitor/pre_setup()
/datum/game_mode/traitor/autotraitor/traitorcheckloop()
/datum/game_mode/traitor/changeling
/datum/game_mode/traitor/changeling/announce()
/datum/game_mode/traitor/changeling/post_setup()
/datum/game_mode/traitor/changeling/pre_setup()
/datum/game_mode/traitor/declare_completion()
/datum/game_mode/traitor/post_setup()
/datum/game_mode/traitor/pre_setup()
/datum/game_mode/traitor/process()
/datum/game_mode/update_all_cult_icons()
/datum/game_mode/update_all_rev_icons()
/datum/game_mode/update_all_synd_icons()
/datum/game_mode/update_cult_icons_added(datum/mind/cult_mind)
/datum/game_mode/update_cult_icons_removed(datum/mind/cult_mind)
/datum/game_mode/update_rev_icons_added(datum/mind/rev_mind)
/datum/game_mode/update_rev_icons_removed(datum/mind/rev_mind)
/datum/game_mode/update_synd_icons_added(datum/mind/synd_mind)
/datum/game_mode/update_synd_icons_removed(datum/mind/synd_mind)
/datum/game_mode/update_traitor_icons_added(datum/mind/traitor_mind)
/datum/game_mode/update_traitor_icons_removed(datum/mind/traitor_mind)
/datum/game_mode/update_vampire_icons_added(datum/mind/vampire_mind)
/datum/game_mode/update_vampire_icons_removed(datum/mind/vampire_mind)
/datum/game_mode/vampire
/datum/game_mode/vampire/announce()
/datum/game_mode/vampire/post_setup()
/datum/game_mode/vampire/pre_setup()
/datum/game_mode/vox/heist
/datum/game_mode/vox/heist/announce()
/datum/game_mode/vox/heist/can_start()
/datum/game_mode/vox/heist/check_finished()
/datum/game_mode/vox/heist/declare_completion()
/datum/game_mode/vox/heist/forge_vox_objectives()
/datum/game_mode/vox/heist/greet_vox(var/datum/mind/raider)
/datum/game_mode/vox/heist/is_vox_crew_alive()
/datum/game_mode/vox/heist/post_setup()
/datum/game_mode/vox/heist/pre_setup()
/datum/game_mode/vox/is_vox_crew_safe()
/datum/game_mode/vox/trade
/datum/game_mode/vox/trade/announce()
/datum/game_mode/vox/trade/can_start()
/datum/game_mode/vox/trade/check_finished()
/datum/game_mode/vox/trade/declare_completion()
/datum/game_mode/vox/trade/forge_vox_objectives()
/datum/game_mode/vox/trade/greet_vox(var/datum/mind/trader)
/datum/game_mode/vox/trade/is_vox_crew_alive()
/datum/game_mode/vox/trade/post_setup()
/datum/game_mode/vox/trade/pre_setup()
/datum/game_mode/wizard
/datum/game_mode/wizard/announce()
/datum/game_mode/wizard/can_start()
/datum/game_mode/wizard/check_finished()
/datum/game_mode/wizard/declare_completion(var/ragin = 0)
/datum/game_mode/wizard/post_setup()
/datum/game_mode/wizard/pre_setup()
/datum/game_mode/wizard/raginmages
/datum/game_mode/wizard/raginmages/check_finished()
/datum/game_mode/wizard/raginmages/declare_completion()
/datum/game_mode/wizard/raginmages/greet_wizard(var/datum/mind/wizard, var/you_are=1)
/datum/game_mode/wizard/raginmages/make_more_mages()
/datum/game_mode/wizard/raginmages/post_setup()
/datum/game_mode/xenos
/datum/game_mode/xenos/announce()
/datum/game_mode/xenos/can_start()
/datum/game_mode/xenos/post_setup()
/datum/game_mode/xenos/pre_setup()
/datum/gas
/datum/gas_mixture/
/datum/gas_mixture/add(datum/gas_mixture/right_side)
/datum/gas_mixture/adjust(o2 = 0, co2 = 0, n2 = 0, tx = 0, list/datum/gas/traces = list())
/datum/gas_mixture/archive()
/datum/gas_mixture/calculate_firelevel(obj/effect/decal/cleanable/liquid_fuel/liquid)
/datum/gas_mixture/check_both_then_temperature_share(datum/gas_mixture/sharer, conduction_coefficient)
/datum/gas_mixture/check_combustability(obj/effect/decal/cleanable/liquid_fuel/liquid)
/datum/gas_mixture/check_gas_mixture(datum/gas_mixture/sharer)
/datum/gas_mixture/check_me_then_temperature_mimic(turf/model, conduction_coefficient)
/datum/gas_mixture/check_me_then_temperature_share(datum/gas_mixture/sharer, conduction_coefficient)
/datum/gas_mixture/check_me_then_temperature_turf_share(turf/simulated/sharer, conduction_coefficient)
/datum/gas_mixture/check_recombustability(obj/effect/decal/cleanable/liquid_fuel/liquid)
/datum/gas_mixture/check_then_merge(datum/gas_mixture/giver)
/datum/gas_mixture/check_then_remove(amount)
/datum/gas_mixture/check_tile_graphic()
/datum/gas_mixture/check_turf(turf/model)
/datum/gas_mixture/compare(datum/gas_mixture/sample)
/datum/gas_mixture/copy_from(datum/gas_mixture/sample)
/datum/gas_mixture/divide(factor)
/datum/gas_mixture/heat_capacity()
/datum/gas_mixture/heat_capacity_archived()
/datum/gas_mixture/merge(datum/gas_mixture/giver)
/datum/gas_mixture/mimic(turf/model, border_multiplier)
/datum/gas_mixture/multiply(factor)
/datum/gas_mixture/react(atom/dump_location)
/datum/gas_mixture/remove(amount)
/datum/gas_mixture/remove_ratio(ratio)
/datum/gas_mixture/return_pressure()
/datum/gas_mixture/return_temperature()
/datum/gas_mixture/return_volume()
/datum/gas_mixture/share(datum/gas_mixture/sharer)
/datum/gas_mixture/subtract(datum/gas_mixture/right_side)
/datum/gas_mixture/temperature_mimic(turf/model, conduction_coefficient, border_multiplier)
/datum/gas_mixture/temperature_share(datum/gas_mixture/sharer, conduction_coefficient)
/datum/gas_mixture/temperature_turf_share(turf/simulated/sharer, conduction_coefficient)
/datum/gas_mixture/thermal_energy()
/datum/gas_mixture/total_moles()
/datum/gas_mixture/update_values()
/datum/gas_mixture/zburn(obj/effect/decal/cleanable/liquid_fuel/liquid, force_burn)
/datum/genesequence
/datum/genetics/side_effect
/datum/genetics/side_effect/bone_snap
/datum/genetics/side_effect/bone_snap/finish(mob/living/carbon/human/H)
/datum/genetics/side_effect/bone_snap/start(mob/living/carbon/human/H)
/datum/genetics/side_effect/confuse
/datum/genetics/side_effect/confuse/finish(mob/living/carbon/human/H)
/datum/genetics/side_effect/confuse/start(mob/living/carbon/human/H)
/datum/genetics/side_effect/finish(mob/living/carbon/human/H)
/datum/genetics/side_effect/genetic_burn
/datum/genetics/side_effect/genetic_burn/finish(mob/living/carbon/human/H)
/datum/genetics/side_effect/genetic_burn/start(mob/living/carbon/human/H)
/datum/genetics/side_effect/monkey
/datum/genetics/side_effect/monkey/finish(mob/living/carbon/human/H)
/datum/genetics/side_effect/monkey/start(mob/living/carbon/human/H)
/datum/genetics/side_effect/start(mob/living/carbon/human/H)
/datum/geosample
/datum/geosample/New(var/turf/simulated/mineral/container)
/datum/geosample/UpdateNearbyArtifactInfo(var/turf/simulated/mineral/container)
/datum/geosample/UpdateTurf(var/turf/simulated/mineral/container)
/datum/global_hud
/datum/global_hud/New()
/datum/global_iterator
/datum/global_iterator/New(list/arguments=null,autostart=1)
/datum/global_iterator/active()
/datum/global_iterator/get_last_exec_time()
/datum/global_iterator/get_last_exec_time_as_text()
/datum/global_iterator/has_null_args()
/datum/global_iterator/main()
/datum/global_iterator/mech_bay_recharger
/datum/global_iterator/mech_bay_recharger/process(var/obj/machinery/mech_bay_recharge_port/port, var/obj/mecha/mecha)
/datum/global_iterator/mech_sleeper
/datum/global_iterator/mech_sleeper/process(var/obj/item/mecha_parts/mecha_equipment/tool/sleeper/S)
/datum/global_iterator/mech_synth
/datum/global_iterator/mech_synth/process(var/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/S)
/datum/global_iterator/mecha_energy_relay
/datum/global_iterator/mecha_energy_relay/process(var/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/ER)
/datum/global_iterator/mecha_generator
/datum/global_iterator/mecha_generator/nuclear
/datum/global_iterator/mecha_generator/nuclear/process(var/obj/item/mecha_parts/mecha_equipment/generator/nuclear/EG)
/datum/global_iterator/mecha_generator/process(var/obj/item/mecha_parts/mecha_equipment/generator/EG)
/datum/global_iterator/mecha_internal_damage
/datum/global_iterator/mecha_internal_damage/process(var/obj/mecha/mecha)
/datum/global_iterator/mecha_intertial_movement
/datum/global_iterator/mecha_intertial_movement/process(var/obj/mecha/mecha as obj,direction)
/datum/global_iterator/mecha_preserve_temp
/datum/global_iterator/mecha_preserve_temp/process(var/obj/mecha/mecha)
/datum/global_iterator/mecha_repair_droid
/datum/global_iterator/mecha_repair_droid/process(var/obj/item/mecha_parts/mecha_equipment/repair_droid/RD as obj)
/datum/global_iterator/mecha_tank_give_air
/datum/global_iterator/mecha_tank_give_air/process(var/obj/mecha/mecha)
/datum/global_iterator/pod_preserve_temp
/datum/global_iterator/pod_preserve_temp/process(var/obj/spacepod/spacepod)
/datum/global_iterator/pod_tank_give_air
/datum/global_iterator/pod_tank_give_air/process(var/obj/spacepod/spacepod)
/datum/global_iterator/process()
/datum/global_iterator/set_delay(new_delay)
/datum/global_iterator/set_process_args(list/arguments)
/datum/global_iterator/space_movement
/datum/global_iterator/space_movement/process(var/obj/structure/stool/bed/chair/segway/seg as obj,direction)
/datum/global_iterator/start(list/arguments=null)
/datum/global_iterator/state_check()
/datum/global_iterator/stop()
/datum/global_iterator/toggle()
/datum/global_iterator/toggle_null_checks()
/datum/hud
/datum/hud/New(mob/owner)
/datum/hud/ai_hud()
/datum/hud/alien_hud()
/datum/hud/blob_hud(ui_style = 'icons/mob/screen1_Midnight.dmi')
/datum/hud/brain_hud(ui_style = 'icons/mob/screen1_Midnight.dmi')
/datum/hud/embryo_hud()
/datum/hud/ghost_hud()
/datum/hud/hidden_inventory_update()
/datum/hud/human_hud(var/ui_style='icons/mob/screen1_White.dmi', var/ui_color = "#ffffff", var/ui_alpha = 255)
/datum/hud/instantiate()
/datum/hud/larva_hud()
/datum/hud/monkey_hud(var/ui_style='icons/mob/screen1_old.dmi')
/datum/hud/persistant_inventory_update()
/datum/hud/robot_hud()
/datum/hud/toggle_show_robot_modules()
/datum/hud/unplayer_hud()
/datum/hud/update_robot_modules_display()
/datum/hud/vampire_hud(ui_style = 'icons/mob/screen1_Midnight.dmi')
/datum/hud/var/obj/screen/disarm_intent
/datum/hud/var/obj/screen/grab_intent
/datum/hud/var/obj/screen/help_intent
/datum/hud/var/obj/screen/hurt_intent
/datum/intercept_text
/datum/intercept_text/build(var/mode_type, datum/mind/correct_person)
/datum/intercept_text/build_changeling(datum/mind/correct_person)
/datum/intercept_text/build_cult(datum/mind/correct_person)
/datum/intercept_text/build_malf(datum/mind/correct_person)
/datum/intercept_text/build_nuke(datum/mind/correct_person)
/datum/intercept_text/build_rev(datum/mind/correct_person)
/datum/intercept_text/build_traitor(datum/mind/correct_person)
/datum/intercept_text/build_wizard(datum/mind/correct_person)
/datum/intercept_text/get_suspect()
/datum/job
/datum/job/ai
/datum/job/ai/equip(var/mob/living/carbon/human/H)
/datum/job/assistant
/datum/job/assistant/equip(var/mob/living/carbon/human/H)
/datum/job/assistant/get_access()
/datum/job/atmos
/datum/job/atmos/equip(var/mob/living/carbon/human/H)
/datum/job/available_in_days(client/C)
/datum/job/barber
/datum/job/barber/equip(var/mob/living/carbon/human/H)
/datum/job/bartender
/datum/job/bartender/equip(var/mob/living/carbon/human/H)
/datum/job/blueshield
/datum/job/blueshield/equip(var/mob/living/carbon/human/H)
/datum/job/captain
/datum/job/captain/equip(var/mob/living/carbon/human/H)
/datum/job/captain/get_access()
/datum/job/cargo_tech
/datum/job/cargo_tech/equip(var/mob/living/carbon/human/H)
/datum/job/chaplain
/datum/job/chaplain/equip(var/mob/living/carbon/human/H)
/datum/job/chef
/datum/job/chef/equip(var/mob/living/carbon/human/H)
/datum/job/chemist
/datum/job/chemist/equip(var/mob/living/carbon/human/H)
/datum/job/chief_engineer
/datum/job/chief_engineer/equip(var/mob/living/carbon/human/H)
/datum/job/clown
/datum/job/clown/equip(var/mob/living/carbon/human/H)
/datum/job/cmo
/datum/job/cmo/equip(var/mob/living/carbon/human/H)
/datum/job/customs
/datum/job/customs/equip(var/mob/living/carbon/human/H)
/datum/job/cyborg
/datum/job/cyborg/equip(var/mob/living/carbon/human/H)
/datum/job/detective
/datum/job/detective/equip(var/mob/living/carbon/human/H)
/datum/job/doctor
/datum/job/doctor/equip(var/mob/living/carbon/human/H)
/datum/job/engineer
/datum/job/engineer/equip(var/mob/living/carbon/human/H)
/datum/job/equip(var/mob/living/carbon/human/H)
/datum/job/geneticist
/datum/job/geneticist/equip(var/mob/living/carbon/human/H)
/datum/job/get_access()
/datum/job/hop
/datum/job/hop/equip(var/mob/living/carbon/human/H)
/datum/job/hos
/datum/job/hos/equip(var/mob/living/carbon/human/H)
/datum/job/hydro
/datum/job/hydro/equip(var/mob/living/carbon/human/H)
/datum/job/janitor
/datum/job/janitor/equip(var/mob/living/carbon/human/H)
/datum/job/lawyer
/datum/job/lawyer/equip(var/mob/living/carbon/human/H)
/datum/job/librarian
/datum/job/librarian/equip(var/mob/living/carbon/human/H)
/datum/job/mechanic
/datum/job/mechanic/equip(var/mob/living/carbon/human/H)
/datum/job/mime
/datum/job/mime/equip(var/mob/living/carbon/human/H)
/datum/job/mining
/datum/job/mining/equip(var/mob/living/carbon/human/H)
/datum/job/nanotrasenrep
/datum/job/nanotrasenrep/equip(var/mob/living/carbon/human/H)
/datum/job/officer
/datum/job/officer/equip(var/mob/living/carbon/human/H)
/datum/job/paramedic
/datum/job/paramedic/equip(var/mob/living/carbon/human/H)
/datum/job/player_old_enough(client/C)
/datum/job/psychiatrist
/datum/job/psychiatrist/equip(var/mob/living/carbon/human/H)
/datum/job/qm
/datum/job/qm/equip(var/mob/living/carbon/human/H)
/datum/job/rd
/datum/job/rd/equip(var/mob/living/carbon/human/H)
/datum/job/roboticist
/datum/job/roboticist/equip(var/mob/living/carbon/human/H)
/datum/job/scientist
/datum/job/scientist/equip(var/mob/living/carbon/human/H)
/datum/job/virologist
/datum/job/virologist/equip(var/mob/living/carbon/human/H)
/datum/job/warden
/datum/job/warden/equip(var/mob/living/carbon/human/H)
/datum/job/xenobiologist
/datum/job/xenobiologist/equip(var/mob/living/carbon/human/H)
/datum/job_objective
/datum/job_objective/Del()
/datum/job_objective/New(var/datum/mind/new_owner)
/datum/job_objective/check_for_completion()
/datum/job_objective/get_description()
/datum/job_objective/is_completed()
/datum/job_objective/make_cyborg
/datum/job_objective/make_cyborg/get_description()
/datum/job_objective/make_ripley
/datum/job_objective/make_ripley/get_description()
/datum/job_objective/maximize_research
/datum/job_objective/maximize_research/check_for_completion()
/datum/job_objective/maximize_research/get_description()
/datum/job_objective/unit_completed(var/count=1)
/datum/language
/datum/language/diona
/datum/language/gutter
/datum/language/human
/datum/language/kidan
/datum/language/skrell
/datum/language/slime
/datum/language/tajaran
/datum/language/trader
/datum/language/unathi
/datum/language/vox
/datum/light_source
/datum/light_source/New(atom/A)
/datum/light_source/add_effect()
/datum/light_source/check()
/datum/light_source/lum(turf/A)
/datum/light_source/new_effect()
/datum/light_source/remove_effect()
/datum/material
/datum/material/New()
/datum/material/clown
/datum/material/diamond
/datum/material/glass
/datum/material/gold
/datum/material/iron
/datum/material/plasma
/datum/material/plastic
/datum/material/silver
/datum/material/uranium
/datum/materials
/datum/materials/New()
/datum/materials/addAmount(var/mat_id,var/amount)
/datum/materials/getAmount(var/mat_id)
/datum/materials/getMaterial(var/mat_id)
/datum/materials/removeAmount(var/mat_id,var/amount)
/datum/media_manager
/datum/media_manager/New(var/mob/holder)
/datum/media_manager/open()
/datum/media_manager/send_update()
/datum/media_manager/stop_music()
/datum/media_manager/update_music()
/datum/media_manager/update_volume(var/value)
/datum/medical_effect
/datum/medical_effect/bad_stomach
/datum/medical_effect/bad_stomach/on_life(mob/living/carbon/human/H, strength)
/datum/medical_effect/cramps
/datum/medical_effect/cramps/on_life(mob/living/carbon/human/H, strength)
/datum/medical_effect/cure(mob/living/carbon/human/H)
/datum/medical_effect/headache
/datum/medical_effect/headache/on_life(mob/living/carbon/human/H, strength)
/datum/medical_effect/itch
/datum/medical_effect/itch/on_life(mob/living/carbon/human/H, strength)
/datum/medical_effect/manifest(mob/living/carbon/human/H)
/datum/medical_effect/on_life(mob/living/carbon/human/H, strength)
/datum/medical_effect/proc/cure(mob/living/carbon/human/H)
/datum/mind
/datum/mind/New(var/key)
/datum/mind/Topic(href, href_list)
/datum/mind/edit_memory()
/datum/mind/findJobTask(var/typepath,var/options=0)
/datum/mind/find_syndicate_uplink()
/datum/mind/is_brigged(duration)
/datum/mind/make_AI_Malf()
/datum/mind/make_Changling()
/datum/mind/make_Cultist()
/datum/mind/make_Nuke()
/datum/mind/make_Rev()
/datum/mind/make_Tratior()
/datum/mind/make_Wizard()
/datum/mind/show_memory(mob/recipient)
/datum/mind/store_memory(new_text)
/datum/mind/take_uplink()
/datum/mind/transfer_to(mob/living/new_character)
/datum/module
/datum/module/New(var/obj/O)
/datum/module_picker
/datum/module_picker/New()
/datum/module_picker/Topic(href, href_list)
/datum/module_picker/remove_verbs(var/mob/living/silicon/ai/A)
/datum/module_picker/use(user as mob)
/datum/moduletypes
/datum/moduletypes/addmod(var/type, var/modtextlist)
/datum/moduletypes/getbitmask(var/type)
/datum/moduletypes/inmodlist(var/type)
/datum/money_account
/datum/money_account/New()
/datum/money_account/charge(var/transaction_amount,var/datum/money_account/dest,var/transaction_purpose, var/terminal_name="", var/terminal_id=0, var/dest_name = "UNKNOWN")
/datum/money_account/fmtBalance()
/datum/mutiny_fluff
/datum/mutiny_fluff/New(datum/game_mode/mutiny/M)
/datum/mutiny_fluff/announce()
/datum/mutiny_fluff/announce_directives()
/datum/mutiny_fluff/announce_ert_unavailable()
/datum/mutiny_fluff/announce_incoming_fax()
/datum/mutiny_fluff/centcom_announce(text)
/datum/mutiny_fluff/get_fax_body()
/datum/mutiny_fluff/get_orders()
/datum/mutiny_fluff/get_pda_body()
/datum/mutiny_fluff/loyalist_major_victory()
/datum/mutiny_fluff/loyalist_minor_victory()
/datum/mutiny_fluff/loyalist_tag(text)
/datum/mutiny_fluff/mutineer_major_victory()
/datum/mutiny_fluff/mutineer_minor_victory()
/datum/mutiny_fluff/mutineer_tag(text)
/datum/mutiny_fluff/no_victory()
/datum/mutiny_fluff/secret_transcript()
/datum/mutiny_fluff/their(datum/mind/head)
/datum/nanomanager
/datum/nanomanager/New()
/datum/nanomanager/close_user_uis(var/mob/user, src_object = null, ui_key = null)
/datum/nanomanager/get_open_ui(var/mob/user, src_object, ui_key)
/datum/nanomanager/send_resources(client)
/datum/nanomanager/try_update_ui(var/mob/user, src_object, ui_key, var/datum/nanoui/ui, data)
/datum/nanomanager/ui_closed(var/datum/nanoui/ui)
/datum/nanomanager/ui_opened(var/datum/nanoui/ui)
/datum/nanomanager/update_uis(src_object)
/datum/nanomanager/update_user_uis(var/mob/user, src_object = null, ui_key = null)
/datum/nanomanager/user_logout(var/mob/user)
/datum/nanomanager/user_transferred(var/mob/oldMob, var/mob/newMob)
/datum/nanoui
/datum/nanoui/New(nuser, nsrc_object, nui_key, ntemplate, ntitle = 0, nwidth = 0, nheight = 0, var/atom/nref = null)
/datum/nanoui/Topic(href, href_list)
/datum/nanoui/add_common_assets()
/datum/nanoui/add_default_data(list/data)
/datum/nanoui/add_script(file)
/datum/nanoui/add_stylesheet(file)
/datum/nanoui/add_template(key, file)
/datum/nanoui/close()
/datum/nanoui/get_footer()
/datum/nanoui/get_header()
/datum/nanoui/get_html()
/datum/nanoui/on_close_winset()
/datum/nanoui/open()
/datum/nanoui/process(update = 0)
/datum/nanoui/push_data(data, force_push = 0)
/datum/nanoui/set_auto_update(state = 1)
/datum/nanoui/set_content(ncontent)
/datum/nanoui/set_initial_data(list/data)
/datum/nanoui/set_status(state, push_update)
/datum/nanoui/set_window_options(nwindow_options)
/datum/nanoui/update_status(push_update = 0)
/datum/nanoui/use_on_close_logic(state)
/datum/nations
/datum/nations/atmosia
/datum/nations/brigston
/datum/nations/cargonia
/datum/nations/command
/datum/nations/medistan
/datum/nations/scientopia
/datum/news_announcement
/datum/news_announcement/bluespace_research
/datum/news_announcement/bluespace_research/announcement
/datum/news_announcement/food_riots
/datum/news_announcement/food_riots/breaking_news
/datum/news_announcement/food_riots/more
/datum/news_announcement/lotus_tree
/datum/news_announcement/lotus_tree/explosions
/datum/news_announcement/random_junk
/datum/news_announcement/random_junk/cheesy_honkers
/datum/news_announcement/random_junk/found_ssd
/datum/news_announcement/random_junk/net_block
/datum/news_announcement/revolution_inciting_event
/datum/news_announcement/revolution_inciting_event/human_experiments
/datum/news_announcement/revolution_inciting_event/paycuts_confirmation
/datum/news_announcement/revolution_inciting_event/paycuts_suspicion
/datum/news_announcement/var
/datum/news_announcement/var/message
/datum/news_announcement/var/round_time
/datum/numbered_display
/datum/numbered_display/New(obj/item/sample as obj)
/datum/objective
/datum/objective/Del()
/datum/objective/New(var/text)
/datum/objective/absorb
/datum/objective/absorb/check_completion()
/datum/objective/absorb/gen_amount_goal(var/lowbound = 4, var/highbound = 6)
/datum/objective/anti_revolution/brig
/datum/objective/anti_revolution/brig/check_completion()
/datum/objective/anti_revolution/brig/find_target()
/datum/objective/anti_revolution/brig/find_target_by_role(role, role_type=0)
/datum/objective/anti_revolution/demote
/datum/objective/anti_revolution/demote/check_completion()
/datum/objective/anti_revolution/demote/find_target()
/datum/objective/anti_revolution/demote/find_target_by_role(role, role_type=0)
/datum/objective/anti_revolution/execute
/datum/objective/anti_revolution/execute/check_completion()
/datum/objective/anti_revolution/execute/find_target()
/datum/objective/anti_revolution/execute/find_target_by_role(role, role_type=0)
/datum/objective/assassinate
/datum/objective/assassinate/check_completion()
/datum/objective/assassinate/find_target()
/datum/objective/assassinate/find_target_by_role(role, role_type=0)
/datum/objective/block
/datum/objective/block/check_completion()
/datum/objective/blood
/datum/objective/blood/check_completion()
/datum/objective/blood/gen_amount_goal(low = 150, high = 400)
/datum/objective/brig
/datum/objective/brig/check_completion()
/datum/objective/brig/find_target()
/datum/objective/brig/find_target_by_role(role, role_type=0)
/datum/objective/capture
/datum/objective/capture/check_completion()
/datum/objective/capture/gen_amount_goal()
/datum/objective/check_completion()
/datum/objective/debrain
/datum/objective/debrain/check_completion()
/datum/objective/debrain/find_target()
/datum/objective/debrain/find_target_by_role(role, role_type=0)
/datum/objective/die
/datum/objective/die/check_completion()
/datum/objective/download
/datum/objective/download/check_completion()
/datum/objective/download/gen_amount_goal()
/datum/objective/escape
/datum/objective/escape/check_completion()
/datum/objective/find_target()
/datum/objective/find_target_by_role(role, role_type=0)
/datum/objective/find_target_with_special_role(role)
/datum/objective/harm
/datum/objective/harm/check_completion()
/datum/objective/harm/find_target()
/datum/objective/harm/find_target_by_role(role, role_type=0)
/datum/objective/hijack
/datum/objective/hijack/check_completion()
/datum/objective/minimize_casualties
/datum/objective/minimize_casualties/check_completion()
/datum/objective/mutiny
/datum/objective/mutiny/check_completion()
/datum/objective/mutiny/find_target()
/datum/objective/mutiny/find_target_by_role(role, role_type=0)
/datum/objective/mutiny/rp
/datum/objective/mutiny/rp/check_completion()
/datum/objective/mutiny/rp/find_target()
/datum/objective/mutiny/rp/find_target_by_role(role, role_type=0)
/datum/objective/nuclear
/datum/objective/protect
/datum/objective/protect/check_completion()
/datum/objective/protect/find_target()
/datum/objective/protect/find_target_by_role(role, role_type=0)
/datum/objective/protect/find_target_with_special_role(role,role_type=0)
/datum/objective/silence
/datum/objective/silence/check_completion()
/datum/objective/speciesist
/datum/objective/speciesist/check_completion()
/datum/objective/speciesist/find_target()
/datum/objective/steal
/datum/objective/steal/check_completion()
/datum/objective/steal/find_target(var/special_only=0)
/datum/objective/steal/select_target()
/datum/objective/survive
/datum/objective/survive/check_completion()
/datum/objective/vox
/datum/objective/vox/choose_target()
/datum/objective/vox/heist/kidnap
/datum/objective/vox/heist/kidnap/check_completion()
/datum/objective/vox/heist/kidnap/choose_target()
/datum/objective/vox/heist/loot
/datum/objective/vox/heist/loot/check_completion()
/datum/objective/vox/heist/loot/choose_target()
/datum/objective/vox/heist/salvage
/datum/objective/vox/heist/salvage/check_completion()
/datum/objective/vox/heist/salvage/choose_target()
/datum/objective/vox/inviolate_crew
/datum/objective/vox/inviolate_crew/check_completion()
/datum/objective/vox/inviolate_death
/datum/objective/vox/inviolate_death/check_completion()
/datum/objective/vox/trade/raw_materials
/datum/objective/vox/trade/raw_materials/check_completion()
/datum/objective/vox/trade/raw_materials/choose_target()
/datum/objective/vox/trade/trade
/datum/objective/vox/trade/trade/check_completion()
/datum/objective/vox/trade/trade/choose_target()
/datum/organ
/datum/organ/add_autopsy_data(var/used_weapon, var/damage)
/datum/organ/external
/datum/organ/external/New(var/datum/organ/external/P)
/datum/organ/external/bandage()
/datum/organ/external/chest
/datum/organ/external/clamp()
/datum/organ/external/createwound(var/type = "cut", var/damage)
/datum/organ/external/damage_state_text()
/datum/organ/external/droplimb(var/override = 0,var/no_explode = 0, var/spawn_limb=0)
/datum/organ/external/emp_act(severity)
/datum/organ/external/fracture()
/datum/organ/external/get_damage()
/datum/organ/external/get_icon(gender="")
/datum/organ/external/groin
/datum/organ/external/head
/datum/organ/external/head/breakskull()
/datum/organ/external/head/disfigure(var/type = "brute")
/datum/organ/external/head/get_icon()
/datum/organ/external/head/take_damage(brute, burn, sharp, used_weapon = null, list/forbidden_limbs = list())
/datum/organ/external/heal_damage(brute, burn, internal = 0, robo_repair = 0)
/datum/organ/external/is_infected()
/datum/organ/external/is_usable()
/datum/organ/external/l_arm
/datum/organ/external/l_foot
/datum/organ/external/l_hand
/datum/organ/external/l_leg
/datum/organ/external/mutate()
/datum/organ/external/need_process()
/datum/organ/external/process()
/datum/organ/external/r_arm
/datum/organ/external/r_foot
/datum/organ/external/r_hand
/datum/organ/external/r_leg
/datum/organ/external/rejuvenate()
/datum/organ/external/release_restraints()
/datum/organ/external/robotize()
/datum/organ/external/salve()
/datum/organ/external/setAmputatedTree()
/datum/organ/external/take_damage(brute, burn, sharp, used_weapon = null, list/forbidden_limbs = list())
/datum/organ/external/unmutate()
/datum/organ/external/update_damages()
/datum/organ/external/update_germs()
/datum/organ/external/update_icon()
/datum/organ/external/update_wounds()
/datum/organ/get_icon()
/datum/organ/internal
/datum/organ/internal/New(mob/living/carbon/human/H)
/datum/organ/internal/brain
/datum/organ/internal/emp_act(severity)
/datum/organ/internal/eyes
/datum/organ/internal/eyes/process()
/datum/organ/internal/heart
/datum/organ/internal/is_broken()
/datum/organ/internal/is_bruised()
/datum/organ/internal/kidney
/datum/organ/internal/liver
/datum/organ/internal/liver/process()
/datum/organ/internal/lungs
/datum/organ/internal/lungs/process()
/datum/organ/internal/mechanize()
/datum/organ/internal/mechassist()
/datum/organ/internal/rejuvenate()
/datum/organ/internal/take_damage(amount, var/silent=0)
/datum/organ/proc/add_autopsy_data(var/used_weapon, var/damage)
/datum/organ/process()
/datum/organ/receive_chem(chemical as obj)
/datum/paiCandidate
/datum/paiCandidate/savefile_load(mob/user, var/silent = 1)
/datum/paiCandidate/savefile_path(mob/user)
/datum/paiCandidate/savefile_save(mob/user)
/datum/paiController
/datum/paiController/Topic(href, href_list[])
/datum/paiController/check_recruit(var/mob/dead/observer/O)
/datum/paiController/findPAI(var/obj/item/device/paicard/p, var/mob/user)
/datum/paiController/question(var/client/C)
/datum/paiController/recruitWindow(var/mob/M as mob)
/datum/paiController/requestRecruits()
/datum/pipe_network
/datum/pipe_network/New()
/datum/pipe_network/build_network(obj/machinery/atmospherics/start_normal, obj/machinery/atmospherics/reference)
/datum/pipe_network/merge(datum/pipe_network/giver)
/datum/pipe_network/process()
/datum/pipe_network/reconcile_air()
/datum/pipe_network/update_network_gases()
/datum/pipeline
/datum/pipeline/Del()
/datum/pipeline/build_pipeline(obj/machinery/atmospherics/pipe/base)
/datum/pipeline/mingle_with_turf(turf/simulated/target, mingle_volume)
/datum/pipeline/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/datum/pipeline/process()
/datum/pipeline/radiate_heat(surface, thermal_conductivity)
/datum/pipeline/return_network(obj/machinery/atmospherics/reference)
/datum/pipeline/temperature_interact(turf/target, share_volume, thermal_conductivity)
/datum/pipeline/temporarily_store_air()
/datum/player_info/var/author
/datum/player_info/var/content
/datum/player_info/var/rank
/datum/player_info/var/timestamp
/datum/polloption
/datum/poster
/datum/poster/bay_1
/datum/poster/bay_10
/datum/poster/bay_11
/datum/poster/bay_12
/datum/poster/bay_13
/datum/poster/bay_14
/datum/poster/bay_15
/datum/poster/bay_16
/datum/poster/bay_17
/datum/poster/bay_18
/datum/poster/bay_19
/datum/poster/bay_2
/datum/poster/bay_20
/datum/poster/bay_21
/datum/poster/bay_22
/datum/poster/bay_23
/datum/poster/bay_24
/datum/poster/bay_25
/datum/poster/bay_26
/datum/poster/bay_27
/datum/poster/bay_28
/datum/poster/bay_29
/datum/poster/bay_3
/datum/poster/bay_4
/datum/poster/bay_5
/datum/poster/bay_6
/datum/poster/bay_7
/datum/poster/bay_8
/datum/poster/bay_9
/datum/poster/tg_1
/datum/poster/tg_10
/datum/poster/tg_11
/datum/poster/tg_12
/datum/poster/tg_13
/datum/poster/tg_14
/datum/poster/tg_15
/datum/poster/tg_16
/datum/poster/tg_17
/datum/poster/tg_18
/datum/poster/tg_19
/datum/poster/tg_2
/datum/poster/tg_20
/datum/poster/tg_21
/datum/poster/tg_3
/datum/poster/tg_4
/datum/poster/tg_5
/datum/poster/tg_6
/datum/poster/tg_7
/datum/poster/tg_8
/datum/poster/tg_9
/datum/power
/datum/power/changeling
/datum/power/changeling/ChemicalSynth
/datum/power/changeling/DeathSting
/datum/power/changeling/DigitalCamoflague
/datum/power/changeling/EngorgedGlands
/datum/power/changeling/Epinephrine
/datum/power/changeling/LSDSting
/datum/power/changeling/absorb_dna
/datum/power/changeling/blind_sting
/datum/power/changeling/boost_range
/datum/power/changeling/change_species
/datum/power/changeling/deaf_sting
/datum/power/changeling/extractdna
/datum/power/changeling/fakedeath
/datum/power/changeling/hive_download
/datum/power/changeling/hive_upload
/datum/power/changeling/lesser_form
/datum/power/changeling/mimicvoice
/datum/power/changeling/paralysis_sting
/datum/power/changeling/rapidregeneration
/datum/power/changeling/silence_sting
/datum/power/changeling/transform
/datum/power/changeling/transformation_sting
/datum/power/changeling/unfat_sting
/datum/powernet
/datum/powernet/cut_cable(var/obj/structure/cable/C)
/datum/powernet/get_electrocute_damage()
/datum/powernet/reset()
/datum/preferences
/datum/preferences/GetJobDepartment(var/datum/job/job, var/level)
/datum/preferences/GetPlayerAltTitle(datum/job/job)
/datum/preferences/New(client/C)
/datum/preferences/ResetJobs()
/datum/preferences/SetChoices(mob/user, limit = 14, list/splitJobs = list("Chief Engineer","Research Director"), width = 610, height = 650)
/datum/preferences/SetDisabilities(mob/user)
/datum/preferences/SetJob(mob/user, role)
/datum/preferences/SetJobDepartment(var/datum/job/job, var/level)
/datum/preferences/SetJobPreferenceLevel(var/datum/job/job, var/level)
/datum/preferences/SetPlayerAltTitle(datum/job/job, new_title)
/datum/preferences/SetRecords(mob/user)
/datum/preferences/ShowChoices(mob/user)
/datum/preferences/ShowDisabilityState(mob/user,flag,label)
/datum/preferences/UpdateJobPreference(mob/user, role, desiredLvl)
/datum/preferences/blend_backpack(var/icon/clothes_s,var/backbag,var/satchel,var/backpack="backpack")
/datum/preferences/close_load_dialog(mob/user)
/datum/preferences/copy_to(mob/living/carbon/human/character, safety = 0)
/datum/preferences/load_character(slot)
/datum/preferences/load_path(ckey,filename="preferences.sav")
/datum/preferences/load_preferences()
/datum/preferences/load_save(dir)
/datum/preferences/open_load_dialog(mob/user)
/datum/preferences/process_link(mob/user, list/href_list)
/datum/preferences/random_character()
/datum/preferences/randomize_appearance_for(var/mob/living/carbon/human/H)
/datum/preferences/randomize_eyes_color()
/datum/preferences/randomize_hair_color(var/target = "hair")
/datum/preferences/randomize_skin_color()
/datum/preferences/save_character()
/datum/preferences/save_preferences()
/datum/preferences/save_volume()
/datum/preferences/savefile_update()
/datum/preferences/update_preview_icon(var/for_observer=0)
/datum/projectile_data
/datum/puddle
/datum/puddle/Del()
/datum/puddle/New()
/datum/puddle/process()
/datum/radio_frequency
/datum/radio_frequency/add_listener(obj/device as obj, var/filter as text|null)
/datum/radio_frequency/post_signal(obj/source as obj|null, datum/signal/signal, var/filter = null as text|null, var/range = null as num|null)
/datum/radio_frequency/remove_listener(obj/device)
/datum/reagent
/datum/reagent/Alchdranine
/datum/reagent/Alchdranine/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/adminordrazine
/datum/reagent/adminordrazine/on_mob_life(var/mob/living/carbon/M as mob)
/datum/reagent/alkysine
/datum/reagent/alkysine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/aluminum
/datum/reagent/amatoxin
/datum/reagent/amatoxin/Del()
/datum/reagent/amatoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ammonia
/datum/reagent/analysis_sample
/datum/reagent/anti_toxin
/datum/reagent/anti_toxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/anti_toxin/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/antibodies
/datum/reagent/antibodies/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/antidepressant/citalopram
/datum/reagent/antidepressant/citalopram/on_mob_life(var/mob/living/M as mob)
/datum/reagent/antidepressant/methylphenidate
/datum/reagent/antidepressant/methylphenidate/on_mob_life(var/mob/living/M as mob)
/datum/reagent/antidepressant/paroxetine
/datum/reagent/antidepressant/paroxetine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/arithrazine
/datum/reagent/arithrazine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/aslimetoxin
/datum/reagent/aslimetoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/beer2
/datum/reagent/beer2/on_mob_life(var/mob/living/M as mob)
/datum/reagent/bicaridine
/datum/reagent/bicaridine/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/blackpepper
/datum/reagent/blood
/datum/reagent/blood/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/blood/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/capsaicin
/datum/reagent/capsaicin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/carbon
/datum/reagent/carbon/reaction_turf(var/turf/T, var/volume)
/datum/reagent/carpotoxin
/datum/reagent/carpotoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/chefspecial
/datum/reagent/chefspecial/on_mob_life(var/mob/living/M as mob)
/datum/reagent/chemical_waste
/datum/reagent/cherryjelly
/datum/reagent/cherryjelly/on_mob_life(var/mob/living/M as mob)
/datum/reagent/chloralhydrate
/datum/reagent/chloralhydrate/on_mob_life(var/mob/living/M as mob)
/datum/reagent/chlorine
/datum/reagent/chlorine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/clonexadone
/datum/reagent/clonexadone/on_mob_life(var/mob/living/M as mob)
/datum/reagent/coco
/datum/reagent/coco/on_mob_life(var/mob/living/M as mob)
/datum/reagent/condensedcapsaicin
/datum/reagent/condensedcapsaicin/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/coolant
/datum/reagent/copper
/datum/reagent/cornoil
/datum/reagent/cornoil/on_mob_life(var/mob/living/M as mob)
/datum/reagent/cornoil/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/cryoxadone
/datum/reagent/cryoxadone/on_mob_life(var/mob/living/M as mob)
/datum/reagent/cryptobiolin
/datum/reagent/cryptobiolin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/cyanide
/datum/reagent/cyanide/on_mob_life(var/mob/living/M as mob)
/datum/reagent/density_separated_sample
/datum/reagent/dermaline
/datum/reagent/dermaline/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/dexalin
/datum/reagent/dexalin/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/dexalinp
/datum/reagent/dexalinp/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/diethylamine
/datum/reagent/drink
/datum/reagent/drink/banana
/datum/reagent/drink/berryjuice
/datum/reagent/drink/carrotjuice
/datum/reagent/drink/carrotjuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/coffee
/datum/reagent/drink/coffee/cafe_latte
/datum/reagent/drink/coffee/cafe_latte/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/coffee/icecoffee
/datum/reagent/drink/coffee/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/coffee/soy_latte
/datum/reagent/drink/coffee/soy_latte/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/cold
/datum/reagent/drink/cold/brownstar
/datum/reagent/drink/cold/dr_gibb
/datum/reagent/drink/cold/ice
/datum/reagent/drink/cold/kiraspecial
/datum/reagent/drink/cold/lemon_lime
/datum/reagent/drink/cold/lemonade
/datum/reagent/drink/cold/milkshake
/datum/reagent/drink/cold/milkshake/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/cold/nuka_cola
/datum/reagent/drink/cold/nuka_cola/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/cold/rewriter
/datum/reagent/drink/cold/rewriter/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/cold/sodawater
/datum/reagent/drink/cold/space_cola
/datum/reagent/drink/cold/space_up
/datum/reagent/drink/cold/spacemountainwind
/datum/reagent/drink/cold/tonic
/datum/reagent/drink/doctor_delight
/datum/reagent/drink/doctor_delight/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/hot_coco
/datum/reagent/drink/icetea
/datum/reagent/drink/kahlua
/datum/reagent/drink/kahlua/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/lemonjuice
/datum/reagent/drink/limejuice
/datum/reagent/drink/limejuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/milk
/datum/reagent/drink/milk/cream
/datum/reagent/drink/milk/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/milk/soymilk
/datum/reagent/drink/nothing
/datum/reagent/drink/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/orangejuice
/datum/reagent/drink/orangejuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/poisonberryjuice
/datum/reagent/drink/poisonberryjuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/potato_juice
/datum/reagent/drink/tea
/datum/reagent/drink/tea/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/tomatojuice
/datum/reagent/drink/tomatojuice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/drink/watermelonjuice
/datum/reagent/dry_ramen
/datum/reagent/dry_ramen/on_mob_life(var/mob/living/M as mob)
/datum/reagent/enzyme
/datum/reagent/ethanol
/datum/reagent/ethanol/absinthe
/datum/reagent/ethanol/absinthe/on_mob_life(var/mob/M)
/datum/reagent/ethanol/acid_spit
/datum/reagent/ethanol/ale
/datum/reagent/ethanol/alliescocktail
/datum/reagent/ethanol/aloe
/datum/reagent/ethanol/amasec
/datum/reagent/ethanol/amasec/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/andalusia
/datum/reagent/ethanol/antifreeze
/datum/reagent/ethanol/atomicbomb
/datum/reagent/ethanol/b52
/datum/reagent/ethanol/bahama_mama
/datum/reagent/ethanol/bananahonk
/datum/reagent/ethanol/barefoot
/datum/reagent/ethanol/beepsky_smash
/datum/reagent/ethanol/beer
/datum/reagent/ethanol/beer/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/bilk
/datum/reagent/ethanol/black_russian
/datum/reagent/ethanol/bloody_mary
/datum/reagent/ethanol/booger
/datum/reagent/ethanol/brave_bull
/datum/reagent/ethanol/changelingsting
/datum/reagent/ethanol/changelingsting/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/cognac
/datum/reagent/ethanol/cuba_libre
/datum/reagent/ethanol/deadrum
/datum/reagent/ethanol/deadrum/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/demonsblood
/datum/reagent/ethanol/devilskiss
/datum/reagent/ethanol/driestmartini
/datum/reagent/ethanol/driestmartini/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/erikasurprise
/datum/reagent/ethanol/gargle_blaster
/datum/reagent/ethanol/gin
/datum/reagent/ethanol/ginfizz
/datum/reagent/ethanol/gintonic
/datum/reagent/ethanol/goldschlager
/datum/reagent/ethanol/grog
/datum/reagent/ethanol/hooch
/datum/reagent/ethanol/iced_beer
/datum/reagent/ethanol/iced_beer/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/irish_cream
/datum/reagent/ethanol/irishcarbomb
/datum/reagent/ethanol/irishcarbomb/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/irishcoffee
/datum/reagent/ethanol/longislandicedtea
/datum/reagent/ethanol/manhattan
/datum/reagent/ethanol/manhattan_proj
/datum/reagent/ethanol/manly_dorf
/datum/reagent/ethanol/margarita
/datum/reagent/ethanol/martini
/datum/reagent/ethanol/mead
/datum/reagent/ethanol/moonshine
/datum/reagent/ethanol/neurotoxin
/datum/reagent/ethanol/neurotoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/patron
/datum/reagent/ethanol/reaction_obj(var/obj/O, var/volume)
/datum/reagent/ethanol/red_mead
/datum/reagent/ethanol/rum
/datum/reagent/ethanol/sake
/datum/reagent/ethanol/sbiten
/datum/reagent/ethanol/sbiten/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/screwdrivercocktail
/datum/reagent/ethanol/silencer
/datum/reagent/ethanol/singulo
/datum/reagent/ethanol/snowwhite
/datum/reagent/ethanol/specialwhiskey
/datum/reagent/ethanol/syndicatebomb
/datum/reagent/ethanol/tequilla
/datum/reagent/ethanol/tequilla_sunrise
/datum/reagent/ethanol/thirteenloko
/datum/reagent/ethanol/thirteenloko/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ethanol/threemileisland
/datum/reagent/ethanol/toxins_special
/datum/reagent/ethanol/vermouth
/datum/reagent/ethanol/vodka
/datum/reagent/ethanol/vodkamartini
/datum/reagent/ethanol/vodkatonic
/datum/reagent/ethanol/whiskey
/datum/reagent/ethanol/whiskey_cola
/datum/reagent/ethanol/whiskeysoda
/datum/reagent/ethanol/white_russian
/datum/reagent/ethanol/wine
/datum/reagent/ethylredoxrazine
/datum/reagent/ethylredoxrazine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/fluorine
/datum/reagent/fluorine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/fluorosurfactant
/datum/reagent/foaming_agent
/datum/reagent/frostoil
/datum/reagent/frostoil/on_mob_life(var/mob/living/M as mob)
/datum/reagent/frostoil/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/fuel
/datum/reagent/fuel/on_mob_life(var/mob/living/M as mob)
/datum/reagent/fuel/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/fuel/reaction_obj(var/obj/O, var/volume)
/datum/reagent/fuel/reaction_turf(var/turf/T, var/volume)
/datum/reagent/glycerol
/datum/reagent/gold
/datum/reagent/ground_rock
/datum/reagent/hell_ramen
/datum/reagent/hell_ramen/on_mob_life(var/mob/living/M as mob)
/datum/reagent/hippies_delight
/datum/reagent/hippies_delight/on_mob_life(var/mob/living/M as mob)
/datum/reagent/holywater
/datum/reagent/holywater/on_mob_life(var/mob/living/M as mob)
/datum/reagent/holywater/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/honey
/datum/reagent/hot_coco
/datum/reagent/hot_coco/on_mob_life(var/mob/living/M as mob)
/datum/reagent/hot_ramen
/datum/reagent/hot_ramen/on_mob_life(var/mob/living/M as mob)
/datum/reagent/hydrogen
/datum/reagent/hyperzine
/datum/reagent/hyperzine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/hyronalin
/datum/reagent/hyronalin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/imidazoline
/datum/reagent/imidazoline/on_mob_life(var/mob/living/M as mob)
/datum/reagent/impedrezene
/datum/reagent/impedrezene/on_mob_life(var/mob/living/M as mob)
/datum/reagent/inaprovaline
/datum/reagent/inaprovaline/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/iron
/datum/reagent/kelotane
/datum/reagent/kelotane/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ketchup
/datum/reagent/leporazine
/datum/reagent/leporazine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/lexorin
/datum/reagent/lexorin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/lipozine
/datum/reagent/lipozine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/lithium
/datum/reagent/lithium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/lithiumsodiumtungstate
/datum/reagent/lube
/datum/reagent/lube/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/mercury
/datum/reagent/mercury/on_mob_life(var/mob/living/M as mob)
/datum/reagent/mindbreaker
/datum/reagent/mindbreaker/on_mob_life(var/mob/living/M)
/datum/reagent/minttoxin
/datum/reagent/minttoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/mutagen
/datum/reagent/mutagen/on_mob_life(var/mob/living/M as mob)
/datum/reagent/mutagen/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/nanites
/datum/reagent/nanites/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/nicotine
/datum/reagent/nitrogen
/datum/reagent/nitrogen/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/nitroglycerin
/datum/reagent/nutriment
/datum/reagent/nutriment/on_mob_life(var/mob/living/M as mob)
/datum/reagent/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/on_move(var/mob/M)
/datum/reagent/on_update(var/atom/A)
/datum/reagent/oxycodone
/datum/reagent/oxygen
/datum/reagent/oxygen/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/pacid
/datum/reagent/pacid/on_mob_life(var/mob/living/M as mob)
/datum/reagent/pacid/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/pacid/reaction_obj(var/obj/O, var/volume)
/datum/reagent/paint
/datum/reagent/paint/black
/datum/reagent/paint/blue
/datum/reagent/paint/green
/datum/reagent/paint/reaction_turf(var/turf/T, var/volume)
/datum/reagent/paint/red
/datum/reagent/paint/violet
/datum/reagent/paint/white
/datum/reagent/paint/yellow
/datum/reagent/paint_remover
/datum/reagent/paint_remover/reaction_turf(var/turf/T, var/volume)
/datum/reagent/paracetamol
/datum/reagent/paracetamol/on_mob_life(var/mob/living/M as mob)
/datum/reagent/peridaxon
/datum/reagent/peridaxon/on_mob_life(var/mob/living/M as mob)
/datum/reagent/phosphorus
/datum/reagent/plantbgone
/datum/reagent/plantbgone/on_mob_life(var/mob/living/carbon/M)
/datum/reagent/plantbgone/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/plantbgone/reaction_obj(var/obj/O, var/volume)
/datum/reagent/plantbgone/reaction_turf(var/turf/T, var/volume)
/datum/reagent/plasma
/datum/reagent/plasma/on_mob_life(var/mob/living/M as mob)
/datum/reagent/plasma/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/plasma/reaction_obj(var/obj/O, var/volume)
/datum/reagent/plasma/reaction_turf(var/turf/T, var/volume)
/datum/reagent/plasticide
/datum/reagent/plasticide/on_mob_life(var/mob/living/M as mob)
/datum/reagent/potassium
/datum/reagent/potassium_chloride
/datum/reagent/potassium_chloride/on_mob_life(var/mob/living/carbon/M as mob)
/datum/reagent/potassium_chlorophoride
/datum/reagent/potassium_chlorophoride/on_mob_life(var/mob/living/carbon/M as mob)
/datum/reagent/psilocybin
/datum/reagent/psilocybin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/radium
/datum/reagent/radium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/radium/reaction_turf(var/turf/T, var/volume)
/datum/reagent/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/reaction_obj(var/obj/O, var/volume)
/datum/reagent/reaction_turf(var/turf/T, var/volume)
/datum/reagent/rezadone
/datum/reagent/rezadone/on_mob_life(var/mob/living/M as mob)
/datum/reagent/rice
/datum/reagent/rice/on_mob_life(var/mob/living/M as mob)
/datum/reagent/ryetalyn
/datum/reagent/ryetalyn/on_mob_life(var/mob/living/M as mob)
/datum/reagent/sacid
/datum/reagent/sacid/on_mob_life(var/mob/living/M as mob)
/datum/reagent/sacid/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/sacid/reaction_obj(var/obj/O, var/volume)
/datum/reagent/serotrotium
/datum/reagent/serotrotium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/silicon
/datum/reagent/silver
/datum/reagent/slimejelly
/datum/reagent/slimejelly/on_mob_life(var/mob/living/M as mob)
/datum/reagent/slimetoxin
/datum/reagent/slimetoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/sodium
/datum/reagent/sodiumchloride
/datum/reagent/soysauce
/datum/reagent/space_cleaner
/datum/reagent/space_cleaner/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/space_cleaner/reaction_obj(var/obj/O, var/volume)
/datum/reagent/space_cleaner/reaction_turf(var/turf/T, var/volume)
/datum/reagent/space_cleaner/reaction_turf(var/turf/simulated/S, var/volume)
/datum/reagent/space_drugs
/datum/reagent/space_drugs/on_mob_life(var/mob/living/M as mob)
/datum/reagent/spaceacillin
/datum/reagent/spaceacillin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/spore
/datum/reagent/spore/on_mob_life(var/mob/living/M)
/datum/reagent/sprinkles
/datum/reagent/sprinkles/on_mob_life(var/mob/living/M as mob)
/datum/reagent/srejuvenate
/datum/reagent/srejuvenate/on_mob_life(var/mob/living/M as mob)
/datum/reagent/sterilizine
/datum/reagent/stoxin
/datum/reagent/stoxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/sugar
/datum/reagent/sugar/on_mob_life(var/mob/living/M as mob)
/datum/reagent/sulfur
/datum/reagent/synaptizine
/datum/reagent/synaptizine/on_mob_life(var/mob/living/M as mob)
/datum/reagent/thermite
/datum/reagent/thermite/on_mob_life(var/mob/living/M as mob)
/datum/reagent/thermite/reaction_turf(var/turf/T, var/volume)
/datum/reagent/toxin
/datum/reagent/toxin/coffeepowder
/datum/reagent/toxin/on_mob_life(var/mob/living/M as mob)
/datum/reagent/toxin/teapowder
/datum/reagent/tramadol
/datum/reagent/tricordrazine
/datum/reagent/tricordrazine/on_mob_life(var/mob/living/M as mob, var/alien)
/datum/reagent/tungsten
/datum/reagent/ultraglue
/datum/reagent/uranium
/datum/reagent/uranium/on_mob_life(var/mob/living/M as mob)
/datum/reagent/uranium/reaction_turf(var/turf/T, var/volume)
/datum/reagent/vaccine
/datum/reagent/vaccine/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/virus_food
/datum/reagent/virus_food/on_mob_life(var/mob/living/M as mob)
/datum/reagent/water
/datum/reagent/water/on_mob_life(var/mob/living/M as mob)
/datum/reagent/water/reaction_mob(var/mob/living/M, var/method=TOUCH, var/volume)
/datum/reagent/water/reaction_obj(var/obj/O, var/volume)
/datum/reagent/water/reaction_turf(var/turf/simulated/T, var/volume)
/datum/reagent/xenomicrobes
/datum/reagent/xenomicrobes/reaction_mob(var/mob/M, var/method=TOUCH, var/volume)
/datum/reagent/zombiepowder
/datum/reagent/zombiepowder/Del()
/datum/reagent/zombiepowder/on_mob_life(var/mob/living/carbon/M as mob)
/datum/reagents
/datum/reagents/New(maximum=100)
/datum/reagents/add_reagent(var/reagent, var/amount, var/list/data=null)
/datum/reagents/clear_reagents()
/datum/reagents/conditional_update(var/atom/A, )
/datum/reagents/conditional_update_move(var/atom/A, var/Running = 0)
/datum/reagents/copy_data(var/datum/reagent/current_reagent)
/datum/reagents/copy_to(var/obj/target, var/amount=1, var/multiplier=1, var/preserve_data=1, var/safety = 0)
/datum/reagents/del_reagent(var/reagent)
/datum/reagents/delete()
/datum/reagents/get_data(var/reagent_id)
/datum/reagents/get_master_reagent_id()
/datum/reagents/get_master_reagent_name()
/datum/reagents/get_reagent_amount(var/reagent)
/datum/reagents/get_reagent_ids(var/and_amount=0)
/datum/reagents/get_reagents()
/datum/reagents/handle_reactions()
/datum/reagents/has_reagent(var/reagent, var/amount = -1)
/datum/reagents/isolate_reagent(var/reagent)
/datum/reagents/metabolize(var/mob/M,var/alien)
/datum/reagents/reaction(var/atom/A, var/method=TOUCH, var/volume_modifier=0)
/datum/reagents/remove_all_type(var/reagent_type, var/amount, var/strict = 0, var/safety = 1)
/datum/reagents/remove_any(var/amount=1)
/datum/reagents/remove_reagent(var/reagent, var/amount, var/safety)
/datum/reagents/set_data(var/reagent_id, var/new_data)
/datum/reagents/trans_id_to(var/obj/target, var/reagent, var/amount=1, var/preserve_data=1)
/datum/reagents/trans_to(var/obj/target, var/amount=1, var/multiplier=1, var/preserve_data=1)
/datum/reagents/trans_to_ingest(var/obj/target, var/amount=1, var/multiplier=1, var/preserve_data=1)
/datum/reagents/update_total()
/datum/recipe
/datum/recipe/aesirsalad
/datum/recipe/amanita_pie
/datum/recipe/amanitajelly
/datum/recipe/amanitajelly/make_food(var/obj/container as obj)
/datum/recipe/applecake
/datum/recipe/applepie
/datum/recipe/appletart
/datum/recipe/baguette
/datum/recipe/bananabread
/datum/recipe/beans
/datum/recipe/beetsoup
/datum/recipe/benedict
/datum/recipe/berryclafoutis
/datum/recipe/bigbiteburger
/datum/recipe/birthdaycake
/datum/recipe/bloodsoup
/datum/recipe/boiledegg
/datum/recipe/boiledrice
/datum/recipe/boiledslimeextract
/datum/recipe/boiledspagetti
/datum/recipe/boiledspiderleg
/datum/recipe/brainburger
/datum/recipe/braincake
/datum/recipe/bread
/datum/recipe/bun
/datum/recipe/candiedapple
/datum/recipe/carrotcake
/datum/recipe/chaosdonut
/datum/recipe/chawanmushi
/datum/recipe/check_items(var/obj/container as obj)
/datum/recipe/check_reagents(var/datum/reagents/avail_reagents)
/datum/recipe/cheesecake
/datum/recipe/cheesyfries
/datum/recipe/cherrypie
/datum/recipe/cherrysandwich
/datum/recipe/chocolatecake
/datum/recipe/chocolateegg
/datum/recipe/clownburger
/datum/recipe/clownstears
/datum/recipe/coldchili
/datum/recipe/cookie
/datum/recipe/cracker
/datum/recipe/creamcheesebread
/datum/recipe/cubancarp
/datum/recipe/cutlet
/datum/recipe/dionaroast
/datum/recipe/donkpocket
/datum/recipe/donkpocket/make_food(var/obj/container as obj)
/datum/recipe/donkpocket/warm
/datum/recipe/donkpocket/warm/make_food(var/obj/container as obj)
/datum/recipe/donkpocket/warm_up(var/obj/item/weapon/reagent_containers/food/snacks/donkpocket/being_cooked)
/datum/recipe/donut
/datum/recipe/eggplantparm
/datum/recipe/enchiladas
/datum/recipe/fishandchips
/datum/recipe/fishburger
/datum/recipe/fishfingers
/datum/recipe/flatbread
/datum/recipe/fortunecookie
/datum/recipe/fortunecookie/check_items(var/obj/container as obj)
/datum/recipe/fortunecookie/make_food(var/obj/container as obj)
/datum/recipe/friedbanana
/datum/recipe/friedegg
/datum/recipe/fries
/datum/recipe/ghostburger
/datum/recipe/grilledcheese
/datum/recipe/herbsalad
/datum/recipe/herbsalad/make_food(var/obj/container as obj)
/datum/recipe/hotchili
/datum/recipe/hotdog
/datum/recipe/human/burger
/datum/recipe/human/kabob
/datum/recipe/icecreamsandwich
/datum/recipe/jelliedtoast
/datum/recipe/jellyburger
/datum/recipe/jellydonut
/datum/recipe/jellydonut/cherry
/datum/recipe/jellydonut/slime
/datum/recipe/lemoncake
/datum/recipe/limecake
/datum/recipe/loadedbakedpotato
/datum/recipe/make(var/obj/container as obj)
/datum/recipe/make_food(var/obj/container as obj)
/datum/recipe/meatball
/datum/recipe/meatballsoup
/datum/recipe/meatballspagetti
/datum/recipe/meatbread
/datum/recipe/meatbun
/datum/recipe/meatpie
/datum/recipe/meatpizza
/datum/recipe/meatsteak
/datum/recipe/milosoup
/datum/recipe/mimeburger
/datum/recipe/mint
/datum/recipe/monkeykabob
/datum/recipe/monkeysdelight
/datum/recipe/muffin
/datum/recipe/mushroompizza
/datum/recipe/mushroomsoup
/datum/recipe/mysterysoup
/datum/recipe/nettlesoup
/datum/recipe/notasandwich
/datum/recipe/omelette
/datum/recipe/orangecake
/datum/recipe/pastatomato
/datum/recipe/pie
/datum/recipe/pizzamargherita
/datum/recipe/plainburger
/datum/recipe/plaincake
/datum/recipe/plump_pie
/datum/recipe/plumphelmetbiscuit
/datum/recipe/popcorn
/datum/recipe/poppypretzel
/datum/recipe/pumpkinpie
/datum/recipe/ricepudding
/datum/recipe/roburger
/datum/recipe/rofflewaffles
/datum/recipe/ruinedvirusdish
/datum/recipe/sandwich
/datum/recipe/sashimi
/datum/recipe/sausage
/datum/recipe/slimeburger
/datum/recipe/slimesandwich
/datum/recipe/slimesoup
/datum/recipe/slimetoast
/datum/recipe/soylentgreen
/datum/recipe/soylenviridians
/datum/recipe/spacylibertyduff
/datum/recipe/spellburger
/datum/recipe/spesslaw
/datum/recipe/spidereggsham
/datum/recipe/stew
/datum/recipe/stewedsoymeat
/datum/recipe/stuffing
/datum/recipe/sugarcookie
/datum/recipe/superbiteburger
/datum/recipe/syntibread
/datum/recipe/syntiburger
/datum/recipe/syntikabob
/datum/recipe/syntipizza
/datum/recipe/syntisteak
/datum/recipe/syntitelebacon
/datum/recipe/taco
/datum/recipe/telebacon
/datum/recipe/toastedsandwich
/datum/recipe/tofubread
/datum/recipe/tofuburger
/datum/recipe/tofukabob
/datum/recipe/tofupie
/datum/recipe/tofurkey
/datum/recipe/tomatosoup
/datum/recipe/twobread
/datum/recipe/validsalad
/datum/recipe/validsalad/make_food(var/obj/container as obj)
/datum/recipe/vegetablepizza
/datum/recipe/vegetablesoup
/datum/recipe/waffles
/datum/recipe/wingfangchu
/datum/recipe/wishsoup
/datum/recipe/wrap
/datum/recipe/xemeatpie
/datum/recipe/xenoburger
/datum/recipe/xenomeatbread
/datum/research
/datum/research/AddDesign2Known(var/datum/design/D)
/datum/research/AddTech2Known(var/datum/tech/T)
/datum/research/DesignHasReqs(var/datum/design/D)
/datum/research/New()
/datum/research/RefreshResearch()
/datum/research/TechHasReqs(var/datum/tech/T)
/datum/research/UpdateDesign(var/path)
/datum/research/UpdateTech(var/ID, var/level)
/datum/robot_component/New(mob/living/silicon/robot/R)
/datum/robot_component/actuator
/datum/robot_component/armour
/datum/robot_component/binary_communication
/datum/robot_component/camera
/datum/robot_component/cell
/datum/robot_component/cell/destroy()
/datum/robot_component/consume_power()
/datum/robot_component/destroy()
/datum/robot_component/diagnosis_unit
/datum/robot_component/heal_damage(brute, electronics)
/datum/robot_component/install()
/datum/robot_component/is_powered()
/datum/robot_component/radio
/datum/robot_component/take_damage(brute, electronics, sharp)
/datum/robot_component/uninstall()
/datum/robot_component/var/mob/living/silicon/robot/owner
/datum/robot_component/var/name
/datum/shuttle_controller
/datum/shuttle_controller/emergency_shuttle/process()
/datum/shuttle_controller/get_shuttle_arrive_time()
/datum/shuttle_controller/incall(coeff = 1)
/datum/shuttle_controller/process()
/datum/shuttle_controller/recall()
/datum/shuttle_controller/setdirection(var/dirn)
/datum/shuttle_controller/settimeleft(var/delay)
/datum/shuttle_controller/shuttlealert(var/X)
/datum/shuttle_controller/timeleft()
/datum/signal
/datum/signal/copy_from(datum/signal/model)
/datum/signal/debug_print()
/datum/signal/mem(var/address, var/value)
/datum/signal/tcombroadcast(var/message, var/freq, var/source, var/job)
/datum/song
/datum/song_info
/datum/song_info/New(var/list/json)
/datum/song_info/display()
/datum/song_info/displaytitle()
/datum/song_info/proc/displaytitle()
/datum/spacepod/equipment
/datum/spacepod/equipment/New(var/obj/spacepod/SP)
/datum/species
/datum/species/create_organs(var/mob/living/carbon/human/H)
/datum/species/diona
/datum/species/diona/handle_death(var/mob/living/carbon/human/H)
/datum/species/diona/handle_post_spawn(var/mob/living/carbon/human/H)
/datum/species/equip(var/mob/living/carbon/human/H)
/datum/species/grey
/datum/species/grey/makeName(var/gender,var/mob/living/carbon/human/H=null)
/datum/species/handle_death(var/mob/living/carbon/human/H)
/datum/species/handle_post_spawn(var/mob/living/carbon/human/H)
/datum/species/human
/datum/species/kidan
/datum/species/machine
/datum/species/makeName(var/gender,var/mob/living/carbon/human/H=null)
/datum/species/say_filter(mob/M, message, datum/language/speaking)
/datum/species/skrell
/datum/species/slime
/datum/species/slime/handle_post_spawn(var/mob/living/carbon/human/H)
/datum/species/tajaran
/datum/species/unathi
/datum/species/vox
/datum/species/vox/armalis
/datum/species/vox/armalis/handle_post_spawn(var/mob/living/carbon/human/H)
/datum/species/vox/create_organs(var/mob/living/carbon/human/H)
/datum/species/vox/handle_post_spawn(var/mob/living/carbon/human/H)
/datum/sprite_accessory
/datum/sprite_accessory/facial_hair
/datum/sprite_accessory/facial_hair/abe
/datum/sprite_accessory/facial_hair/chaplin
/datum/sprite_accessory/facial_hair/chinstrap
/datum/sprite_accessory/facial_hair/dwarf
/datum/sprite_accessory/facial_hair/elvis
/datum/sprite_accessory/facial_hair/fullbeard
/datum/sprite_accessory/facial_hair/gt
/datum/sprite_accessory/facial_hair/hip
/datum/sprite_accessory/facial_hair/hogan
/datum/sprite_accessory/facial_hair/jensen
/datum/sprite_accessory/facial_hair/longbeard
/datum/sprite_accessory/facial_hair/neckbeard
/datum/sprite_accessory/facial_hair/selleck
/datum/sprite_accessory/facial_hair/shaved
/datum/sprite_accessory/facial_hair/taj_goatee
/datum/sprite_accessory/facial_hair/taj_moustache
/datum/sprite_accessory/facial_hair/taj_mutton
/datum/sprite_accessory/facial_hair/taj_pencilstache
/datum/sprite_accessory/facial_hair/taj_sideburns
/datum/sprite_accessory/facial_hair/taj_smallstache
/datum/sprite_accessory/facial_hair/vandyke
/datum/sprite_accessory/facial_hair/vlongbeard
/datum/sprite_accessory/facial_hair/watson
/datum/sprite_accessory/hair
/datum/sprite_accessory/hair/afro
/datum/sprite_accessory/hair/afro2
/datum/sprite_accessory/hair/afro_large
/datum/sprite_accessory/hair/bald
/datum/sprite_accessory/hair/balding
/datum/sprite_accessory/hair/bedhead
/datum/sprite_accessory/hair/bedhead2
/datum/sprite_accessory/hair/bedhead3
/datum/sprite_accessory/hair/beehive
/datum/sprite_accessory/hair/bob
/datum/sprite_accessory/hair/bobcurl
/datum/sprite_accessory/hair/bowl
/datum/sprite_accessory/hair/braid
/datum/sprite_accessory/hair/braid2
/datum/sprite_accessory/hair/buzz
/datum/sprite_accessory/hair/combover
/datum/sprite_accessory/hair/crew
/datum/sprite_accessory/hair/curls
/datum/sprite_accessory/hair/cut
/datum/sprite_accessory/hair/devillock
/datum/sprite_accessory/hair/dreadlocks
/datum/sprite_accessory/hair/emo
/datum/sprite_accessory/hair/fag
/datum/sprite_accessory/hair/feather
/datum/sprite_accessory/hair/gelled
/datum/sprite_accessory/hair/gentle
/datum/sprite_accessory/hair/halfbang
/datum/sprite_accessory/hair/halfbangalt
/datum/sprite_accessory/hair/himecut
/datum/sprite_accessory/hair/hitop
/datum/sprite_accessory/hair/icp_screen_blue
/datum/sprite_accessory/hair/icp_screen_breakout
/datum/sprite_accessory/hair/icp_screen_eight
/datum/sprite_accessory/hair/icp_screen_goggles
/datum/sprite_accessory/hair/icp_screen_green
/datum/sprite_accessory/hair/icp_screen_heart
/datum/sprite_accessory/hair/icp_screen_monoeye
/datum/sprite_accessory/hair/icp_screen_nature
/datum/sprite_accessory/hair/icp_screen_orange
/datum/sprite_accessory/hair/icp_screen_pink
/datum/sprite_accessory/hair/icp_screen_purple
/datum/sprite_accessory/hair/icp_screen_red
/datum/sprite_accessory/hair/icp_screen_shower
/datum/sprite_accessory/hair/icp_screen_static
/datum/sprite_accessory/hair/icp_screen_yellow
/datum/sprite_accessory/hair/jensen
/datum/sprite_accessory/hair/kagami
/datum/sprite_accessory/hair/kusangi
/datum/sprite_accessory/hair/long
/datum/sprite_accessory/hair/longalt
/datum/sprite_accessory/hair/longer
/datum/sprite_accessory/hair/longeralt
/datum/sprite_accessory/hair/longest
/datum/sprite_accessory/hair/longestalt
/datum/sprite_accessory/hair/longfringe
/datum/sprite_accessory/hair/mohawk
/datum/sprite_accessory/hair/odango
/datum/sprite_accessory/hair/ombre
/datum/sprite_accessory/hair/parted
/datum/sprite_accessory/hair/pompadour
/datum/sprite_accessory/hair/ponytail1
/datum/sprite_accessory/hair/ponytail2
/datum/sprite_accessory/hair/ponytail3
/datum/sprite_accessory/hair/quiff
/datum/sprite_accessory/hair/sargeant
/datum/sprite_accessory/hair/short
/datum/sprite_accessory/hair/sideponytail
/datum/sprite_accessory/hair/skinhead
/datum/sprite_accessory/hair/skr_clothtentacle_f
/datum/sprite_accessory/hair/skr_clothtentacle_m
/datum/sprite_accessory/hair/skr_gold_f
/datum/sprite_accessory/hair/skr_gold_m
/datum/sprite_accessory/hair/skr_tentacle_f
/datum/sprite_accessory/hair/skr_tentacle_m
/datum/sprite_accessory/hair/spiky
/datum/sprite_accessory/hair/taj_ears
/datum/sprite_accessory/hair/taj_ears_bangs
/datum/sprite_accessory/hair/taj_ears_braid
/datum/sprite_accessory/hair/taj_ears_clean
/datum/sprite_accessory/hair/taj_ears_long
/datum/sprite_accessory/hair/taj_ears_messy
/datum/sprite_accessory/hair/taj_ears_mohawk
/datum/sprite_accessory/hair/taj_ears_plait
/datum/sprite_accessory/hair/taj_ears_rattail
/datum/sprite_accessory/hair/taj_ears_shaggy
/datum/sprite_accessory/hair/taj_ears_spiky
/datum/sprite_accessory/hair/taj_ears_straight
/datum/sprite_accessory/hair/una_frills_long
/datum/sprite_accessory/hair/una_frills_short
/datum/sprite_accessory/hair/una_horns
/datum/sprite_accessory/hair/una_spines_long
/datum/sprite_accessory/hair/una_spines_short
/datum/sprite_accessory/hair/updo
/datum/sprite_accessory/hair/vox_quills_short
/datum/sprite_accessory/skin
/datum/sprite_accessory/skin/human
/datum/sprite_accessory/skin/human_tatt01
/datum/sprite_accessory/skin/skrell
/datum/sprite_accessory/skin/tajaran
/datum/sprite_accessory/skin/unathi
/datum/stack_recipe
/datum/stack_recipe/New(title, result_type, req_amount = 1, res_amount = 1, max_res_amount = 1, time = 0, one_per_turf = 0, on_floor = 0)
/datum/stack_recipe_list
/datum/stack_recipe_list/New(title, recipes, req_amount = 1)
/datum/station_state
/datum/station_state/count()
/datum/station_state/score(var/datum/station_state/result)
/datum/store
/datum/store/New()
/datum/store/PlaceOrder(var/mob/living/usr, var/itemID)
/datum/store/charge(var/datum/mind/mind,var/amount,var/datum/storeitem/item)
/datum/store/reconnect_database()
/datum/storeitem
/datum/storeitem/baby
/datum/storeitem/banhammer
/datum/storeitem/crayons
/datum/storeitem/deliver(var/mob/usr)
/datum/storeitem/flag/diona
/datum/storeitem/flag/greys
/datum/storeitem/flag/human
/datum/storeitem/flag/ian
/datum/storeitem/flag/kidan
/datum/storeitem/flag/machine
/datum/storeitem/flag/skrell
/datum/storeitem/flag/slime
/datum/storeitem/flag/taj
/datum/storeitem/flag/unathi
/datum/storeitem/flag/vox
/datum/storeitem/katana
/datum/storeitem/laserpointer
/datum/storeitem/pipe
/datum/storeitem/snap_pops
/datum/storeitem/violin
/datum/sun
/datum/sun/New()
/datum/sun/calc_position()
/datum/sun/occlusion(var/obj/machinery/power/solar/S)
/datum/supply_order
/datum/supply_packs
/datum/supply_packs/New()
/datum/supply_packs/armor
/datum/supply_packs/artscrafts
/datum/supply_packs/autodrobe
/datum/supply_packs/ballistic
/datum/supply_packs/beanbagammo
/datum/supply_packs/bee_keeper
/datum/supply_packs/boxes
/datum/supply_packs/circulator
/datum/supply_packs/coolanttank
/datum/supply_packs/costume
/datum/supply_packs/eftpos
/datum/supply_packs/electrical
/datum/supply_packs/engine
/datum/supply_packs/engine/PA
/datum/supply_packs/engine/collector
/datum/supply_packs/engine/field_gen
/datum/supply_packs/engine/sing_gen
/datum/supply_packs/evacuation
/datum/supply_packs/eweapons
/datum/supply_packs/exoticseeds
/datum/supply_packs/exparmor
/datum/supply_packs/expenergy
/datum/supply_packs/farwa
/datum/supply_packs/food
/datum/supply_packs/formal_wear
/datum/supply_packs/fueltank
/datum/supply_packs/glass50
/datum/supply_packs/hydroponics
/datum/supply_packs/inflatable
/datum/supply_packs/internals
/datum/supply_packs/janitor
/datum/supply_packs/key_pinpointer
/datum/supply_packs/key_pinpointer/New()
/datum/supply_packs/lightbulbs
/datum/supply_packs/loyalty
/datum/supply_packs/mafia
/datum/supply_packs/mecha_odysseus
/datum/supply_packs/mecha_ripley
/datum/supply_packs/mechanical
/datum/supply_packs/medical
/datum/supply_packs/metal50
/datum/supply_packs/monkey
/datum/supply_packs/mule
/datum/supply_packs/organic/cat
/datum/supply_packs/organic/chicken
/datum/supply_packs/organic/corgi
/datum/supply_packs/organic/cow
/datum/supply_packs/organic/goat
/datum/supply_packs/party
/datum/supply_packs/plasma
/datum/supply_packs/randomised
/datum/supply_packs/randomised/New()
/datum/supply_packs/randomised/contraband
/datum/supply_packs/randomised/pizza
/datum/supply_packs/riot
/datum/supply_packs/robotics
/datum/supply_packs/rust_assembly_port
/datum/supply_packs/rust_compressor
/datum/supply_packs/rust_core
/datum/supply_packs/rust_injector
/datum/supply_packs/securitybarriers
/datum/supply_packs/seeds
/datum/supply_packs/shield_cap
/datum/supply_packs/shield_gen
/datum/supply_packs/shotgunammo
/datum/supply_packs/skrell
/datum/supply_packs/solar
/datum/supply_packs/specialops
/datum/supply_packs/sterile
/datum/supply_packs/stok
/datum/supply_packs/surgery
/datum/supply_packs/teg
/datum/supply_packs/toner
/datum/supply_packs/vending
/datum/supply_packs/vending/cigarette
/datum/supply_packs/vending/cola
/datum/supply_packs/vending/snack
/datum/supply_packs/virus
/datum/supply_packs/watertank
/datum/supply_packs/weapons
/datum/supply_packs/weedcontrol
/datum/supply_packs/wizard
/datum/surgery_status/
/datum/surgery_step
/datum/surgery_step/appendectomy/
/datum/surgery_step/appendectomy//can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/cut_appendix
/datum/surgery_step/appendectomy/cut_appendix/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/cut_appendix/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/cut_appendix/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/cut_appendix/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/remove_appendix
/datum/surgery_step/appendectomy/remove_appendix/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/remove_appendix/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/remove_appendix/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/appendectomy/remove_appendix/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/begin_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/
/datum/surgery_step/brain//can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/bone_chips
/datum/surgery_step/brain/bone_chips/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/bone_chips/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/bone_chips/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/bone_chips/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/cut_brain
/datum/surgery_step/brain/cut_brain/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/cut_brain/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/cut_brain/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/cut_brain/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/hematoma
/datum/surgery_step/brain/hematoma/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/hematoma/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/hematoma/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/hematoma/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_skull
/datum/surgery_step/brain/saw_skull/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_skull/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_skull/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_skull/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_spine
/datum/surgery_step/brain/saw_spine/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_spine/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_spine/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/brain/saw_spine/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity
/datum/surgery_step/cavity/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/close_space
/datum/surgery_step/cavity/close_space/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/close_space/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/close_space/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/close_space/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/get_cavity(datum/organ/external/affected)
/datum/surgery_step/cavity/get_max_wclass(datum/organ/external/affected)
/datum/surgery_step/cavity/implant_removal
/datum/surgery_step/cavity/implant_removal/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/implant_removal/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/implant_removal/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/make_space
/datum/surgery_step/cavity/make_space/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/make_space/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/make_space/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/make_space/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/place_item
/datum/surgery_step/cavity/place_item/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/place_item/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/place_item/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/cavity/place_item/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye
/datum/surgery_step/eye/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cauterize
/datum/surgery_step/eye/cauterize/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cauterize/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cauterize/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cauterize/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cut_open
/datum/surgery_step/eye/cut_open/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cut_open/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cut_open/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/cut_open/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/lift_eyes
/datum/surgery_step/eye/lift_eyes/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/lift_eyes/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/lift_eyes/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/lift_eyes/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/mend_eyes
/datum/surgery_step/eye/mend_eyes/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/mend_eyes/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/mend_eyes/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/eye/mend_eyes/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face
/datum/surgery_step/face/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/cauterize
/datum/surgery_step/face/cauterize/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/cauterize/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/cauterize/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/cauterize/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/fix_face
/datum/surgery_step/face/fix_face/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/fix_face/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/fix_face/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/fix_face/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/mend_vocal
/datum/surgery_step/face/mend_vocal/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/mend_vocal/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/mend_vocal/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/face/mend_vocal/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/finish_bone
/datum/surgery_step/finish_bone/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/finish_bone/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/finish_bone/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/finish_bone/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/fix_vein
/datum/surgery_step/fix_vein/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/fix_vein/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/fix_vein/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/fix_vein/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/
/datum/surgery_step/generic//can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cauterize
/datum/surgery_step/generic/cauterize/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cauterize/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cauterize/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cauterize/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/clamp_bleeders
/datum/surgery_step/generic/clamp_bleeders/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/clamp_bleeders/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/clamp_bleeders/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/clamp_bleeders/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_face
/datum/surgery_step/generic/cut_face/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_face/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_face/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_face/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_limb
/datum/surgery_step/generic/cut_limb/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_limb/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_limb/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_limb/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_open
/datum/surgery_step/generic/cut_open/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_open/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_open/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/cut_open/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/retract_skin
/datum/surgery_step/generic/retract_skin/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/retract_skin/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/retract_skin/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/generic/retract_skin/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/glue_bone
/datum/surgery_step/glue_bone/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/glue_bone/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/glue_bone/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/glue_bone/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/
/datum/surgery_step/head//can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/attach
/datum/surgery_step/head/attach/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/attach/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/attach/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/attach/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/peel
/datum/surgery_step/head/peel/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/peel/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/peel/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/peel/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/prepare
/datum/surgery_step/head/prepare/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/prepare/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/prepare/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/prepare/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/shape
/datum/surgery_step/head/shape/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/shape/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/shape/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/shape/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/suture
/datum/surgery_step/head/suture/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/suture/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/suture/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/head/suture/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/is_valid_mutantrace(mob/living/carbon/human/target)
/datum/surgery_step/limb/
/datum/surgery_step/limb//can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/attach
/datum/surgery_step/limb/attach/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/attach/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/attach/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/attach/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/cut
/datum/surgery_step/limb/cut/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/cut/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/cut/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/cut/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/mend
/datum/surgery_step/limb/mend/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/mend/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/mend/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/mend/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/prepare
/datum/surgery_step/limb/prepare/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/prepare/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/prepare/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/limb/prepare/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/mend_skull
/datum/surgery_step/mend_skull/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/mend_skull/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/mend_skull/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/mend_skull/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage
/datum/surgery_step/ribcage/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/close_ribcage
/datum/surgery_step/ribcage/close_ribcage/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/close_ribcage/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/close_ribcage/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/close_ribcage/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal
/datum/surgery_step/ribcage/fix_chest_internal/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal_robot
/datum/surgery_step/ribcage/fix_chest_internal_robot/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal_robot/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal_robot/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/fix_chest_internal_robot/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/heart/cut
/datum/surgery_step/ribcage/heart/cut/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/mend_ribcage
/datum/surgery_step/ribcage/mend_ribcage/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/mend_ribcage/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/mend_ribcage/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/remove_embryo
/datum/surgery_step/ribcage/remove_embryo/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/remove_embryo/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/remove_embryo/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/retract_ribcage
/datum/surgery_step/ribcage/retract_ribcage/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/retract_ribcage/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/retract_ribcage/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/retract_ribcage/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/saw_ribcage
/datum/surgery_step/ribcage/saw_ribcage/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/saw_ribcage/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/saw_ribcage/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/ribcage/saw_ribcage/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/set_bone
/datum/surgery_step/set_bone/begin_step(mob/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/set_bone/can_use(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/set_bone/end_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/set_bone/fail_step(mob/living/user, mob/living/carbon/human/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/
/datum/surgery_step/slime//can_use(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_flesh
/datum/surgery_step/slime/cut_flesh/begin_step(mob/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_flesh/can_use(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_flesh/end_step(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_flesh/fail_step(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_innards
/datum/surgery_step/slime/cut_innards/begin_step(mob/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_innards/can_use(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_innards/end_step(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/cut_innards/fail_step(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/saw_core
/datum/surgery_step/slime/saw_core/begin_step(mob/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/saw_core/can_use(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/saw_core/end_step(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/slime/saw_core/fail_step(mob/living/user, mob/living/carbon/slime/target, target_zone, obj/item/tool)
/datum/surgery_step/tool_quality(obj/item/tool)
/datum/symptom
/datum/symptom/Activate(var/datum/disease/advance/A)
/datum/symptom/End(var/datum/disease/advance/A)
/datum/symptom/New()
/datum/symptom/Start(var/datum/disease/advance/A)
/datum/symptom/beard
/datum/symptom/beard/Activate(var/datum/disease/advance/A)
/datum/symptom/choking
/datum/symptom/choking/Activate(var/datum/disease/advance/A)
/datum/symptom/confusion
/datum/symptom/confusion/Activate(var/datum/disease/advance/A)
/datum/symptom/cough
/datum/symptom/cough/Activate(var/datum/disease/advance/A)
/datum/symptom/damage_converter
/datum/symptom/damage_converter/Activate(var/datum/disease/advance/A)
/datum/symptom/damage_converter/Convert(var/mob/living/M)
/datum/symptom/deafness
/datum/symptom/deafness/Activate(var/datum/disease/advance/A)
/datum/symptom/dizzy
/datum/symptom/dizzy/Activate(var/datum/disease/advance/A)
/datum/symptom/fever
/datum/symptom/fever/Activate(var/datum/disease/advance/A)
/datum/symptom/flesh_eating
/datum/symptom/flesh_eating/Activate(var/datum/disease/advance/A)
/datum/symptom/hallucigen
/datum/symptom/hallucigen/Activate(var/datum/disease/advance/A)
/datum/symptom/headache
/datum/symptom/headache/Activate(var/datum/disease/advance/A)
/datum/symptom/heal
/datum/symptom/heal/Activate(var/datum/disease/advance/A)
/datum/symptom/heal/Heal(var/mob/living/M)
/datum/symptom/itching
/datum/symptom/itching/Activate(var/datum/disease/advance/A)
/datum/symptom/oxygen
/datum/symptom/oxygen/Activate(var/datum/disease/advance/A)
/datum/symptom/poop
/datum/symptom/poop/Activate(var/datum/disease/advance/A)
/datum/symptom/poop/Poop(var/mob/living/M)
/datum/symptom/shedding
/datum/symptom/shedding/Activate(var/datum/disease/advance/A)
/datum/symptom/shivering
/datum/symptom/shivering/Activate(var/datum/disease/advance/A)
/datum/symptom/sneeze
/datum/symptom/sneeze/Activate(var/datum/disease/advance/A)
/datum/symptom/stimulant
/datum/symptom/stimulant/Activate(var/datum/disease/advance/A)
/datum/symptom/vitiligo
/datum/symptom/vitiligo/Activate(var/datum/disease/advance/A)
/datum/symptom/voice_change
/datum/symptom/voice_change/Activate(var/datum/disease/advance/A)
/datum/symptom/voice_change/End(var/datum/disease/advance/A)
/datum/symptom/vomit
/datum/symptom/vomit/Activate(var/datum/disease/advance/A)
/datum/symptom/vomit/Vomit(var/mob/living/M)
/datum/symptom/vomit/blood
/datum/symptom/vomit/blood/Vomit(var/mob/living/M)
/datum/symptom/weight_even
/datum/symptom/weight_gain
/datum/symptom/weight_gain/Activate(var/datum/disease/advance/A)
/datum/symptom/weight_loss
/datum/symptom/weight_loss/Activate(var/datum/disease/advance/A)
/datum/symptom/youth
/datum/symptom/youth/Activate(var/datum/disease/advance/A)
/datum/tech
/datum/tech/biotech
/datum/tech/bluespace
/datum/tech/combat
/datum/tech/engineering
/datum/tech/magnets
/datum/tech/materials
/datum/tech/plasmatech
/datum/tech/powerstorage
/datum/tech/programming
/datum/tech/syndicate
/datum/teleport
/datum/teleport/Init(ateleatom,adestination,aprecision,afteleport,aeffectin,aeffectout,asoundin,asoundout)
/datum/teleport/New(ateleatom, adestination, aprecision=0, afteleport=1, aeffectin=null, aeffectout=null, asoundin=null, asoundout=null)
/datum/teleport/doTeleport()
/datum/teleport/instant
/datum/teleport/instant/New(ateleatom, adestination, aprecision=0, afteleport=1, aeffectin=null, aeffectout=null, asoundin=null, asoundout=null)
/datum/teleport/instant/science
/datum/teleport/instant/science/setEffects(datum/effect/effect/system/aeffectin,datum/effect/effect/system/aeffectout)
/datum/teleport/instant/science/setPrecision(aprecision)
/datum/teleport/instant/science/teleportChecks()
/datum/teleport/playSpecials(atom/location,datum/effect/effect/system/effect,sound)
/datum/teleport/setDestination(atom/adestination)
/datum/teleport/setEffects(datum/effect/effect/system/aeffectin=null,datum/effect/effect/system/aeffectout=null)
/datum/teleport/setForceTeleport(afteleport)
/datum/teleport/setPrecision(aprecision)
/datum/teleport/setSounds(asoundin=null,asoundout=null)
/datum/teleport/setTeleatom(atom/movable/ateleatom)
/datum/teleport/teleport()
/datum/teleport/teleportChecks()
/datum/theft_objective
/datum/theft_objective/ai
/datum/theft_objective/antique_laser_gun
/datum/theft_objective/blueprints
/datum/theft_objective/cap_jumpsuit
/datum/theft_objective/ce_jumpsuit
/datum/theft_objective/check_completion(var/datum/mind/owner)
/datum/theft_objective/cmo_jumpsuit
/datum/theft_objective/corgi
/datum/theft_objective/hand_tele
/datum/theft_objective/hop_jumpsuit
/datum/theft_objective/hos_jumpsuit
/datum/theft_objective/hypospray
/datum/theft_objective/jetpack
/datum/theft_objective/magboots
/datum/theft_objective/number
/datum/theft_objective/number/New()
/datum/theft_objective/number/check_completion(var/datum/mind/owner)
/datum/theft_objective/number/coins
/datum/theft_objective/number/coins/check_completion(var/datum/mind/owner)
/datum/theft_objective/number/getAmountStolen(var/obj/item/I)
/datum/theft_objective/number/plasma_gas
/datum/theft_objective/number/plasma_gas/getAmountStolen(var/obj/item/I)
/datum/theft_objective/number/special
/datum/theft_objective/number/special/diamonds
/datum/theft_objective/number/special/gold
/datum/theft_objective/number/special/uranium
/datum/theft_objective/rcd
/datum/theft_objective/rd_jumpsuit
/datum/theft_objective/slime_extract
/datum/theft_objective/special
/datum/theft_objective/special/boh
/datum/theft_objective/special/diamond_drill
/datum/theft_objective/special/hyper_cell
/datum/theft_objective/special/nuke_gun
/datum/theft_objective/voidsuit
/datum/topic_input
/datum/topic_input/New(thref,list/thref_list)
/datum/topic_input/get(i)
/datum/topic_input/getAndLocate(i)
/datum/topic_input/getArea(i)
/datum/topic_input/getAtom(i)
/datum/topic_input/getList(i)
/datum/topic_input/getMob(i)
/datum/topic_input/getNum(i)
/datum/topic_input/getObj(i)
/datum/topic_input/getPath(i)
/datum/topic_input/getStr(i)
/datum/topic_input/getTurf(i)
/datum/topic_input/getType(i,type)
/datum/trackable
/datum/trade_destination
/datum/trade_destination/anansi
/datum/trade_destination/anansi/get_custom_eventstring(var/event_type)
/datum/trade_destination/beltway
/datum/trade_destination/biesel
/datum/trade_destination/centcomm
/datum/trade_destination/get_custom_eventstring(var/event_type)
/datum/trade_destination/icarus
/datum/trade_destination/luthien
/datum/trade_destination/new_gibson
/datum/trade_destination/reade
/datum/trade_destination/redolant
/datum/trade_destination/redolant/get_custom_eventstring(var/event_type)
/datum/transaction
/datum/uplink_item
/datum/uplink_item/ammo/machinegun
/datum/uplink_item/ammo/smg
/datum/uplink_item/badass
/datum/uplink_item/badass/balloon
/datum/uplink_item/badass/bundle
/datum/uplink_item/badass/random
/datum/uplink_item/badass/random/spawn_item(var/turf/loc, var/obj/item/device/uplink/U)
/datum/uplink_item/badass/syndiecards
/datum/uplink_item/buy(var/obj/item/device/uplink/hidden/U, var/mob/user)
/datum/uplink_item/dangerous
/datum/uplink_item/dangerous/ammo
/datum/uplink_item/dangerous/crossbow
/datum/uplink_item/dangerous/emp
/datum/uplink_item/dangerous/machinegun
/datum/uplink_item/dangerous/manhacks
/datum/uplink_item/dangerous/revolver
/datum/uplink_item/dangerous/smg
/datum/uplink_item/dangerous/sword
/datum/uplink_item/device_tools
/datum/uplink_item/device_tools/binary
/datum/uplink_item/device_tools/camerabugs
/datum/uplink_item/device_tools/cipherkey
/datum/uplink_item/device_tools/emag
/datum/uplink_item/device_tools/hacked_module
/datum/uplink_item/device_tools/medkit
/datum/uplink_item/device_tools/plastic_explosives
/datum/uplink_item/device_tools/powersink
/datum/uplink_item/device_tools/singularity_beacon
/datum/uplink_item/device_tools/space_suit
/datum/uplink_item/device_tools/surveillance
/datum/uplink_item/device_tools/teleporter
/datum/uplink_item/device_tools/thermal
/datum/uplink_item/device_tools/toolbox
/datum/uplink_item/implants
/datum/uplink_item/implants/compression
/datum/uplink_item/implants/explosive
/datum/uplink_item/implants/freedom
/datum/uplink_item/implants/uplink
/datum/uplink_item/jobspecific
/datum/uplink_item/jobspecific/cautionsign
/datum/uplink_item/jobspecific/clowngrenade
/datum/uplink_item/jobspecific/conversionkit
/datum/uplink_item/jobspecific/drunkbullets
/datum/uplink_item/jobspecific/evidenceforger
/datum/uplink_item/jobspecific/greytide
/datum/uplink_item/jobspecific/meatcleaver
/datum/uplink_item/jobspecific/pickpocketgloves
/datum/uplink_item/jobspecific/powergloves
/datum/uplink_item/jobspecific/specialsauce
/datum/uplink_item/spawn_item(var/turf/loc, var/obj/item/device/uplink/U)
/datum/uplink_item/stealthy_tools
/datum/uplink_item/stealthy_tools/agent_card
/datum/uplink_item/stealthy_tools/chameleon_jumpsuit
/datum/uplink_item/stealthy_tools/chameleon_proj
/datum/uplink_item/stealthy_tools/syndigolashes
/datum/uplink_item/stealthy_tools/voice_changer
/datum/uplink_item/stealthy_weapons
/datum/uplink_item/stealthy_weapons/detomatix
/datum/uplink_item/stealthy_weapons/para_pen
/datum/uplink_item/stealthy_weapons/silencer
/datum/uplink_item/stealthy_weapons/soap
/datum/vampire
/datum/vampire/New(gend = FEMALE)
/datum/visibility_chunk
/datum/visibility_chunk/New(loc, x, y, z)
/datum/visibility_chunk/add(mob/new_mob)
/datum/visibility_chunk/camera
/datum/visibility_chunk/camera/findNearbyViewpoints()
/datum/visibility_chunk/camera/getVisibleTurfsForViewpoint(var/viewpoint)
/datum/visibility_chunk/camera/validViewpoint(var/viewpoint)
/datum/visibility_chunk/cult/findNearbyViewpoints()
/datum/visibility_chunk/cult/getVisibleTurfsForViewpoint(var/viewpoint)
/datum/visibility_chunk/cult/validViewpoint(var/atom/viewpoint)
/datum/visibility_chunk/findNearbyViewpoints()
/datum/visibility_chunk/getVisibleTurfs()
/datum/visibility_chunk/getVisibleTurfsForViewpoint(var/viewpoint)
/datum/visibility_chunk/hasChanged(var/update_now = 0)
/datum/visibility_chunk/remove(mob/new_mob)
/datum/visibility_chunk/setObscuredImage(var/turf/target_turf)
/datum/visibility_chunk/update()
/datum/visibility_chunk/validViewpoint(var/viewpoint)
/datum/visibility_chunk/visibilityChanged(turf/loc)
/datum/visibility_interface
/datum/visibility_interface/New(var/mob/controller)
/datum/visibility_interface/addChunk(var/datum/visibility_chunk/test_chunk)
/datum/visibility_interface/addObscuredTurf(var/turf/target_turf)
/datum/visibility_interface/ai_eye
/datum/visibility_interface/ai_eye/getClient()
/datum/visibility_interface/canBeAddedToChunk(var/datum/visibility_chunk/test_chunk)
/datum/visibility_interface/cult
/datum/visibility_interface/getClient()
/datum/visibility_interface/removeChunk(var/datum/visibility_chunk/test_chunk)
/datum/visibility_interface/removeObscuredTurf(var/turf/target_turf)
/datum/visibility_interface/validMob()
/datum/visibility_network
/datum/visibility_network/addViewpoint(var/viewpoint)
/datum/visibility_network/cameras
/datum/visibility_network/cameras/addCamera(var/camera)
/datum/visibility_network/cameras/checkCameraVis(var/atom/target)
/datum/visibility_network/cameras/getViewpointFromMob(var/mob/currentMob)
/datum/visibility_network/cameras/removeCamera(var/camera)
/datum/visibility_network/cameras/validViewpoint(var/viewpoint)
/datum/visibility_network/checkCanSee(var/atom/target)
/datum/visibility_network/chunkGenerated(x, y, z)
/datum/visibility_network/createChunkKey(x,y,z)
/datum/visibility_network/cult
/datum/visibility_network/cult/getViewpointFromMob(var/mob/currentMob)
/datum/visibility_network/cult/validViewpoint(var/viewpoint)
/datum/visibility_network/getChunk(x, y, z)
/datum/visibility_network/getViewpointFromMob(var/mob/currentMob)
/datum/visibility_network/majorChunkChange(atom/c, var/choice)
/datum/visibility_network/removeViewpoint(var/viewpoint)
/datum/visibility_network/updateChunk(x, y, z)
/datum/visibility_network/updateMob(var/mob/currentMob)
/datum/visibility_network/updateViewpoint(var/viewpoint)
/datum/visibility_network/updateVisibility(atom/A, var/opacity_check = 1)
/datum/visibility_network/validViewpoint(var/viewpoint)
/datum/visibility_network/visibility(var/mob/targetMob)
/datum/wires
/datum/wires/Attach(var/colour, var/obj/item/device/assembly/signaler/S)
/datum/wires/CanUse(var/mob/living/L)
/datum/wires/CutAll()
/datum/wires/CutWireColour(var/colour)
/datum/wires/CutWireIndex(var/index)
/datum/wires/Detach(var/colour)
/datum/wires/GenerateWires()
/datum/wires/GetAttached(var/colour)
/datum/wires/GetIndex(var/colour)
/datum/wires/GetInteractWindow()
/datum/wires/Interact(var/mob/living/user)
/datum/wires/IsAllCut()
/datum/wires/IsAttached(var/colour)
/datum/wires/IsColourCut(var/colour)
/datum/wires/IsIndexCut(var/index)
/datum/wires/New(var/atom/holder)
/datum/wires/Pulse(var/obj/item/device/assembly/signaler/S)
/datum/wires/PulseColour(var/colour)
/datum/wires/PulseIndex(var/index)
/datum/wires/RandomCut()
/datum/wires/Topic(href, href_list)
/datum/wires/UpdateCut(var/index, var/mended)
/datum/wires/UpdatePulsed(var/index)
/datum/wires/airlock
/datum/wires/airlock/CanUse(var/mob/living/L)
/datum/wires/airlock/GetInteractWindow()
/datum/wires/airlock/UpdateCut(var/index, var/mended)
/datum/wires/airlock/UpdatePulsed(var/index)
/datum/wires/airlock/secure
/datum/wires/alarm
/datum/wires/alarm/CanUse(var/mob/living/L)
/datum/wires/alarm/GetInteractWindow()
/datum/wires/alarm/UpdateCut(var/index, var/mended)
/datum/wires/alarm/UpdatePulsed(var/index)
/datum/wires/apc
/datum/wires/apc/CanUse(var/mob/living/L)
/datum/wires/apc/GetInteractWindow()
/datum/wires/apc/UpdateCut(var/index, var/mended)
/datum/wires/apc/UpdatePulsed(var/index)
/datum/wires/camera
/datum/wires/camera/CanDeconstruct()
/datum/wires/camera/CanUse(var/mob/living/L)
/datum/wires/camera/GetInteractWindow()
/datum/wires/camera/UpdateCut(var/index, var/mended)
/datum/wires/camera/UpdatePulsed(var/index)
/datum/wires/explosive
/datum/wires/explosive/UpdateCut(var/index, var/mended)
/datum/wires/explosive/UpdatePulsed(var/index)
/datum/wires/explosive/explode()
/datum/wires/explosive/plastic
/datum/wires/explosive/plastic/CanUse(var/mob/living/L)
/datum/wires/explosive/plastic/explode()
/datum/wires/mulebot
/datum/wires/mulebot/BeaconRX()
/datum/wires/mulebot/CanUse(var/mob/living/L)
/datum/wires/mulebot/HasPower()
/datum/wires/mulebot/Interact(var/mob/living/user)
/datum/wires/mulebot/LoadCheck()
/datum/wires/mulebot/MobAvoid()
/datum/wires/mulebot/Motor1()
/datum/wires/mulebot/Motor2()
/datum/wires/mulebot/RemoteRX()
/datum/wires/mulebot/RemoteTX()
/datum/wires/mulebot/UpdatePulsed(var/index)
/datum/wires/particle_acc/control_box
/datum/wires/particle_acc/control_box/CanUse(var/mob/living/L)
/datum/wires/particle_acc/control_box/UpdateCut(var/index, var/mended)
/datum/wires/particle_acc/control_box/UpdatePulsed(var/index)
/datum/wires/radio
/datum/wires/radio/CanUse(var/mob/living/L)
/datum/wires/radio/Interact(var/mob/living/user)
/datum/wires/radio/UpdatePulsed(var/index)
/datum/wires/robot
/datum/wires/robot/AIHasControl()
/datum/wires/robot/CanLawCheck()
/datum/wires/robot/CanUse(var/mob/living/L)
/datum/wires/robot/GetInteractWindow()
/datum/wires/robot/IsCameraCut()
/datum/wires/robot/LockedCut()
/datum/wires/robot/UpdateCut(var/index, var/mended)
/datum/wires/robot/UpdatePulsed(var/index)
/datum/wires/vending
/datum/wires/vending/CanUse(var/mob/living/L)
/datum/wires/vending/GetInteractWindow()
/datum/wires/vending/Interact(var/mob/living/user)
/datum/wires/vending/UpdateCut(var/index, var/mended)
/datum/wires/vending/UpdatePulsed(var/index)
/datum/wound
/datum/wound/New(var/damage)
/datum/wound/bleeding()
/datum/wound/bruise
/datum/wound/bruise/huge
/datum/wound/bruise/large
/datum/wound/bruise/moderate
/datum/wound/bruise/monumental
/datum/wound/bruise/small
/datum/wound/bruise/tiny
/datum/wound/burn/carbonised
/datum/wound/burn/deep
/datum/wound/burn/large
/datum/wound/burn/moderate
/datum/wound/burn/severe
/datum/wound/can_infect()
/datum/wound/cut/deep
/datum/wound/cut/flesh
/datum/wound/cut/gaping
/datum/wound/cut/gaping_big
/datum/wound/cut/massive
/datum/wound/cut/small
/datum/wound/heal_damage(amount, heals_internal = 0)
/datum/wound/internal_bleeding
/datum/wound/is_treated()
/datum/wound/next_stage()
/datum/wound/open_wound(damage)
/datum/wound/started_healing()
/dd_centertext(message, length)
/dd_hasprefix(text, prefix)
/dd_hasprefix_case(text, prefix)
/dd_hassuffix(text, suffix)
/dd_hassuffix_case(text, suffix)
/dd_limittext(message, length)
/dd_range(var/low, var/high, var/num)
/delay(var/time)
/difflist(var/list/first, var/list/second, var/skiprep=0)
/dir2angle(var/D)
/dir2text(direction)
/dispense_cash(var/amount, var/loc)
/display_roundstart_logout_report()
/dmm_suite
/dmm_suite/check_attributes(var/atom/A)
/dmm_suite/get_list(var/text, var/list/text_strings)
/dmm_suite/get_model_key(var/which as num, var/key_length as num)
/dmm_suite/load_map(var/dmm_file as file, var/z_offset as num, var/y_offset as num, var/x_offset as num, var/load_speed = 0 as num)
/dmm_suite/make_template(var/turf/model as turf, var/flags as num)
/dmm_suite/parse_grid(var/model as text, var/x_coordinate as num, var/y_coordinate as num, var/z_coordinate as num)
/dmm_suite/proc/parse_grid(var/model as text, var/x_coordinate as num, var/y_coordinate as num, var/z_coordinate as num)
/dmm_suite/save_map(var/turf/t1 as turf, var/turf/t2 as turf, var/map_name as text, var/flags as num)
/dmm_suite/trim_text(var/what as text)
/dmm_suite/var
/dmm_suite/verb/load_map(var/dmm_file as file, var/z_offset as num, var/load_speed as num)
/dmm_suite/verb/save_map(var/turf/t1 as turf, var/turf/t2 as turf, var/map_name as text, var/flags as num)
/dmm_suite/verb/write_map(var/turf/t1 as turf, var/turf/t2 as turf, var/flags as num)
/dmm_suite/write_map(var/turf/t1 as turf, var/turf/t2 as turf, var/flags as num)
/do_after(var/mob/user as mob, delay as num, var/numticks = 5, var/needhand = 1)
/do_mob(var/mob/user , var/mob/target, var/time = 30)
/do_surgery(mob/living/M, mob/living/user, obj/item/tool)
/do_teleport(ateleatom, adestination, aprecision=0, afteleport=1, aeffectin=null, aeffectout=null, asoundin=null, asoundout=null)
/docopytext(var/string, var/start = 1, var/end = 0)
/domutcheck(var/mob/living/M, var/connected=null, var/flags=0)
/dopage(src,target)
/dprob(var/p)
/electrocute_mob(mob/living/carbon/M as mob, var/power_source, var/obj/source, var/siemens_coeff = 1.0)
/empulse(turf/epicenter, heavy_range, light_range, log=0)
/enable_prison_shuttle(var/mob/user)
/english_list(var/list/input, nothing_text = "nothing", and_text = " and ", comma_text = ", ", final_comma_text = "" )
/equalize_gases(datum/gas_mixture/list/gases)
/error(msg)
/establish_db_connection()
/establish_old_db_connection()
/explosion(turf/epicenter, devastation_range, heavy_impact_range, light_impact_range, adminlog = 1)
/explosion_rec(turf/epicenter, power)
/ext_python(var/script, var/args, var/scriptsprefix = 1)
/fake_attack(var/mob/living/target)
/fake_blood(var/mob/target)
/feedback_add_details(var/variable,var/details)
/feedback_dec(var/variable,var/value)
/feedback_inc(var/variable,var/value)
/feedback_set(var/variable,var/value)
/feedback_set_details(var/variable,var/details)
/file2list(filename, seperator="\n")
/find_dead_player(var/find_key)
/find_loc(obj/R as obj)
/findname(msg)
/flick_overlay(image/I, list/show_to, duration)
/flicker_mask(mob/spirit/mask/target)
/formatJumpTo(var/location,var/where="")
/formatLocation(var/location)
/formatPlayerPanel(var/mob/U,var/text="PP")
/format_frequency(var/f)
/format_text(text)
/freeborg()
/gaussian(mean, stddev)
/generate_code_phrase()
/generate_ninja_directive(side)
/get(atom/loc, type)
/getAssignedBlock(var/name,var/list/blocksLeft, var/activity_bounds=list(1,2049,2050,4095), var/good=0)
/getCultViewpoint(var/mob/currentMob)
/getFlatIcon(atom/A, dir)
/getFromPool(const/A, const/B)
/getHologramIcon(icon/A, safety=1)
/getIconMask(atom/A)
/getOPressureDifferential(var/turf/loc)
/get_access_desc(A)
/get_active_candidates(var/buffer = 1)
/get_active_player_count()
/get_alien_candidates()
/get_all_accesses()
/get_all_centcom_access()
/get_all_centcom_jobs()
/get_all_job_icons()
/get_all_jobs()
/get_all_syndicate_access()
/get_alternate_titles(var/job)
/get_angle(atom/a, atom/b)
/get_area(O)
/get_area_all_atoms(var/areatype)
/get_area_master(O)
/get_area_name(N)
/get_area_turfs(var/areatype)
/get_areas(var/areatype)
/get_atom_on_turf(var/atom/movable/M)
/get_both_hands(mob/living/carbon/M)
/get_candidates(be_special_flag=0)
/get_cardinal_dir(atom/A, atom/B)
/get_cardinal_step_away(atom/start, atom/finish)
/get_centcom_access(job)
/get_centcom_access_desc(A)
/get_damage_icon_part(damage_state, body_part)
/get_directive(type)
/get_dist_euclidian(atom/Loc1 as turf|mob|obj,atom/Loc2 as turf|mob|obj)
/get_edge_target_turf(var/atom/A, var/direction)
/get_fusion_reaction(var/primary_reactant, var/secondary_reactant)
/get_icecream_flavour_string(var/flavour_type)
/get_id_photo(var/mob/living/carbon/human/H)
/get_infectable_species()
/get_infection_chance(var/mob/living/carbon/M, var/vector = "Airborne")
/get_job_datums()
/get_key_by_index(var/list/L, var/index)
/get_location_accessible(mob/M, location)
/get_mob_by_key(var/key)
/get_mob_with_client_list()
/get_mobs_in_radio_ranges(var/list/obj/item/device/radio/radios)
/get_mobs_in_view(var/R, var/atom/source)
/get_money_account(var/account_number, var/from_z=-1)
/get_multitool(mob/user as mob)
/get_mutiny_mode()
/get_nations_mode()
/get_nt_opposed()
/get_offset_target_turf(var/atom/A, var/dx, var/dy)
/get_rand_frequency()
/get_random_digsite_type()
/get_random_find_type(var/digsite)
/get_ranged_target_turf(var/atom/A, var/direction, var/range)
/get_region_accesses(var/code)
/get_region_accesses_name(var/code)
/get_responsive_reagent(var/find_type)
/get_security_level()
/get_sfx(soundin)
/get_slime_candidates()
/get_sorted_mobs()
/get_step_towards2(var/atom/ref , var/atom/trg)
/get_teleport_loc(turf/location,mob/target,distance = 1, density = 0, errorx = 0, errory = 0, eoffsetx = 0, eoffsety = 0)
/get_turf(const/atom/O)
/get_turf_loc(var/atom/movable/M)
/get_turf_or_move(turf/location)
/get_uplink_items(var/job = null)
/get_uristrune(symbol_bits, animated = 0)
/get_uristrune_cult(word1, word2, word3)
/get_zone_with_miss_chance(zone, var/mob/target, var/miss_chance_mod = 0)
/getb(col)
/getbrokeninhands()
/getg(col)
/getline(atom/M,atom/N)
/getmobs()
/getr(col)
/gibs(atom/location, var/list/viruses, var/datum/dna/MobDNA)
/givetestverbs(mob/M as mob in mob_list)
/gotwallitem(loc, dir)
/guest_jobbans(var/job)
/hasHUD(mob/M as mob, hudtype)
/hasorgans(A)
/hasvar(var/datum/A, var/varname)
/hear(var/range, var/atom/source)
/hex2num(hex)
/hgibs(atom/location, var/list/viruses, var/datum/dna/MobDNA)
/high_radiation_event()
/hook
/hook/Called(var/list/args)
/hook/Setup()
/hook/borgify
/hook/borgify/borgify_directive(mob/living/silicon/robot/cyborg)
/hook/change_account_status
/hook/change_account_status/suspension_directive(datum/money_account/account)
/hook/clone
/hook/clone/update_icon(mob/living/carbon/human/H)
/hook/death
/hook/death/infected_killed(mob/living/carbon/human/deceased, gibbed)
/hook/death/track_kills(mob/living/carbon/human/deceased, gibbed)
/hook/debrain
/hook/debrain/debrain_directive(obj/item/brain/B)
/hook/harvest_podman
/hook/harvest_podman/update_icon(mob/living/carbon/monkey/diona/D)
/hook/latespawn
/hook/latespawn/give_latejoiners_nations(var/mob/living/carbon/human/H)
/hook/login
/hook/mobAreaChange
/hook/reassign_employee
/hook/reassign_employee/command_reassignments(obj/item/weapon/card/id/id_card)
/hook/reassign_employee/research_reassignments(obj/item/weapon/card/id/id_card)
/hook/revoke_payroll
/hook/revoke_payroll/payroll_directive(datum/money_account/account)
/hook/roundend
/hook/roundend/report_mutiny_news()
/hook/roundstart
/hook/sell_crate
/hook/sell_crate/deliver_materials(obj/structure/closet/crate/sold, area/shuttle)
/hook/startup
/hook/startup/buildPowernets()
/hook/startup/connectDB()
/hook/startup/connectOldDB()
/hook/startup/createDatacore()
/hook/startup/createGasOverlays()
/hook/startup/createRadioController()
/hook/startup/createSun()
/hook/startup/ircNotify()
/hook/startup/loadAdmins()
/hook/startup/loadAlienWhitelist()
/hook/startup/loadBans()
/hook/startup/loadJobBans()
/hook/startup/loadMOTD()
/hook/startup/loadMode()
/hook/startup/loadMods()
/hook/startup/loadWhitelist()
/hook/startup/makeDatumRefLists()
/hook/startup/paiControllerSetup()
/hook/startup/proc/createGasOverlays()
/hook/startup/proc/setupTeleportLocs()
/hook/startup/resetInvestigate()
/hook/startup/setupCraftingMaster()
/hook/startup/setupGhostTeleportLocs()
/hook/startup/setupTeleportLocs()
/hook/startup/updateHoliday()
/hook/terminate_employee
/hook/terminate_employee/gender_target_termination_directive(obj/item/weapon/card/id)
/hook/terminate_employee/ipc_termination(obj/item/weapon/card/id)
/hook/terminate_employee/termination_directive(obj/item/weapon/card/id)
/hook_handler
/hook_handler/soundmanager
/hook_handler/soundmanager/OnLogin(var/list/args)
/hook_handler/soundmanager/OnMobAreaChange(var/list/args)
/hsl2rgb(h, s, l)
/hsv(hue, sat, val, alpha)
/icon
/icon/AddAlphaMask(mask)
/icon/BecomeAlphaMask()
/icon/BecomeLying()
/icon/Blend(icon,f,x=1,y=1)
/icon/ChangeOpacity(opacity = 1.0)
/icon/ColorTone(tone)
/icon/Crop(x1,y1,x2,y2)
/icon/DrawBox(c,x1,y1,x2,y2)
/icon/Flip(dir)
/icon/GetPixel(x,y,icon_state,dir,frame,moving)
/icon/GrayScale()
/icon/Height()
/icon/Icon()
/icon/IconStates(mode=0)
/icon/Insert(new_icon,icon_state,dir,frame,moving,delay)
/icon/MakeLying()
/icon/MapColors(a,b,c,d,e,f,g,h,i,j=0,k=0,l=0)
/icon/MaxColors(icon)
/icon/MinColors(icon)
/icon/New(icon,icon_state,dir,frame,moving)
/icon/Opaque(background = "#000000")
/icon/RscFile()
/icon/Scale(x,y)
/icon/SetIntensity(r,g=-1,b=-1)
/icon/Shift(dir,offset,wrap)
/icon/SwapColor(o,n)
/icon/Turn(angle,antialias)
/icon/UseAlphaMask(mask)
/icon/Width()
/icon/proc/Height()
/immovablerod()
/inLineOfSight(X1,Y1,X2,Y2,Z=1,PX1=16.5,PY1=16.5,PX2=16.5,PY2=16.5)
/in_range(source, user)
/increment_ert_chance()
/infect_mob_random_greater(var/mob/living/carbon/M)
/infect_mob_random_lesser(var/mob/living/carbon/M)
/infect_virus2(var/mob/living/carbon/M,var/datum/disease2/disease/disease,var/forced = 0)
/init_jungle_plants()
/init_shift_change(var/mob/user, var/force = 0)
/init_subtypes(prototype, list/L)
/insertion_sort_numeric_list_ascending(var/list/L)
/insertion_sort_numeric_list_descending(var/list/L)
/intent_numeric(argument)
/invertHTML(HTMLstring)
/investigate_reset()
/investigate_subject2file(var/subject)
/ionnum()
/isAI(A)
/isAIEye(A)
/isCultRune(var/viewpoint)
/isCultViewpoint(var/viewpoint)
/isDay(var/month, var/day)
/isInSight(var/atom/A, var/atom/B)
/isSpirit(A)
/is_alien_whitelisted(mob/M, var/species)
/is_blocked_turf(var/turf/T)
/is_convertable_to_cult(datum/mind/mind)
/is_convertable_to_rev(datum/mind/mind)
/is_hot(obj/item/W as obj)
/is_job_whitelisted(mob/M, var/rank)
/is_sharp(obj/item/W as obj)
/is_special_character(mob/M as mob)
/is_surgery_tool(obj/item/W as obj)
/is_type_in_list(var/atom/A, var/list/L)
/isalien(A)
/isalienadult(A)
/isanimal(A)
/isassembly(O)
/isbear(A)
/isbrain(A)
/iscarbon(A)
/iscarp(A)
/iscat(A)
/isclown(A)
/iscoil(O)
/iscorgi(A)
/iscrab(A)
/iscrowbar(O)
/iscultist(mob/living/M as mob)
/isembryo(A)
/isemptylist(list/list)
/isfacehugger(A)
/ishuman(A)
/isigniter(O)
/isinfared(O)
/islarva(A)
/islinked(var/mob/living/silicon/robot/bot, var/mob/living/silicon/ai/ai)
/islist(list/list)
/isliving(A)
/ismask(A)
/ismonkey(A)
/ismouse(A)
/ismultitool(O)
/isobject(x)
/isobserver(A)
/isorgan(A)
/isovermind(A)
/ispAI(A)
/isprox(O)
/isrobot(A)
/isscrewdriver(O)
/issignaler(O)
/issilicon(A)
/isslime(A)
/isslimeadult(A)
/issyndicate(mob/living/M as mob)
/istimer(O)
/istool(O)
/iswelder(O)
/iswire(O)
/iswirecutter(O)
/iswrench(O)
/jobban_client_fullban(ckey, rank)
/jobban_fullban(mob/M, rank, reason)
/jobban_isbanned(mob/M, rank)
/jobban_loadbanfile()
/jobban_remove(X)
/jobban_savebanfile()
/jobban_unban(mob/M, rank)
/json2list(json)
/json_reader
/json_reader/ReadObject(list/tokens)
/json_reader/ScanJson(json)
/json_reader/check_char()
/json_reader/check_type(...)
/json_reader/check_value(...)
/json_reader/die(json_token/T)
/json_reader/get_char()
/json_reader/get_token()
/json_reader/is_digit(char)
/json_reader/is_whitespace(char)
/json_reader/next_token()
/json_reader/read_array()
/json_reader/read_key()
/json_reader/read_number()
/json_reader/read_string(delim)
/json_reader/read_token(val, type)
/json_reader/read_value()
/json_reader/read_word()
/json_reader/var
/json_reader/var/json
/json_reader/var/list
/json_reader/var/list/tokens
/json_token
/json_token/New(v)
/json_token/eof
/json_token/number
/json_token/symbol
/json_token/text
/json_token/var
/json_token/var/value
/json_token/word
/json_writer
/json_writer/WriteObject(list/L)
/json_writer/is_associative(list/L)
/json_writer/write(val)
/json_writer/write_array(list/L)
/json_writer/write_string(txt)
/key_name(var/whom, var/include_link = null, var/include_name = 1)
/key_name_admin(var/whom, var/include_name = 1)
/layout_rule
/layout_rule/Evaluate()
/layout_rule/GetCandidates()
/layout_rule/New(var/mining_surprise/_root,var/surprise_room/_room)
/layout_rule/Plop(var/turf/T)
/layout_rule/place_adjacent
/layout_rule/place_adjacent/GetCandidates()
/layout_rule/place_adjacent/IsTurfCandidate(var/turf/T,var/list/opt_nt,var/list/opt_nnt)
/lightsout(isEvent = 0, lightsoutAmount = 1,lightsoutRange = 25)
/line_item
/list2json(list/L)
/list2text(list/ls, sep)
/listclearnulls(list/list)
/listgetindex(var/list/list,index)
/load_admin_ranks()
/load_admins()
/load_alienwhitelist()
/load_whitelist()
/log_access(text)
/log_admin(text)
/log_adminsay(text)
/log_adminwarn(text)
/log_attack(text)
/log_debug(text)
/log_emote(text)
/log_game(text)
/log_ooc(text)
/log_pda(text)
/log_say(text)
/log_vote(text)
/log_whisper(text)
/makeBody(var/mob/dead/observer/G_found)
/make_maint_all_access()
/make_mining_asteroid_secret(var/size = 5)
/makepowernets()
/matrix
/matrix/Add(m) return matrix(src,m,2|128)
/matrix/Interpolate(m2,t)
/matrix/Invert() return matrix(src,4|128)
/matrix/Multiply(m) return matrix(src,m,1|128)
/matrix/New(m)
/matrix/Scale(x,y)
/matrix/Subtract(m) return matrix(src,m,3|128)
/matrix/Translate(x,y)
/matrix/Turn(a) return matrix(src,a,5|128)
/mergeAssoc(var/list/L, var/list/R)
/mergeAtoms(var/list/atom/L, var/list/atom/R, var/order = 1)
/mergeKey(var/list/client/L, var/list/client/R, var/order = 1)
/mergeLists(var/list/L, var/list/R)
/mergeRecordLists(var/list/datum/data/record/L, var/list/datum/data/record/R, var/field = "name", var/order = 1)
/merge_powernets(var/datum/powernet/net1, var/datum/powernet/net2)
/message_admins(var/msg)
/meteor_wave(var/number = meteors_in_wave)
/mineral
/mineral/New()
/mineral/UpdateTurf(var/turf/simulated/mineral/T)
/mineral/cave
/mineral/cave/UpdateTurf(var/turf/T)
/mineral/clown
/mineral/diamond
/mineral/gibtonite
/mineral/gibtonite/UpdateTurf(var/turf/T)
/mineral/gold
/mineral/iron
/mineral/plasma
/mineral/silver
/mineral/uranium
/mining_surprise
/mining_surprise/alien_nest
/mining_surprise/alien_nest/postProcessComplex()
/mining_surprise/cavein
/mining_surprise/cult
/mining_surprise/human
/mining_surprise/human/hitech
/mining_surprise/human/plantlab
/mining_surprise/human/speakeasy
/mining_surprise/organharvest
/mining_surprise/postProcessComplex()
/mining_surprise/postProcessRoom(var/surprise_room/room)
/mining_surprise/spawn_complex(var/atom/start_loc)
/mining_surprise/spawn_room(var/atom/start_loc, var/x_size, var/y_size, var/clean=0)
/mining_surprise/wizden
/miniscramble(input,rs,rd)
/miniscrambletarget(input,rs,rd)
/mixOneColor(var/list/weight, var/list/color)
/mix_color_from_reagents(var/list/reagent_list)
/mob
/mob/AIize()
/mob/AddCamoOverlay(atom/A)
/mob/AdjustParalysis(amount)
/mob/AdjustResting(amount)
/mob/AdjustSleeping(amount)
/mob/AdjustStunned(amount)
/mob/AdjustWeakened(amount)
/mob/AltClickOn(var/atom/A)
/mob/Animalize()
/mob/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/mob/Cell()
/mob/ClickOn( var/atom/A, var/params )
/mob/CtrlClickOn(var/atom/A)
/mob/DblClickOn(var/atom/A, var/params)
/mob/Destroy()
/mob/Dizzy(amount)
/mob/IsAdvancedToolUser()
/mob/Jitter(amount)
/mob/LaserEyes(atom/A)
/mob/Life()
/mob/Login()
/mob/Logout()
/mob/MiddleClickOn(var/atom/A)
/mob/MouseDrop(mob/M as mob)
/mob/Move(n,direct)
/mob/New()
/mob/NinjaStealthActive(atom/A)
/mob/NinjaStealthMalf()
/mob/Paralyse(amount)
/mob/PowerGlove(atom/A)
/mob/Process_Spacemove(var/check_drift = 0)
/mob/Process_Spaceslipping(var/prob_slip = 5)
/mob/RangedAttack(var/atom/A, var/params)
/mob/Resting(amount)
/mob/RestrainedClickOn(var/atom/A)
/mob/SetLuminosity(new_luminosity)
/mob/SetParalysis(amount)
/mob/SetResting(amount)
/mob/SetSleeping(amount)
/mob/SetStunned(amount)
/mob/SetWeakened(amount)
/mob/ShiftClickOn(var/atom/A)
/mob/Sleeping(amount)
/mob/Stat()
/mob/Stun(amount)
/mob/Topic(href, href_list)
/mob/UnarmedAttack(var/atom/A, var/proximity_flag)
/mob/UpdateAppearance(var/list/UI=null)
/mob/Weaken(amount)
/mob/abiotic(var/full_body = 0)
/mob/addToVisibilityNetwork(var/datum/visibility_network/network)
/mob/add_language(var/language)
/mob/add_side_effect(name, strength = 0)
/mob/aiEye
/mob/aiEye/Move()
/mob/aiEye/New()
/mob/aiEye/examine()
/mob/aiEye/point()
/mob/aiEye/pull()
/mob/aiEye/setLoc(var/T)
/mob/airflow_hit(atom/A)
/mob/airflow_stun()
/mob/announce_new_power(list/old_powers, list/new_powers)
/mob/attack_tk(mob/user)
/mob/attack_ui(slot)
/mob/become_mouse()
/mob/before_take_item(var/obj/item/W)
/mob/browse_rsc_icon(icon, icon_state, dir = -1)
/mob/camera
/mob/camera/blob
/mob/camera/blob/AltClickOn(var/atom/A)
/mob/camera/blob/CtrlClickOn(var/atom/A)
/mob/camera/blob/Login()
/mob/camera/blob/MiddleClickOn(var/atom/A)
/mob/camera/blob/Move(var/NewLoc, var/Dir = 0)
/mob/camera/blob/New()
/mob/camera/blob/Stat()
/mob/camera/blob/add_points(var/points)
/mob/camera/blob/blob_act()
/mob/camera/blob/blob_talk(message)
/mob/camera/blob/can_buy(var/cost = 15)
/mob/camera/blob/create_core()
/mob/camera/blob/create_shield(var/turf/T)
/mob/camera/blob/emote(var/act,var/m_type=1,var/message = null)
/mob/camera/blob/expand_blob(var/turf/T)
/mob/camera/blob/rally_spores(var/turf/T)
/mob/camera/blob/say(var/message)
/mob/camera/blob/update_health()
/mob/camera/blob/verb/create_factory()
/mob/camera/blob/verb/create_node()
/mob/camera/blob/verb/create_resource()
/mob/camera/blob/verb/create_shield_power()
/mob/camera/blob/verb/expand_blob_power()
/mob/camera/blob/verb/jump_to_node()
/mob/camera/blob/verb/rally_spores_power()
/mob/camera/blob/verb/revert()
/mob/camera/blob/verb/transport_core()
/mob/camera/overmind/mind_initialize()
/mob/can_enthrall(mob/living/carbon/C)
/mob/can_use_hands()
/mob/canface()
/mob/casting()
/mob/change_mob_type(var/new_type = null, var/turf/location = null, var/new_name = null as text, var/delete_old_mob = 0 as num)
/mob/changeling_DEATHsting()
/mob/changeling_absorb_dna()
/mob/changeling_blind_sting()
/mob/changeling_boost_range()
/mob/changeling_change_species()
/mob/changeling_deaf_sting()
/mob/changeling_digitalcamo()
/mob/changeling_engorgedglands()
/mob/changeling_extract_dna_sting()
/mob/changeling_fakedeath()
/mob/changeling_fastchemical()
/mob/changeling_hivedownload()
/mob/changeling_hiveupload()
/mob/changeling_lesser_form()
/mob/changeling_lesser_transform()
/mob/changeling_lsdsting()
/mob/changeling_mimicvoice()
/mob/changeling_paralysis_sting()
/mob/changeling_power(var/required_chems=0, var/required_dna=0, var/max_genetic_damage=100, var/max_stat=0)
/mob/changeling_rapidregen()
/mob/changeling_silence_sting()
/mob/changeling_sting(var/required_chems=0, var/verb_path)
/mob/changeling_transform()
/mob/changeling_transformation_sting()
/mob/changeling_unfat_sting()
/mob/changeling_unstun()
/mob/changeling_update_languages(var/updated_languages)
/mob/check_airflow_movable(n)
/mob/check_for_open_slot(obj/item/W)
/mob/check_vampire_upgrade(datum/mind/v)
/mob/clearmap()
/mob/contaminate()
/mob/contract_disease(var/datum/disease/virus, var/skip_this = 0, var/force_species_check=1, var/spread_type = -5)
/mob/custom_emote(var/m_type=1,var/message = null)
/mob/dead/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/mob/dead/assess_targets(list/target_list, mob/dead/observer/U)
/mob/dead/dust()
/mob/dead/gib()
/mob/dead/observer
/mob/dead/observer/ClickOn(var/atom/A, var/params)
/mob/dead/observer/DblClickOn(var/atom/A, var/params)
/mob/dead/observer/Life()
/mob/dead/observer/Logout()
/mob/dead/observer/ManualFollow(var/atom/target)
/mob/dead/observer/Move(NewLoc, direct)
/mob/dead/observer/New(var/mob/body=null, var/flags=1)
/mob/dead/observer/ShiftClickOn(var/atom/A)
/mob/dead/observer/Stat()
/mob/dead/observer/Topic(href, href_list)
/mob/dead/observer/add_memory()
/mob/dead/observer/check_airflow_movable()
/mob/dead/observer/dead_tele()
/mob/dead/observer/emote(var/act, var/type, var/message)
/mob/dead/observer/examine()
/mob/dead/observer/memory()
/mob/dead/observer/say(var/message)
/mob/dead/observer/verb/analyze_air()
/mob/dead/observer/verb/follow()
/mob/dead/observer/verb/jumptomob()
/mob/dead/observer/verb/reenter_corpse()
/mob/dead/observer/verb/toggle_antagHUD()
/mob/dead/observer/verb/toggle_darkness()
/mob/dead/observer/verb/toggle_medHUD()
/mob/dead/observer/verb/view_manfiest()
/mob/dead/process_medHUD(var/mob/M)
/mob/dead/verb/join_as_drone()
/mob/death(gibbed)
/mob/drop_from_inventory(var/obj/item/W)
/mob/drop_item(var/atom/Target)
/mob/drop_item_v()
/mob/drop_l_hand(var/atom/Target)
/mob/drop_r_hand(var/atom/Target)
/mob/dust()
/mob/emote(var/act, var/type, var/message)
/mob/emote_dead(var/message)
/mob/equip_to_appropriate_slot(obj/item/W)
/mob/equip_to_slot(obj/item/W as obj, slot)
/mob/equip_to_slot_if_possible(obj/item/W as obj, slot, del_on_fail = 0, disable_warning = 0, redraw_mob = 1)
/mob/equip_to_slot_or_del(obj/item/W as obj, slot)
/mob/equipped()
/mob/face_atom(var/atom/A)
/mob/fall(var/forced)
/mob/findname(msg)
/mob/flash_pain()
/mob/flash_weak_pain()
/mob/fully_replace_character_name(var/oldname,var/newname)
/mob/generate_name()
/mob/get_active_hand()
/mob/get_contents()
/mob/get_ear()
/mob/get_equipped_items()
/mob/get_gender()
/mob/get_inactive_hand()
/mob/get_item_by_slot(slot_id)
/mob/get_multitool(var/if_active=0)
/mob/get_species()
/mob/get_visible_implants(var/class = 0)
/mob/get_worn_id_account(var/require_pin=0, var/mob/user=null)
/mob/ghostize(var/flags = 1)
/mob/gib()
/mob/handle_bloodsucking(mob/living/carbon/human/H)
/mob/handle_enthrall(mob/living/carbon/human/H as mob)
/mob/handle_vampire_cloak()
/mob/has_brain_worms()
/mob/has_disease(var/datum/disease/virus)
/mob/is_active()
/mob/is_dead()
/mob/is_mechanical()
/mob/is_ready()
/mob/living
/mob/living/Examine_OOC()
/mob/living/ExtinguishMob()
/mob/living/FireBurn(var/firelevel, var/last_temperature, var/pressure)
/mob/living/GetVoice()
/mob/living/IgniteMob()
/mob/living/LaserEyes(atom/A)
/mob/living/Life()
/mob/living/Login()
/mob/living/Logout()
/mob/living/Move()
/mob/living/Move(a, b, flag)
/mob/living/NotTargeted(var/obj/item/weapon/gun/I)
/mob/living/RestrainedClickOn(var/atom/A)
/mob/living/Targeted(var/obj/item/weapon/gun/I)
/mob/living/UnarmedAttack(var/atom/A)
/mob/living/UpdateDamageIcon()
/mob/living/adjustBodyTemp(actual, desired, incrementboost)
/mob/living/adjustBrainLoss(var/amount)
/mob/living/adjustBruteLoss(var/amount)
/mob/living/adjustCloneLoss(var/amount)
/mob/living/adjustFireLoss(var/amount)
/mob/living/adjustHalLoss(var/amount)
/mob/living/adjustOxyLoss(var/amount)
/mob/living/adjustToxLoss(var/amount)
/mob/living/adjust_fire_stacks(add_fire_stacks)
/mob/living/alien_talk(var/message)
/mob/living/apply_damage(var/damage = 0,var/damagetype = "brute", var/def_zone = null, var/blocked = 0, var/used_weapon = null)
/mob/living/apply_damages(var/brute = 0, var/burn = 0, var/tox = 0, var/oxy = 0, var/clone = 0, var/halloss = 0, var/def_zone = null, var/blocked = 0)
/mob/living/apply_effect(var/effect = 0,var/effecttype = "stun", var/blocked = 0)
/mob/living/apply_effects(var/stun = 0, var/weaken = 0, var/paralyze = 0, var/irradiate = 0, var/stutter = 0, var/eyeblur = 0, var/drowsy = 0, var/agony = 0, var/blocked = 0)
/mob/living/attack_ghost(mob/dead/observer/user)
/mob/living/attackby(obj/item/I, mob/user)
/mob/living/binarycheck()
/mob/living/bullet_act(var/obj/item/projectile/P, var/def_zone)
/mob/living/burn_skin(burn_amount)
/mob/living/calculate_affecting_pressure(var/pressure)
/mob/living/captive_brain
/mob/living/captive_brain/emote(var/message)
/mob/living/captive_brain/say(var/message)
/mob/living/carbon/
/mob/living/carbon/AIize()
/mob/living/carbon/Login()
/mob/living/carbon/MiddleClickOn(var/atom/A)
/mob/living/carbon/Move(NewLoc, direct)
/mob/living/carbon/activate_hand(var/selhand)
/mob/living/carbon/alien
/mob/living/carbon/alien/AddInfectionImages()
/mob/living/carbon/alien/IsAdvancedToolUser()
/mob/living/carbon/alien/Process_Spaceslipping()
/mob/living/carbon/alien/RemoveInfectionImages()
/mob/living/carbon/alien/RestrainedClickOn(var/atom/A)
/mob/living/carbon/alien/Stat()
/mob/living/carbon/alien/Stun(amount)
/mob/living/carbon/alien/UnarmedAttack(var/atom/A)
/mob/living/carbon/alien/adjustFireLoss(amount)
/mob/living/carbon/alien/adjustToxLoss(amount)
/mob/living/carbon/alien/death(gibbed)
/mob/living/carbon/alien/dust()
/mob/living/carbon/alien/embryo
/mob/living/carbon/alien/embryo/AddInfectionImages(var/mob/living/C)
/mob/living/carbon/alien/embryo/AttemptGrow(var/gib_on_success = 1)
/mob/living/carbon/alien/embryo/Destroy()
/mob/living/carbon/alien/embryo/Life()
/mob/living/carbon/alien/embryo/New()
/mob/living/carbon/alien/embryo/RefreshInfectionImage()
/mob/living/carbon/alien/embryo/RemoveInfectionImages(var/mob/living/C)
/mob/living/carbon/alien/eyecheck()
/mob/living/carbon/alien/facehugger
/mob/living/carbon/alien/facehugger/Impregnate(mob/living/target as mob)
/mob/living/carbon/alien/facehugger/Life()
/mob/living/carbon/alien/facehugger/Login()
/mob/living/carbon/alien/facehugger/New()
/mob/living/carbon/alien/facehugger/attack_hand(mob/living/carbon/M as mob)
/mob/living/carbon/alien/facehugger/death(gibbed)
/mob/living/carbon/alien/facehugger/examine()
/mob/living/carbon/alien/facehugger/handle_regular_status_updates()
/mob/living/carbon/alien/facehugger/lamarr
/mob/living/carbon/alien/facehugger/verb/Attach()
/mob/living/carbon/alien/facehugger/verb/hide()
/mob/living/carbon/alien/getDNA()
/mob/living/carbon/alien/getPlasma()
/mob/living/carbon/alien/gib()
/mob/living/carbon/alien/handle_environment(var/datum/gas_mixture/environment)
/mob/living/carbon/alien/handle_fire()
/mob/living/carbon/alien/handle_mutations_and_radiation()
/mob/living/carbon/alien/hitby(atom/movable/AM)
/mob/living/carbon/alien/humanoid
/mob/living/carbon/alien/humanoid/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/carbon/alien/humanoid/Life()
/mob/living/carbon/alien/humanoid/Login()
/mob/living/carbon/alien/humanoid/Logout()
/mob/living/carbon/alien/humanoid/NeuroAOE(atom/A)
/mob/living/carbon/alien/humanoid/Neurotox(atom/A)
/mob/living/carbon/alien/humanoid/New()
/mob/living/carbon/alien/humanoid/RangedAttack(var/atom/A)
/mob/living/carbon/alien/humanoid/adjust_body_temperature(current, loc_temp, boost)
/mob/living/carbon/alien/humanoid/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/carbon/alien/humanoid/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/alien/humanoid/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/alien/humanoid/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/carbon/alien/humanoid/attack_slime(mob/living/carbon/slime/M as mob)
/mob/living/carbon/alien/humanoid/attack_ui(slot_id)
/mob/living/carbon/alien/humanoid/blob_act()
/mob/living/carbon/alien/humanoid/breathe()
/mob/living/carbon/alien/humanoid/corrosive_acid(O as obj|turf in oview(1))
/mob/living/carbon/alien/humanoid/drone
/mob/living/carbon/alien/humanoid/drone/New()
/mob/living/carbon/alien/humanoid/drone/mind_initialize()
/mob/living/carbon/alien/humanoid/drone/verb/evolve()
/mob/living/carbon/alien/humanoid/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/alien/humanoid/emp_act(severity)
/mob/living/carbon/alien/humanoid/empress
/mob/living/carbon/alien/humanoid/empress/New()
/mob/living/carbon/alien/humanoid/empress/handle_regular_hud_updates()
/mob/living/carbon/alien/humanoid/empress/large
/mob/living/carbon/alien/humanoid/empress/large/update_icons()
/mob/living/carbon/alien/humanoid/empress/verb/lay_egg()
/mob/living/carbon/alien/humanoid/ex_act(severity)
/mob/living/carbon/alien/humanoid/get_breath_from_internal(volume_needed)
/mob/living/carbon/alien/humanoid/handle_breath(datum/gas_mixture/breath)
/mob/living/carbon/alien/humanoid/handle_chemicals_in_body()
/mob/living/carbon/alien/humanoid/handle_disabilities()
/mob/living/carbon/alien/humanoid/handle_regular_hud_updates()
/mob/living/carbon/alien/humanoid/handle_regular_status_updates()
/mob/living/carbon/alien/humanoid/handle_stomach()
/mob/living/carbon/alien/humanoid/hunter
/mob/living/carbon/alien/humanoid/hunter/New()
/mob/living/carbon/alien/humanoid/hunter/handle_environment()
/mob/living/carbon/alien/humanoid/hunter/handle_regular_hud_updates()
/mob/living/carbon/alien/humanoid/hunter/mind_initialize()
/mob/living/carbon/alien/humanoid/meteorhit(O as obj)
/mob/living/carbon/alien/humanoid/movement_delay()
/mob/living/carbon/alien/humanoid/queen
/mob/living/carbon/alien/humanoid/queen/New()
/mob/living/carbon/alien/humanoid/queen/handle_regular_hud_updates()
/mob/living/carbon/alien/humanoid/queen/large
/mob/living/carbon/alien/humanoid/queen/large/update_icons()
/mob/living/carbon/alien/humanoid/queen/mind_initialize()
/mob/living/carbon/alien/humanoid/queen/verb/evolve()
/mob/living/carbon/alien/humanoid/queen/verb/lay_egg()
/mob/living/carbon/alien/humanoid/regenerate_icons()
/mob/living/carbon/alien/humanoid/resin()
/mob/living/carbon/alien/humanoid/restrained()
/mob/living/carbon/alien/humanoid/sentinel
/mob/living/carbon/alien/humanoid/sentinel/New()
/mob/living/carbon/alien/humanoid/sentinel/handle_regular_hud_updates()
/mob/living/carbon/alien/humanoid/sentinel/large
/mob/living/carbon/alien/humanoid/sentinel/large/update_icons()
/mob/living/carbon/alien/humanoid/sentinel/mind_initialize()
/mob/living/carbon/alien/humanoid/sentinel/verb/evolve()
/mob/living/carbon/alien/humanoid/show_inv(mob/user as mob)
/mob/living/carbon/alien/humanoid/u_equip(obj/item/W as obj)
/mob/living/carbon/alien/humanoid/update_fire()
/mob/living/carbon/alien/humanoid/update_hud()
/mob/living/carbon/alien/humanoid/update_icons()
/mob/living/carbon/alien/humanoid/update_inv_head(var/update_icons=1)
/mob/living/carbon/alien/humanoid/update_inv_l_hand(var/update_icons=1)
/mob/living/carbon/alien/humanoid/update_inv_pockets(var/update_icons=1)
/mob/living/carbon/alien/humanoid/update_inv_r_hand(var/update_icons=1)
/mob/living/carbon/alien/humanoid/update_inv_wear_suit(var/update_icons=1)
/mob/living/carbon/alien/humanoid/update_targeted(var/update_icons=1)
/mob/living/carbon/alien/humanoid/verb/plant()
/mob/living/carbon/alien/humanoid/verb/regurgitate()
/mob/living/carbon/alien/humanoid/verb/suicide()
/mob/living/carbon/alien/humanoid/verb/transfer_plasma(mob/living/carbon/alien/M as mob in oview())
/mob/living/carbon/alien/humanoid/verb/whisp(mob/M as mob in oview())
/mob/living/carbon/alien/larva
/mob/living/carbon/alien/larva/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/carbon/alien/larva/Life()
/mob/living/carbon/alien/larva/New()
/mob/living/carbon/alien/larva/Stat()
/mob/living/carbon/alien/larva/UnarmedAttack(var/atom/A)
/mob/living/carbon/alien/larva/adjustToxLoss(amount)
/mob/living/carbon/alien/larva/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/carbon/alien/larva/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/alien/larva/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/alien/larva/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/carbon/alien/larva/attack_slime(mob/living/carbon/slime/M as mob)
/mob/living/carbon/alien/larva/attack_ui(slot_id)
/mob/living/carbon/alien/larva/blob_act()
/mob/living/carbon/alien/larva/breathe()
/mob/living/carbon/alien/larva/death(gibbed)
/mob/living/carbon/alien/larva/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/alien/larva/ex_act(severity)
/mob/living/carbon/alien/larva/get_breath_from_internal(volume_needed)
/mob/living/carbon/alien/larva/handle_breath(datum/gas_mixture/breath)
/mob/living/carbon/alien/larva/handle_chemicals_in_body()
/mob/living/carbon/alien/larva/handle_random_events()
/mob/living/carbon/alien/larva/handle_regular_hud_updates()
/mob/living/carbon/alien/larva/handle_regular_status_updates()
/mob/living/carbon/alien/larva/handle_stomach()
/mob/living/carbon/alien/larva/meteorhit(O as obj)
/mob/living/carbon/alien/larva/mind_initialize()
/mob/living/carbon/alien/larva/regenerate_icons()
/mob/living/carbon/alien/larva/restrained()
/mob/living/carbon/alien/larva/show_inv(mob/user as mob)
/mob/living/carbon/alien/larva/u_equip(obj/item/W as obj)
/mob/living/carbon/alien/larva/updatePlasmaDisplay()
/mob/living/carbon/alien/larva/update_icons()
/mob/living/carbon/alien/larva/verb/evolve()
/mob/living/carbon/alien/larva/verb/hide()
/mob/living/carbon/alien/mind_initialize()
/mob/living/carbon/alien/powerc(X, Y)
/mob/living/carbon/alien/say(var/message)
/mob/living/carbon/alien/setDNA()
/mob/living/carbon/alien/updatePlasmaDisplay()
/mob/living/carbon/alien/updatehealth()
/mob/living/carbon/alien/verb/alien_ventcrawl()
/mob/living/carbon/attack_hand(mob/M as mob)
/mob/living/carbon/attack_paw(mob/M as mob)
/mob/living/carbon/brain
/mob/living/carbon/brain/
/mob/living/carbon/brain//handle_chemicals_in_body()
/mob/living/carbon/brain//handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/brain//handle_mutations_and_radiation()
/mob/living/carbon/brain//handle_regular_hud_updates()
/mob/living/carbon/brain//handle_regular_status_updates()
/mob/living/carbon/brain//handle_temperature_damage(body_part, exposed_temperature, exposed_intensity)
/mob/living/carbon/brain/Destroy()
/mob/living/carbon/brain/Life()
/mob/living/carbon/brain/New()
/mob/living/carbon/brain/death(gibbed)
/mob/living/carbon/brain/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/brain/gib()
/mob/living/carbon/brain/say(var/message)
/mob/living/carbon/brain/say_understands(var/other)
/mob/living/carbon/brain/update_canmove()
/mob/living/carbon/brain/verb/suicide()
/mob/living/carbon/can_use_hands()
/mob/living/carbon/clean_blood()
/mob/living/carbon/dream()
/mob/living/carbon/electrocute_act(var/shock_damage, var/obj/source, var/siemens_coeff = 1.0)
/mob/living/carbon/eyecheck()
/mob/living/carbon/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/mob/living/carbon/getDNA()
/mob/living/carbon/get_blood(datum/reagents/container)
/mob/living/carbon/get_pulse(var/method)
/mob/living/carbon/gib()
/mob/living/carbon/handle_dreams()
/mob/living/carbon/handle_hallucinations()
/mob/living/carbon/handle_shock()
/mob/living/carbon/handle_ventcrawl(var/obj/machinery/atmospherics/unary/vent_pump/vent_found = null)
/mob/living/carbon/help_shake_act(mob/living/carbon/M)
/mob/living/carbon/hitby(atom/movable/AM)
/mob/living/carbon/human
/mob/living/carbon/human/AIize()
/mob/living/carbon/human/Alienize()
/mob/living/carbon/human/Animalize()
/mob/living/carbon/human/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/carbon/human/ChangeToHusk()
/mob/living/carbon/human/Crossed(var/atom/movable/AM)
/mob/living/carbon/human/DeferredSpeciesSetup()
/mob/living/carbon/human/Drain()
/mob/living/carbon/human/FireBurn(var/firelevel, var/last_temperature, var/pressure)
/mob/living/carbon/human/GetSpecialVoice()
/mob/living/carbon/human/GetVoice()
/mob/living/carbon/human/HealDamage(zone, brute, burn)
/mob/living/carbon/human/IsAdvancedToolUser()
/mob/living/carbon/human/LaserEyes()
/mob/living/carbon/human/Life()
/mob/living/carbon/human/Login()
/mob/living/carbon/human/New(var/new_loc, var/new_species = null)
/mob/living/carbon/human/Paralyse(amount)
/mob/living/carbon/human/PowerGlove(atom/A)
/mob/living/carbon/human/Process_Spacemove(var/check_drift = 0)
/mob/living/carbon/human/Process_Spaceslipping(var/prob_slip = 5)
/mob/living/carbon/human/RangedAttack(var/atom/A)
/mob/living/carbon/human/RestrainedClickOn(var/atom/A)
/mob/living/carbon/human/RevConvert()
/mob/living/carbon/human/Robotize()
/mob/living/carbon/human/SetSpecialVoice(var/new_voice)
/mob/living/carbon/human/Stat()
/mob/living/carbon/human/Stun(amount)
/mob/living/carbon/human/Topic(href, href_list)
/mob/living/carbon/human/UnarmedAttack(var/atom/A, var/proximity)
/mob/living/carbon/human/UnsetSpecialVoice()
/mob/living/carbon/human/UpdateDamageIcon(var/update_icons=1)
/mob/living/carbon/human/Weaken(amount)
/mob/living/carbon/human/abiotic(var/full_body = 0)
/mob/living/carbon/human/add_blood(mob/living/carbon/human/M as mob)
/mob/living/carbon/human/add_side_effect(name, strength = 0)
/mob/living/carbon/human/adjustBruteLoss(var/amount)
/mob/living/carbon/human/adjustCloneLoss(var/amount)
/mob/living/carbon/human/adjustFireLoss(var/amount)
/mob/living/carbon/human/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, inrange, params)
/mob/living/carbon/human/airflow_hit(atom/A)
/mob/living/carbon/human/airflow_stun()
/mob/living/carbon/human/apply_damage(var/damage = 0,var/damagetype = "brute", var/def_zone = null, var/blocked = 0, var/sharp = 0, var/obj/used_weapon = null)
/mob/living/carbon/human/apply_overlay(cache_index)
/mob/living/carbon/human/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/carbon/human/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/human/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/human/attack_paw(mob/M as mob)
/mob/living/carbon/human/attack_slime(mob/living/carbon/slime/M as mob)
/mob/living/carbon/human/attacked_by(var/obj/item/I, var/mob/living/user, var/def_zone)
/mob/living/carbon/human/blob_act()
/mob/living/carbon/human/bloody_body(var/mob/living/source)
/mob/living/carbon/human/bloody_doodle()
/mob/living/carbon/human/bloody_hands(var/mob/living/source, var/amount = 2)
/mob/living/carbon/human/breathe()
/mob/living/carbon/human/bullet_act(var/obj/item/projectile/P, var/def_zone)
/mob/living/carbon/human/burn_eyes()
/mob/living/carbon/human/calculate_affecting_pressure(var/pressure)
/mob/living/carbon/human/canSingulothPull(var/obj/machinery/singularity/singulo)
/mob/living/carbon/human/check_dna()
/mob/living/carbon/human/check_head_coverage()
/mob/living/carbon/human/check_shields(var/damage = 0, var/attack_text = "the attack")
/mob/living/carbon/human/check_sun()
/mob/living/carbon/human/checkarmor(var/datum/organ/external/def_zone, var/type)
/mob/living/carbon/human/clean_blood(var/clean_feet)
/mob/living/carbon/human/contaminate()
/mob/living/carbon/human/corgize()
/mob/living/carbon/human/create_mind_space_ninja()
/mob/living/carbon/human/custom_pain(var/message, var/flash_strength)
/mob/living/carbon/human/death(gibbed)
/mob/living/carbon/human/diona/New(var/new_loc)
/mob/living/carbon/human/drip(var/amt as num)
/mob/living/carbon/human/dummy
/mob/living/carbon/human/dust()
/mob/living/carbon/human/electrocute_act(var/shock_damage, var/obj/source, var/siemens_coeff = 1.0, var/safety = 0)
/mob/living/carbon/human/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/human/emp_act(severity)
/mob/living/carbon/human/equip_death_commando(leader_selected = 0)
/mob/living/carbon/human/equip_honksquad(honk_leader_selected = 0)
/mob/living/carbon/human/equip_if_possible(obj/item/W, slot, del_on_fail = 1)
/mob/living/carbon/human/equip_in_one_of_slots(obj/item/W, list/slots, del_on_fail = 1)
/mob/living/carbon/human/equip_or_collect(var/obj/item/W, var/slot)
/mob/living/carbon/human/equip_space_ninja(safety=0)
/mob/living/carbon/human/equip_strike_team(leader_selected = 0)
/mob/living/carbon/human/equip_syndicate_commando(syndicate_leader_selected = 0)
/mob/living/carbon/human/equip_to_slot(obj/item/W as obj, slot, redraw_mob = 1)
/mob/living/carbon/human/equip_vox_raider()
/mob/living/carbon/human/ex_act(severity)
/mob/living/carbon/human/examine()
/mob/living/carbon/human/expose_brain()
/mob/living/carbon/human/eyecheck()
/mob/living/carbon/human/fall(var/forced)
/mob/living/carbon/human/findAirborneVirii()
/mob/living/carbon/human/fixblood()
/mob/living/carbon/human/generate_head_icon()
/mob/living/carbon/human/generate_name()
/mob/living/carbon/human/getBrainLoss()
/mob/living/carbon/human/getBruteLoss()
/mob/living/carbon/human/getFireLoss()
/mob/living/carbon/human/get_assignment(var/if_no_id = "No id", var/if_no_job = "No job")
/mob/living/carbon/human/get_authentification_name(var/if_no_id = "Unknown")
/mob/living/carbon/human/get_breath_from_internal(volume_needed)
/mob/living/carbon/human/get_cold_protection(temperature)
/mob/living/carbon/human/get_cold_protection_flags(temperature)
/mob/living/carbon/human/get_damageable_organs()
/mob/living/carbon/human/get_damaged_organs(var/brute, var/burn)
/mob/living/carbon/human/get_face_name()
/mob/living/carbon/human/get_heat_protection(temperature)
/mob/living/carbon/human/get_heat_protection_flags(temperature)
/mob/living/carbon/human/get_id_name(var/if_no_id = "Unknown")
/mob/living/carbon/human/get_idcard()
/mob/living/carbon/human/get_item_by_slot(slot_id)
/mob/living/carbon/human/get_organ(var/zone)
/mob/living/carbon/human/get_species()
/mob/living/carbon/human/get_visible_gender()
/mob/living/carbon/human/get_visible_implants(var/class = 0)
/mob/living/carbon/human/get_visible_name()
/mob/living/carbon/human/getarmor(var/def_zone, var/type)
/mob/living/carbon/human/gib()
/mob/living/carbon/human/grey/New(var/new_loc)
/mob/living/carbon/human/gut()
/mob/living/carbon/human/handle_blood()
/mob/living/carbon/human/handle_breath(datum/gas_mixture/breath)
/mob/living/carbon/human/handle_changeling()
/mob/living/carbon/human/handle_chemicals_in_body()
/mob/living/carbon/human/handle_decay()
/mob/living/carbon/human/handle_disabilities()
/mob/living/carbon/human/handle_embedded_objects()
/mob/living/carbon/human/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/human/handle_fire()
/mob/living/carbon/human/handle_hud_list()
/mob/living/carbon/human/handle_medical_side_effects()
/mob/living/carbon/human/handle_mutations_and_radiation()
/mob/living/carbon/human/handle_organs()
/mob/living/carbon/human/handle_pain()
/mob/living/carbon/human/handle_pulse()
/mob/living/carbon/human/handle_random_events()
/mob/living/carbon/human/handle_regular_hud_updates()
/mob/living/carbon/human/handle_regular_status_updates()
/mob/living/carbon/human/handle_shock()
/mob/living/carbon/human/handle_stasis_bag()
/mob/living/carbon/human/handle_stomach()
/mob/living/carbon/human/handle_suit_punctures(var/damtype, var/damage)
/mob/living/carbon/human/handle_trace_chems()
/mob/living/carbon/human/handle_vampire()
/mob/living/carbon/human/handle_virus_updates()
/mob/living/carbon/human/has_organ(name)
/mob/living/carbon/human/has_organ_for_slot(slot)
/mob/living/carbon/human/heal_organ_damage(var/brute, var/burn)
/mob/living/carbon/human/heal_overall_damage(var/brute, var/burn)
/mob/living/carbon/human/human/New(var/new_loc)
/mob/living/carbon/human/increase_germ_level(n)
/mob/living/carbon/human/inject_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/human/isInCrit()
/mob/living/carbon/human/is_in_hands(var/typepath)
/mob/living/carbon/human/is_loyalty_implanted(mob/living/carbon/human/M)
/mob/living/carbon/human/is_lung_ruptured()
/mob/living/carbon/human/kidan/New(var/new_loc)
/mob/living/carbon/human/leap()
/mob/living/carbon/human/machine/New(var/new_loc)
/mob/living/carbon/human/makeSkeleton()
/mob/living/carbon/human/make_blood()
/mob/living/carbon/human/make_into_mask(var/should_gib = 0)
/mob/living/carbon/human/melt()
/mob/living/carbon/human/meteorhit(O as obj)
/mob/living/carbon/human/mind_initialize()
/mob/living/carbon/human/monkeyize()
/mob/living/carbon/human/morph()
/mob/living/carbon/human/movement_delay()
/mob/living/carbon/human/pl_effects()
/mob/living/carbon/human/pl_head_protected()
/mob/living/carbon/human/pl_suit_protected()
/mob/living/carbon/human/play_xylophone()
/mob/living/carbon/human/proc/equip_or_collect(var/obj/item/W, var/slot)
/mob/living/carbon/human/put_in_hands(obj/item/W)
/mob/living/carbon/human/recruit_loyalist()
/mob/living/carbon/human/recruit_mutineer()
/mob/living/carbon/human/regenerate_icons()
/mob/living/carbon/human/remoteobserve()
/mob/living/carbon/human/remotesay()
/mob/living/carbon/human/remove_overlay(cache_index)
/mob/living/carbon/human/restore_all_organs()
/mob/living/carbon/human/restore_blood()
/mob/living/carbon/human/restrained()
/mob/living/carbon/human/revive()
/mob/living/carbon/human/rupture_lung()
/mob/living/carbon/human/say(var/message)
/mob/living/carbon/human/say_understands(var/other,var/datum/language/speaking = null)
/mob/living/carbon/human/set_species(var/new_species, var/force_organs)
/mob/living/carbon/human/show_inv(mob/user as mob)
/mob/living/carbon/human/skellington/New(var/new_loc)
/mob/living/carbon/human/skrell/New(var/new_loc)
/mob/living/carbon/human/slime/New(var/new_loc)
/mob/living/carbon/human/slime/slimepeople_ventcrawl()
/mob/living/carbon/human/slimeize(adult as num, reproduce as num)
/mob/living/carbon/human/stabilize_temperature_from_calories()
/mob/living/carbon/human/suit_contamination()
/mob/living/carbon/human/tajaran/New(var/new_loc)
/mob/living/carbon/human/take_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/human/take_organ_damage(var/brute, var/burn, var/sharp = 0)
/mob/living/carbon/human/take_overall_damage(var/brute, var/burn, var/sharp = 0, var/used_weapon = null)
/mob/living/carbon/human/u_equip(obj/item/W as obj)
/mob/living/carbon/human/unathi/New(var/new_loc)
/mob/living/carbon/human/update_action_buttons()
/mob/living/carbon/human/update_body(var/update_icons=1)
/mob/living/carbon/human/update_collar(var/update_icons=1)
/mob/living/carbon/human/update_fire()
/mob/living/carbon/human/update_hair(var/update_icons=1)
/mob/living/carbon/human/update_hud()
/mob/living/carbon/human/update_icons()
/mob/living/carbon/human/update_inv_back(var/update_icons=1)
/mob/living/carbon/human/update_inv_belt(var/update_icons=1)
/mob/living/carbon/human/update_inv_ears(var/update_icons=1)
/mob/living/carbon/human/update_inv_glasses(var/update_icons=1)
/mob/living/carbon/human/update_inv_gloves(var/update_icons=1,var/green=0)
/mob/living/carbon/human/update_inv_handcuffed(var/update_icons=1)
/mob/living/carbon/human/update_inv_head(var/update_icons=1,var/green=0)
/mob/living/carbon/human/update_inv_l_hand(var/update_icons=1)
/mob/living/carbon/human/update_inv_legcuffed(var/update_icons=1)
/mob/living/carbon/human/update_inv_pockets(var/update_icons=1)
/mob/living/carbon/human/update_inv_r_hand(var/update_icons=1)
/mob/living/carbon/human/update_inv_s_store(var/update_icons=1)
/mob/living/carbon/human/update_inv_shoes(var/update_icons=1,var/green=0)
/mob/living/carbon/human/update_inv_w_uniform(var/update_icons=1,var/green=0)
/mob/living/carbon/human/update_inv_wear_id(var/update_icons=1)
/mob/living/carbon/human/update_inv_wear_mask(var/update_icons=1)
/mob/living/carbon/human/update_inv_wear_pda(var/update_icons=1)
/mob/living/carbon/human/update_inv_wear_suit(var/update_icons=1)
/mob/living/carbon/human/update_mutantrace(var/update_icons=1)
/mob/living/carbon/human/update_mutations(var/update_icons=1)
/mob/living/carbon/human/update_tail_showing(var/update_icons=1)
/mob/living/carbon/human/update_targeted(var/update_icons=1)
/mob/living/carbon/human/updatehealth()
/mob/living/carbon/human/var/datum/reagents/vessel
/mob/living/carbon/human/verb/check_pulse()
/mob/living/carbon/human/verb/pose()
/mob/living/carbon/human/verb/quick_equip()
/mob/living/carbon/human/verb/set_flavor()
/mob/living/carbon/human/verb/suicide()
/mob/living/carbon/human/verb/toggle_hotkey_verbs()
/mob/living/carbon/human/vomit(hairball=0)
/mob/living/carbon/human/vox/New(var/new_loc)
/mob/living/carbon/human/voxarmalis/New(var/new_loc)
/mob/living/carbon/human/whisper(message as text)
/mob/living/carbon/inject_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/metroid/airflow_stun()
/mob/living/carbon/monkey
/mob/living/carbon/monkey/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/carbon/monkey/IsAdvancedToolUser()
/mob/living/carbon/monkey/Life()
/mob/living/carbon/monkey/Login()
/mob/living/carbon/monkey/New()
/mob/living/carbon/monkey/RestrainedClickOn(var/atom/A)
/mob/living/carbon/monkey/Stat()
/mob/living/carbon/monkey/Topic(href, href_list)
/mob/living/carbon/monkey/UnarmedAttack(var/atom/A)
/mob/living/carbon/monkey/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/carbon/monkey/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/monkey/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/monkey/attack_paw(mob/M as mob)
/mob/living/carbon/monkey/attack_slime(mob/living/carbon/slime/M as mob)
/mob/living/carbon/monkey/blob_act()
/mob/living/carbon/monkey/breathe()
/mob/living/carbon/monkey/calculate_affecting_pressure(var/pressure)
/mob/living/carbon/monkey/death(gibbed)
/mob/living/carbon/monkey/diona
/mob/living/carbon/monkey/diona/New()
/mob/living/carbon/monkey/diona/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/monkey/diona/merge()
/mob/living/carbon/monkey/diona/split()
/mob/living/carbon/monkey/diona/update_progression()
/mob/living/carbon/monkey/diona/verb/dionaventcrawl()
/mob/living/carbon/monkey/diona/verb/eat_weeds()
/mob/living/carbon/monkey/diona/verb/evolve()
/mob/living/carbon/monkey/diona/verb/fertilize_plant()
/mob/living/carbon/monkey/diona/verb/steal_blood()
/mob/living/carbon/monkey/dust()
/mob/living/carbon/monkey/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/monkey/emp_act(severity)
/mob/living/carbon/monkey/equip_to_slot(obj/item/W as obj, slot, redraw_mob = 1)
/mob/living/carbon/monkey/ex_act(severity)
/mob/living/carbon/monkey/examine()
/mob/living/carbon/monkey/findAirborneVirii()
/mob/living/carbon/monkey/get_breath_from_internal(volume_needed)
/mob/living/carbon/monkey/gib()
/mob/living/carbon/monkey/handle_breath(datum/gas_mixture/breath)
/mob/living/carbon/monkey/handle_changeling()
/mob/living/carbon/monkey/handle_chemicals_in_body()
/mob/living/carbon/monkey/handle_disabilities()
/mob/living/carbon/monkey/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/monkey/handle_fire()
/mob/living/carbon/monkey/handle_mutations_and_radiation()
/mob/living/carbon/monkey/handle_random_events()
/mob/living/carbon/monkey/handle_regular_hud_updates()
/mob/living/carbon/monkey/handle_regular_status_updates()
/mob/living/carbon/monkey/handle_temperature_damage(body_part, exposed_temperature, exposed_intensity)
/mob/living/carbon/monkey/handle_virus_updates()
/mob/living/carbon/monkey/meteorhit(obj/O as obj)
/mob/living/carbon/monkey/mind_initialize()
/mob/living/carbon/monkey/movement_delay()
/mob/living/carbon/monkey/put_in_hands(obj/item/W)
/mob/living/carbon/monkey/regenerate_icons()
/mob/living/carbon/monkey/skrell
/mob/living/carbon/monkey/skrell/New()
/mob/living/carbon/monkey/tajara
/mob/living/carbon/monkey/tajara/New()
/mob/living/carbon/monkey/unathi
/mob/living/carbon/monkey/unathi/New()
/mob/living/carbon/monkey/update_fire()
/mob/living/carbon/monkey/update_hud()
/mob/living/carbon/monkey/update_icons()
/mob/living/carbon/monkey/update_inv_back(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_handcuffed(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_l_hand(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_r_hand(var/update_icons=1)
/mob/living/carbon/monkey/update_inv_wear_mask(var/update_icons=1)
/mob/living/carbon/monkey/update_targeted(var/update_icons=1)
/mob/living/carbon/monkey/verb/removeinternal()
/mob/living/carbon/monkey/verb/suicide()
/mob/living/carbon/monkey/verb/ventcrawl()
/mob/living/carbon/pain(var/partname, var/amount, var/force, var/burning = 0)
/mob/living/carbon/proc/handle_dreams()
/mob/living/carbon/punish_host()
/mob/living/carbon/relaymove(var/mob/user, direction)
/mob/living/carbon/release_control()
/mob/living/carbon/restrained()
/mob/living/carbon/setDNA(var/datum/dna/newDNA)
/mob/living/carbon/share_contact_diseases(var/mob/M)
/mob/living/carbon/show_inv(mob/living/carbon/user as mob)
/mob/living/carbon/slime
/mob/living/carbon/slime/AIprocess()
/mob/living/carbon/slime/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/carbon/slime/Feedon(var/mob/living/carbon/M)
/mob/living/carbon/slime/Feedstop()
/mob/living/carbon/slime/Life()
/mob/living/carbon/slime/Login()
/mob/living/carbon/slime/New()
/mob/living/carbon/slime/Process_Spacemove()
/mob/living/carbon/slime/RestrainedClickOn(var/atom/A)
/mob/living/carbon/slime/Stat()
/mob/living/carbon/slime/UnarmedAttack(var/atom/A)
/mob/living/carbon/slime/UpdateFeed(var/mob/M)
/mob/living/carbon/slime/adamantine
/mob/living/carbon/slime/adjustFireLoss(amount)
/mob/living/carbon/slime/adjust_body_temperature(current, loc_temp, boost)
/mob/living/carbon/slime/adult
/mob/living/carbon/slime/adult/New()
/mob/living/carbon/slime/adult/adamantine
/mob/living/carbon/slime/adult/black
/mob/living/carbon/slime/adult/blue
/mob/living/carbon/slime/adult/darkblue
/mob/living/carbon/slime/adult/darkpurple
/mob/living/carbon/slime/adult/gold
/mob/living/carbon/slime/adult/green
/mob/living/carbon/slime/adult/lightpink
/mob/living/carbon/slime/adult/metal
/mob/living/carbon/slime/adult/oil
/mob/living/carbon/slime/adult/orange
/mob/living/carbon/slime/adult/pink
/mob/living/carbon/slime/adult/purple
/mob/living/carbon/slime/adult/red
/mob/living/carbon/slime/adult/silver
/mob/living/carbon/slime/adult/yellow
/mob/living/carbon/slime/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/carbon/slime/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/carbon/slime/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/carbon/slime/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/carbon/slime/attack_slime(mob/living/carbon/slime/M as mob)
/mob/living/carbon/slime/attack_ui(slot)
/mob/living/carbon/slime/black
/mob/living/carbon/slime/blob_act()
/mob/living/carbon/slime/blue
/mob/living/carbon/slime/bullet_act(var/obj/item/projectile/Proj)
/mob/living/carbon/slime/darkblue
/mob/living/carbon/slime/darkpurple
/mob/living/carbon/slime/death(gibbed)
/mob/living/carbon/slime/emote(var/act,var/m_type=1,var/message = null)
/mob/living/carbon/slime/emp_act(severity)
/mob/living/carbon/slime/ex_act(severity)
/mob/living/carbon/slime/examine()
/mob/living/carbon/slime/gold
/mob/living/carbon/slime/green
/mob/living/carbon/slime/handle_chemicals_in_body()
/mob/living/carbon/slime/handle_environment(datum/gas_mixture/environment)
/mob/living/carbon/slime/handle_nutrition()
/mob/living/carbon/slime/handle_regular_status_updates()
/mob/living/carbon/slime/handle_targets()
/mob/living/carbon/slime/lightpink
/mob/living/carbon/slime/metal
/mob/living/carbon/slime/meteorhit(O as obj)
/mob/living/carbon/slime/mind_initialize()
/mob/living/carbon/slime/movement_delay()
/mob/living/carbon/slime/oil
/mob/living/carbon/slime/orange
/mob/living/carbon/slime/pink
/mob/living/carbon/slime/purple
/mob/living/carbon/slime/red
/mob/living/carbon/slime/regular_hud_updates()
/mob/living/carbon/slime/restrained()
/mob/living/carbon/slime/show_inv(mob/user as mob)
/mob/living/carbon/slime/silver
/mob/living/carbon/slime/u_equip(obj/item/W as obj)
/mob/living/carbon/slime/updatehealth()
/mob/living/carbon/slime/verb/Evolve()
/mob/living/carbon/slime/verb/Feed()
/mob/living/carbon/slime/verb/Reproduce()
/mob/living/carbon/slime/verb/suicide()
/mob/living/carbon/slime/verb/ventcrawl()
/mob/living/carbon/slime/yellow
/mob/living/carbon/spawn_larvae()
/mob/living/carbon/spread_disease_to(var/mob/living/carbon/victim, var/vector = "Airborne")
/mob/living/carbon/swap_hand()
/mob/living/carbon/take_blood(obj/item/weapon/reagent_containers/container, var/amount)
/mob/living/carbon/throw_item(atom/target)
/mob/living/carbon/throw_mode_off()
/mob/living/carbon/throw_mode_on()
/mob/living/carbon/toggle_throw_mode()
/mob/living/carbon/u_equip(obj/item/W as obj)
/mob/living/carbon/updateshock()
/mob/living/carbon/var
/mob/living/carbon/var/image/halbody
/mob/living/carbon/var/image/halimage
/mob/living/carbon/var/obj/halitem
/mob/living/carbon/verb/give()
/mob/living/carbon/verb/mob_sleep()
/mob/living/check_contents_for(A)
/mob/living/electrocute_act(var/shock_damage, var/obj/source, var/siemens_coeff = 1.0)
/mob/living/emp_act(severity)
/mob/living/fire_act()
/mob/living/getBrainLoss()
/mob/living/getBruteLoss()
/mob/living/getCloneLoss()
/mob/living/getFireLoss()
/mob/living/getHalLoss()
/mob/living/getMaxHealth()
/mob/living/getOxyLoss()
/mob/living/getToxLoss()
/mob/living/get_contents(var/obj/item/weapon/storage/Storage = null)
/mob/living/get_organ_target()
/mob/living/getarmor(var/def_zone, var/type)
/mob/living/handle_fire()
/mob/living/heal_organ_damage(var/brute, var/burn)
/mob/living/heal_overall_damage(var/brute, var/burn)
/mob/living/hitby(atom/movable/AM as mob|obj,var/speed = 5)
/mob/living/hivecheck()
/mob/living/near_wall(var/direction,var/distance=1)
/mob/living/rejuvenate()
/mob/living/restore_all_organs()
/mob/living/revive()
/mob/living/robot_talk(var/message)
/mob/living/run_armor_check(var/def_zone = null, var/attack_flag = "melee", var/absorb_text = null, var/soften_text = null)
/mob/living/say(var/message)
/mob/living/setBrainLoss(var/amount)
/mob/living/setCloneLoss(var/amount)
/mob/living/setHalLoss(var/amount)
/mob/living/setMaxHealth(var/newMaxHealth)
/mob/living/setOxyLoss(var/amount)
/mob/living/setToxLoss(var/amount)
/mob/living/set_m_intent(var/intent)
/mob/living/silicon
/mob/living/silicon/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/silicon/IsAdvancedToolUser()
/mob/living/silicon/Login()
/mob/living/silicon/Stat()
/mob/living/silicon/ai
/mob/living/silicon/ai/AltClickOn(var/atom/A)
/mob/living/silicon/ai/ClickOn(var/atom/A, params)
/mob/living/silicon/ai/CtrlClickOn(var/atom/A)
/mob/living/silicon/ai/DblClickOn(var/atom/A, params)
/mob/living/silicon/ai/Destroy()
/mob/living/silicon/ai/IsVocal()
/mob/living/silicon/ai/Life()
/mob/living/silicon/ai/Login()
/mob/living/silicon/ai/Logout()
/mob/living/silicon/ai/New()
/mob/living/silicon/ai/New(loc, var/datum/ai_laws/L, var/obj/item/device/mmi/B, var/safety = 0)
/mob/living/silicon/ai/RangedAttack(atom/A)
/mob/living/silicon/ai/ShiftClickOn(var/atom/A)
/mob/living/silicon/ai/Topic(href, href_list)
/mob/living/silicon/ai/UnarmedAttack(atom/A)
/mob/living/silicon/ai/add_inherent_law(var/law)
/mob/living/silicon/ai/add_ion_law(var/law)
/mob/living/silicon/ai/add_supplied_law(var/number, var/law)
/mob/living/silicon/ai/ai_actual_track(mob/living/target as mob)
/mob/living/silicon/ai/ai_alerts()
/mob/living/silicon/ai/ai_call_shuttle()
/mob/living/silicon/ai/ai_camera_list(var/camera in get_camera_list())
/mob/living/silicon/ai/ai_camera_track(var/target_name in trackable_mobs())
/mob/living/silicon/ai/ai_cancel_call()
/mob/living/silicon/ai/ai_hologram_change()
/mob/living/silicon/ai/ai_network_change()
/mob/living/silicon/ai/ai_roster()
/mob/living/silicon/ai/ai_statuschange()
/mob/living/silicon/ai/attack_ai(var/mob/user as mob)
/mob/living/silicon/ai/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/silicon/ai/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/silicon/ai/attackby(obj/item/weapon/W as obj, mob/user as mob)
/mob/living/silicon/ai/blackout()
/mob/living/silicon/ai/blob_act()
/mob/living/silicon/ai/bullet_act(var/obj/item/projectile/Proj)
/mob/living/silicon/ai/cancelAlarm(var/class, area/A as area, obj/origin)
/mob/living/silicon/ai/cancel_camera()
/mob/living/silicon/ai/check_eye(var/mob/user as mob)
/mob/living/silicon/ai/choose_modules()
/mob/living/silicon/ai/clear_inherent_laws()
/mob/living/silicon/ai/clear_ion_laws()
/mob/living/silicon/ai/clear_supplied_laws()
/mob/living/silicon/ai/corereturn()
/mob/living/silicon/ai/death(gibbed)
/mob/living/silicon/ai/disable_rcd()
/mob/living/silicon/ai/emp_act(severity)
/mob/living/silicon/ai/ex_act(severity)
/mob/living/silicon/ai/examine()
/mob/living/silicon/ai/fireproof_core()
/mob/living/silicon/ai/get_camera_list()
/mob/living/silicon/ai/holopad_talk(var/message)
/mob/living/silicon/ai/interhack()
/mob/living/silicon/ai/laws_sanity_check()
/mob/living/silicon/ai/lightNearbyCamera()
/mob/living/silicon/ai/meteorhit(obj/O as obj)
/mob/living/silicon/ai/mind_initialize()
/mob/living/silicon/ai/open_nearest_door(mob/living/target as mob)
/mob/living/silicon/ai/overload_machine(obj/machinery/M as obj in world)
/mob/living/silicon/ai/place_transformer()
/mob/living/silicon/ai/proc/IsVocal()
/mob/living/silicon/ai/reset_view(atom/A)
/mob/living/silicon/ai/restrained()
/mob/living/silicon/ai/say(var/message)
/mob/living/silicon/ai/say_quote(var/text)
/mob/living/silicon/ai/say_understands(var/other)
/mob/living/silicon/ai/set_zeroth_law(var/law, var/law_borg)
/mob/living/silicon/ai/show_laws(var/everyone = 0)
/mob/living/silicon/ai/show_laws_verb()
/mob/living/silicon/ai/show_malf_ai()
/mob/living/silicon/ai/statelaws()
/mob/living/silicon/ai/switchCamera(var/obj/machinery/camera/C)
/mob/living/silicon/ai/toggle_camera_light()
/mob/living/silicon/ai/trackable_mobs()
/mob/living/silicon/ai/triggerAlarm(var/class, area/A, var/O, var/alarmsource)
/mob/living/silicon/ai/update_canmove()
/mob/living/silicon/ai/updatehealth()
/mob/living/silicon/ai/upgrade_turrets()
/mob/living/silicon/ai/verb/announcement()
/mob/living/silicon/ai/verb/announcement_help()
/mob/living/silicon/ai/verb/checklaws()
/mob/living/silicon/ai/verb/core()
/mob/living/silicon/ai/verb/pick_icon()
/mob/living/silicon/ai/verb/suicide()
/mob/living/silicon/ai/verb/toggle_acceleration()
/mob/living/silicon/ai/verb/toggle_anchor()
/mob/living/silicon/ai/view_core()
/mob/living/silicon/airflow_stun()
/mob/living/silicon/apply_effect(var/effect = 0,var/effecttype = "stun", var/blocked = 0)
/mob/living/silicon/bullet_act(var/obj/item/projectile/Proj)
/mob/living/silicon/cancelAlarm()
/mob/living/silicon/check_airflow_movable()
/mob/living/silicon/damage_mob(var/brute = 0, var/fire = 0, var/tox = 0)
/mob/living/silicon/decoy
/mob/living/silicon/decoy/Life()
/mob/living/silicon/decoy/New()
/mob/living/silicon/decoy/death(gibbed)
/mob/living/silicon/decoy/updatehealth()
/mob/living/silicon/drop_item()
/mob/living/silicon/dust()
/mob/living/silicon/emp_act(severity)
/mob/living/silicon/gib()
/mob/living/silicon/make_laws()
/mob/living/silicon/pai
/mob/living/silicon/pai/CheckDNA(var/mob/M, var/mob/living/silicon/pai/P)
/mob/living/silicon/pai/Life()
/mob/living/silicon/pai/Login()
/mob/living/silicon/pai/New(var/obj/item/device/paicard)
/mob/living/silicon/pai/RoundHealth(health)
/mob/living/silicon/pai/Stat()
/mob/living/silicon/pai/Topic(href, href_list)
/mob/living/silicon/pai/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/silicon/pai/blob_act()
/mob/living/silicon/pai/cancel_camera()
/mob/living/silicon/pai/check_eye(var/mob/user as mob)
/mob/living/silicon/pai/death(gibbed)
/mob/living/silicon/pai/directives()
/mob/living/silicon/pai/downloadSoftware()
/mob/living/silicon/pai/emp_act(severity)
/mob/living/silicon/pai/ex_act(severity)
/mob/living/silicon/pai/examine()
/mob/living/silicon/pai/facialRecognition()
/mob/living/silicon/pai/hackloop()
/mob/living/silicon/pai/medicalAnalysis()
/mob/living/silicon/pai/medicalHUD()
/mob/living/silicon/pai/meteorhit(obj/O as obj)
/mob/living/silicon/pai/mind_initialize()
/mob/living/silicon/pai/pdamessage()
/mob/living/silicon/pai/regular_hud_updates()
/mob/living/silicon/pai/restrained()
/mob/living/silicon/pai/say(var/msg)
/mob/living/silicon/pai/securityHUD()
/mob/living/silicon/pai/show_silenced()
/mob/living/silicon/pai/softwareAtmo()
/mob/living/silicon/pai/softwareCamera()
/mob/living/silicon/pai/softwareDoor()
/mob/living/silicon/pai/softwareManifest()
/mob/living/silicon/pai/softwareMedicalRecord()
/mob/living/silicon/pai/softwareMenu()
/mob/living/silicon/pai/softwareRadio()
/mob/living/silicon/pai/softwareSecurityRecord()
/mob/living/silicon/pai/softwareSignal()
/mob/living/silicon/pai/softwareTranslator()
/mob/living/silicon/pai/switchCamera(var/obj/machinery/camera/C)
/mob/living/silicon/pai/updatehealth()
/mob/living/silicon/pai/verb/paiInterface()
/mob/living/silicon/pai/verb/suicide()
/mob/living/silicon/queueAlarm(var/message, var/type, var/incoming = 1)
/mob/living/silicon/robot
/mob/living/silicon/robot/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/silicon/robot/ClickOn(var/atom/A, var/params)
/mob/living/silicon/robot/Destroy()
/mob/living/silicon/robot/Life()
/mob/living/silicon/robot/Login()
/mob/living/silicon/robot/MiddleClickOn(var/atom/A)
/mob/living/silicon/robot/Move()
/mob/living/silicon/robot/Move(a, b, flag)
/mob/living/silicon/robot/New(loc,var/syndie = 0,var/unfinished = 0, var/alien = 0)
/mob/living/silicon/robot/Process_Spacemove()
/mob/living/silicon/robot/RangedAttack(atom/A)
/mob/living/silicon/robot/ResetSecurityCodes()
/mob/living/silicon/robot/SetLockdown(var/state = 1)
/mob/living/silicon/robot/Stat()
/mob/living/silicon/robot/Topic(href, href_list)
/mob/living/silicon/robot/UnarmedAttack(atom/A)
/mob/living/silicon/robot/UnlinkSelf()
/mob/living/silicon/robot/activate_module(var/obj/item/O)
/mob/living/silicon/robot/activated(obj/item/O)
/mob/living/silicon/robot/add_inherent_law(var/law)
/mob/living/silicon/robot/add_ion_law(var/law)
/mob/living/silicon/robot/add_supplied_law(var/number, var/law)
/mob/living/silicon/robot/adjustBruteLoss(var/amount)
/mob/living/silicon/robot/adjustFireLoss(var/amount)
/mob/living/silicon/robot/allowed(mob/M)
/mob/living/silicon/robot/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/silicon/robot/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/silicon/robot/attack_hand(mob/user)
/mob/living/silicon/robot/attack_slime(mob/living/carbon/slime/M as mob)
/mob/living/silicon/robot/attackby(obj/item/weapon/W as obj, mob/user as mob)
/mob/living/silicon/robot/blob_act()
/mob/living/silicon/robot/bullet_act(var/obj/item/projectile/Proj)
/mob/living/silicon/robot/cancelAlarm(var/class, area/A as area, obj/origin)
/mob/living/silicon/robot/check_access(obj/item/weapon/card/id/I)
/mob/living/silicon/robot/choose_icon(var/triesleft, var/list/module_sprites)
/mob/living/silicon/robot/clamp_values()
/mob/living/silicon/robot/clear_inherent_laws()
/mob/living/silicon/robot/clear_ion_laws()
/mob/living/silicon/robot/clear_supplied_laws()
/mob/living/silicon/robot/cycle_modules()
/mob/living/silicon/robot/death(gibbed)
/mob/living/silicon/robot/deselect_module(var/module)
/mob/living/silicon/robot/drone
/mob/living/silicon/robot/drone/New()
/mob/living/silicon/robot/drone/Process_Spaceslipping(var/prob_slip)
/mob/living/silicon/robot/drone/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/silicon/robot/drone/attackby(obj/item/weapon/W as obj, mob/user as mob)
/mob/living/silicon/robot/drone/choose_icon()
/mob/living/silicon/robot/drone/death(gibbed)
/mob/living/silicon/robot/drone/full_law_reset()
/mob/living/silicon/robot/drone/getBruteLoss()
/mob/living/silicon/robot/drone/getFireLoss()
/mob/living/silicon/robot/drone/handle_regular_status_updates()
/mob/living/silicon/robot/drone/heal_organ_damage(var/brute, var/burn)
/mob/living/silicon/robot/drone/heal_overall_damage(var/brute, var/burn)
/mob/living/silicon/robot/drone/installed_modules()
/mob/living/silicon/robot/drone/law_resync()
/mob/living/silicon/robot/drone/pick_module()
/mob/living/silicon/robot/drone/question(var/client/C)
/mob/living/silicon/robot/drone/request_player()
/mob/living/silicon/robot/drone/say(var/message)
/mob/living/silicon/robot/drone/show_system_integrity()
/mob/living/silicon/robot/drone/shut_down()
/mob/living/silicon/robot/drone/take_organ_damage(var/brute = 0, var/burn = 0, var/sharp = 0)
/mob/living/silicon/robot/drone/take_overall_damage(var/brute = 0, var/burn = 0, var/sharp = 0, var/used_weapon = null)
/mob/living/silicon/robot/drone/transfer_personality(var/client/player)
/mob/living/silicon/robot/drone/updatehealth()
/mob/living/silicon/robot/drone/updateicon()
/mob/living/silicon/robot/drone/updatename()
/mob/living/silicon/robot/drone/use_power()
/mob/living/silicon/robot/drone/verb/hide()
/mob/living/silicon/robot/drone/verb/set_mail_tag()
/mob/living/silicon/robot/dust()
/mob/living/silicon/robot/emote(var/act,var/m_type=1,var/message = null)
/mob/living/silicon/robot/ex_act(severity)
/mob/living/silicon/robot/examine()
/mob/living/silicon/robot/fire_act()
/mob/living/silicon/robot/getBruteLoss()
/mob/living/silicon/robot/getFireLoss()
/mob/living/silicon/robot/get_active_hand()
/mob/living/silicon/robot/get_armour()
/mob/living/silicon/robot/get_damageable_components()
/mob/living/silicon/robot/get_damaged_components(var/brute, var/burn)
/mob/living/silicon/robot/get_selected_module()
/mob/living/silicon/robot/gib()
/mob/living/silicon/robot/handle_fire()
/mob/living/silicon/robot/handle_regular_hud_updates()
/mob/living/silicon/robot/handle_regular_status_updates()
/mob/living/silicon/robot/heal_organ_damage(var/brute, var/burn)
/mob/living/silicon/robot/heal_overall_damage(var/brute, var/burn)
/mob/living/silicon/robot/initialize_components()
/mob/living/silicon/robot/installed_jetpack()
/mob/living/silicon/robot/installed_modules()
/mob/living/silicon/robot/is_component_functioning(module_name)
/mob/living/silicon/robot/laws_sanity_check()
/mob/living/silicon/robot/lawsync()
/mob/living/silicon/robot/meteorhit(obj/O as obj)
/mob/living/silicon/robot/mind_initialize()
/mob/living/silicon/robot/mode()
/mob/living/silicon/robot/module_active(var/module)
/mob/living/silicon/robot/module_selected(var/module)
/mob/living/silicon/robot/movement_delay()
/mob/living/silicon/robot/pick_module()
/mob/living/silicon/robot/process_killswitch()
/mob/living/silicon/robot/process_locks()
/mob/living/silicon/robot/radio_menu()
/mob/living/silicon/robot/restrained()
/mob/living/silicon/robot/robot_alerts()
/mob/living/silicon/robot/select_module(var/module)
/mob/living/silicon/robot/self_destruct()
/mob/living/silicon/robot/self_diagnosis()
/mob/living/silicon/robot/set_zeroth_law(var/law)
/mob/living/silicon/robot/setup_PDA()
/mob/living/silicon/robot/show_cell_power()
/mob/living/silicon/robot/show_jetpack_pressure()
/mob/living/silicon/robot/show_laws(var/everyone = 0)
/mob/living/silicon/robot/show_malf_ai()
/mob/living/silicon/robot/take_organ_damage(var/brute = 0, var/burn = 0, var/sharp = 0)
/mob/living/silicon/robot/take_overall_damage(var/brute = 0, var/burn = 0, var/sharp = 0, var/used_weapon = null)
/mob/living/silicon/robot/toggle_module(var/module)
/mob/living/silicon/robot/triggerAlarm(var/class, area/A, var/O, var/alarmsource)
/mob/living/silicon/robot/uneq_active()
/mob/living/silicon/robot/uneq_all()
/mob/living/silicon/robot/uneq_module(obj/item/O)
/mob/living/silicon/robot/update_canmove()
/mob/living/silicon/robot/update_fire()
/mob/living/silicon/robot/update_items()
/mob/living/silicon/robot/update_targeted()
/mob/living/silicon/robot/updatefire()
/mob/living/silicon/robot/updatehealth()
/mob/living/silicon/robot/updateicon()
/mob/living/silicon/robot/updatename(var/prefix as text)
/mob/living/silicon/robot/use_power()
/mob/living/silicon/robot/verb/Namepick()
/mob/living/silicon/robot/verb/cmd_robot_alerts()
/mob/living/silicon/robot/verb/cmd_show_laws()
/mob/living/silicon/robot/verb/cmd_station_manifest()
/mob/living/silicon/robot/verb/pose()
/mob/living/silicon/robot/verb/self_diagnosis_verb()
/mob/living/silicon/robot/verb/set_flavor()
/mob/living/silicon/robot/verb/suicide()
/mob/living/silicon/robot/verb/toggle_component()
/mob/living/silicon/robot/verb/unlock_own_cover()
/mob/living/silicon/say(var/message)
/mob/living/silicon/say_quote(var/text)
/mob/living/silicon/show_emergency_shuttle_eta()
/mob/living/silicon/show_laws()
/mob/living/silicon/show_malf_ai()
/mob/living/silicon/show_station_manifest()
/mob/living/silicon/show_station_time()
/mob/living/silicon/show_system_integrity()
/mob/living/silicon/triggerAlarm()
/mob/living/simple_animal
/mob/living/simple_animal/Bumped(AM as mob|obj)
/mob/living/simple_animal/CanAttack(var/atom/the_target)
/mob/living/simple_animal/Die()
/mob/living/simple_animal/Life()
/mob/living/simple_animal/Login()
/mob/living/simple_animal/New()
/mob/living/simple_animal/SA_attackable(target)
/mob/living/simple_animal/Stat()
/mob/living/simple_animal/adjustBruteLoss(damage)
/mob/living/simple_animal/adultslime
/mob/living/simple_animal/adultslime/New()
/mob/living/simple_animal/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/mob/living/simple_animal/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/simple_animal/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/simple_animal/attack_larva(mob/living/carbon/alien/larva/L as mob)
/mob/living/simple_animal/attack_slime(mob/living/carbon/slime/M as mob)
/mob/living/simple_animal/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/bee
/mob/living/simple_animal/bee/Destroy()
/mob/living/simple_animal/bee/Life()
/mob/living/simple_animal/bee/New(loc, var/obj/machinery/apiary/new_parent)
/mob/living/simple_animal/blob_act()
/mob/living/simple_animal/borer
/mob/living/simple_animal/borer/Life()
/mob/living/simple_animal/borer/New(var/by_gamemode=0)
/mob/living/simple_animal/borer/Stat()
/mob/living/simple_animal/borer/borer_speak(var/message)
/mob/living/simple_animal/borer/detatch()
/mob/living/simple_animal/borer/perform_infestation(var/mob/living/carbon/M)
/mob/living/simple_animal/borer/question(var/client/C)
/mob/living/simple_animal/borer/request_player()
/mob/living/simple_animal/borer/say(var/message)
/mob/living/simple_animal/borer/transfer_personality(var/client/candidate)
/mob/living/simple_animal/borer/verb/bond_brain()
/mob/living/simple_animal/borer/verb/borerhide()
/mob/living/simple_animal/borer/verb/dominate_victim()
/mob/living/simple_animal/borer/verb/infest()
/mob/living/simple_animal/borer/verb/release_host()
/mob/living/simple_animal/borer/verb/secrete_chemicals()
/mob/living/simple_animal/borer/verb/ventcrawl()
/mob/living/simple_animal/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/cat
/mob/living/simple_animal/cat/Proc
/mob/living/simple_animal/cat/Runtime
/mob/living/simple_animal/cat/Runtime/Life()
/mob/living/simple_animal/cat/kitten
/mob/living/simple_animal/chick
/mob/living/simple_animal/chick/Life()
/mob/living/simple_animal/chick/New()
/mob/living/simple_animal/chicken
/mob/living/simple_animal/chicken/Die()
/mob/living/simple_animal/chicken/Life()
/mob/living/simple_animal/chicken/New()
/mob/living/simple_animal/chicken/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/construct
/mob/living/simple_animal/construct/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/simple_animal/construct/Die()
/mob/living/simple_animal/construct/New()
/mob/living/simple_animal/construct/armoured
/mob/living/simple_animal/construct/armoured/Life()
/mob/living/simple_animal/construct/armoured/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/construct/armoured/bullet_act(var/obj/item/projectile/P)
/mob/living/simple_animal/construct/armoured/mind_initialize()
/mob/living/simple_animal/construct/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/simple_animal/construct/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/construct/behemoth
/mob/living/simple_animal/construct/behemoth/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/construct/builder
/mob/living/simple_animal/construct/builder/mind_initialize()
/mob/living/simple_animal/construct/examine()
/mob/living/simple_animal/construct/wraith
/mob/living/simple_animal/construct/wraith/mind_initialize()
/mob/living/simple_animal/corgi
/mob/living/simple_animal/corgi/Ian
/mob/living/simple_animal/corgi/Ian/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/simple_animal/corgi/Ian/Life()
/mob/living/simple_animal/corgi/Ian/borgi
/mob/living/simple_animal/corgi/Ian/borgi/Die()
/mob/living/simple_animal/corgi/Ian/borgi/Life()
/mob/living/simple_animal/corgi/Life()
/mob/living/simple_animal/corgi/Lisa
/mob/living/simple_animal/corgi/Lisa/Life()
/mob/living/simple_animal/corgi/Lisa/Topic(href, href_list)
/mob/living/simple_animal/corgi/Topic(href, href_list)
/mob/living/simple_animal/corgi/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/corgi/mind_initialize()
/mob/living/simple_animal/corgi/place_on_head(obj/item/item_to_add)
/mob/living/simple_animal/corgi/puppy
/mob/living/simple_animal/corgi/puppy/Topic(href, href_list)
/mob/living/simple_animal/corgi/regenerate_icons()
/mob/living/simple_animal/corgi/show_inv(mob/user as mob)
/mob/living/simple_animal/cow
/mob/living/simple_animal/cow/Life()
/mob/living/simple_animal/cow/New()
/mob/living/simple_animal/cow/attack_hand(mob/living/carbon/M as mob)
/mob/living/simple_animal/cow/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/crab
/mob/living/simple_animal/crab/Coffee
/mob/living/simple_animal/crab/Life()
/mob/living/simple_animal/emote(var/act,var/m_type=1,var/message = null)
/mob/living/simple_animal/ex_act(severity)
/mob/living/simple_animal/gib()
/mob/living/simple_animal/goose
/mob/living/simple_animal/harvest()
/mob/living/simple_animal/hostile
/mob/living/simple_animal/hostile/Aggro()
/mob/living/simple_animal/hostile/AttackTarget()
/mob/living/simple_animal/hostile/AttackingTarget()
/mob/living/simple_animal/hostile/CanAttack(var/atom/the_target)
/mob/living/simple_animal/hostile/DestroySurroundings()
/mob/living/simple_animal/hostile/Die()
/mob/living/simple_animal/hostile/FindTarget()
/mob/living/simple_animal/hostile/Found(var/atom/A)
/mob/living/simple_animal/hostile/GiveTarget(var/new_target)
/mob/living/simple_animal/hostile/Goto(var/target, var/delay, var/minimum_distance)
/mob/living/simple_animal/hostile/Life()
/mob/living/simple_animal/hostile/ListTargets()
/mob/living/simple_animal/hostile/LoseAggro()
/mob/living/simple_animal/hostile/LoseTarget()
/mob/living/simple_animal/hostile/LostTarget()
/mob/living/simple_animal/hostile/MoveToTarget()
/mob/living/simple_animal/hostile/OpenFire(var/the_target)
/mob/living/simple_animal/hostile/PickTarget(var/list/Targets)
/mob/living/simple_animal/hostile/Shoot(var/target, var/start, var/user, var/bullet = 0)
/mob/living/simple_animal/hostile/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/alien
/mob/living/simple_animal/hostile/alien/Die()
/mob/living/simple_animal/hostile/alien/drone
/mob/living/simple_animal/hostile/alien/queen
/mob/living/simple_animal/hostile/alien/queen/large
/mob/living/simple_animal/hostile/alien/sentinel
/mob/living/simple_animal/hostile/asteroid/
/mob/living/simple_animal/hostile/asteroid/Aggro()
/mob/living/simple_animal/hostile/asteroid/LoseAggro()
/mob/living/simple_animal/hostile/asteroid/basilisk
/mob/living/simple_animal/hostile/asteroid/basilisk/Die()
/mob/living/simple_animal/hostile/asteroid/basilisk/GiveTarget(var/new_target)
/mob/living/simple_animal/hostile/asteroid/basilisk/ex_act(severity)
/mob/living/simple_animal/hostile/asteroid/bullet_act(var/obj/item/projectile/P)
/mob/living/simple_animal/hostile/asteroid/goldgrub
/mob/living/simple_animal/hostile/asteroid/goldgrub/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/goldgrub/Burrow()
/mob/living/simple_animal/hostile/asteroid/goldgrub/Die()
/mob/living/simple_animal/hostile/asteroid/goldgrub/EatOre(var/atom/targeted_ore)
/mob/living/simple_animal/hostile/asteroid/goldgrub/GiveTarget(var/new_target)
/mob/living/simple_animal/hostile/asteroid/goldgrub/Reward()
/mob/living/simple_animal/hostile/asteroid/goldgrub/bullet_act(var/obj/item/projectile/P)
/mob/living/simple_animal/hostile/asteroid/goliath
/mob/living/simple_animal/hostile/asteroid/goliath/Die()
/mob/living/simple_animal/hostile/asteroid/goliath/OpenFire()
/mob/living/simple_animal/hostile/asteroid/goliath/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/asteroid/hitby(atom/movable/AM)
/mob/living/simple_animal/hostile/asteroid/hivelord
/mob/living/simple_animal/hostile/asteroid/hivelord/AttackingTarget()
/mob/living/simple_animal/hostile/asteroid/hivelord/Die()
/mob/living/simple_animal/hostile/asteroid/hivelord/OpenFire(var/the_target)
/mob/living/simple_animal/hostile/asteroid/hivelordbrood
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/Die()
/mob/living/simple_animal/hostile/asteroid/hivelordbrood/New()
/mob/living/simple_animal/hostile/bear
/mob/living/simple_animal/hostile/bear/AttackingTarget()
/mob/living/simple_animal/hostile/bear/FindTarget()
/mob/living/simple_animal/hostile/bear/Hudson
/mob/living/simple_animal/hostile/bear/Life()
/mob/living/simple_animal/hostile/bear/LoseTarget()
/mob/living/simple_animal/hostile/bear/Move()
/mob/living/simple_animal/hostile/bear/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/bear/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/simple_animal/hostile/bear/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/hostile/blobspore
/mob/living/simple_animal/hostile/blobspore/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/mob/living/simple_animal/hostile/blobspore/Destroy()
/mob/living/simple_animal/hostile/blobspore/Die()
/mob/living/simple_animal/hostile/blobspore/Life()
/mob/living/simple_animal/hostile/blobspore/New(loc, var/obj/effect/blob/factory/linked_node)
/mob/living/simple_animal/hostile/blobspore/Zombify(var/mob/living/carbon/human/H)
/mob/living/simple_animal/hostile/blobspore/blob_act()
/mob/living/simple_animal/hostile/blobspore/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/mob/living/simple_animal/hostile/carp
/mob/living/simple_animal/hostile/carp/AttackingTarget()
/mob/living/simple_animal/hostile/carp/FindTarget()
/mob/living/simple_animal/hostile/carp/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/carp/holocarp
/mob/living/simple_animal/hostile/carp/holocarp/Die()
/mob/living/simple_animal/hostile/creature
/mob/living/simple_animal/hostile/diyaab
/mob/living/simple_animal/hostile/faithless
/mob/living/simple_animal/hostile/faithless/AttackingTarget()
/mob/living/simple_animal/hostile/faithless/FindTarget()
/mob/living/simple_animal/hostile/faithless/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/giant_spider
/mob/living/simple_animal/hostile/giant_spider/AttackingTarget()
/mob/living/simple_animal/hostile/giant_spider/Life()
/mob/living/simple_animal/hostile/giant_spider/harvest()
/mob/living/simple_animal/hostile/giant_spider/hunter
/mob/living/simple_animal/hostile/giant_spider/nurse
/mob/living/simple_animal/hostile/giant_spider/nurse/GiveUp(var/C)
/mob/living/simple_animal/hostile/giant_spider/nurse/Life()
/mob/living/simple_animal/hostile/giant_spider/nurse/verb/cocoon()
/mob/living/simple_animal/hostile/giant_spider/nurse/verb/eggs()
/mob/living/simple_animal/hostile/giant_spider/verb/web()
/mob/living/simple_animal/hostile/hivebot
/mob/living/simple_animal/hostile/hivebot/Die()
/mob/living/simple_animal/hostile/hivebot/range
/mob/living/simple_animal/hostile/hivebot/rapid
/mob/living/simple_animal/hostile/hivebot/strong
/mob/living/simple_animal/hostile/hivebot/tele
/mob/living/simple_animal/hostile/hivebot/tele/Life()
/mob/living/simple_animal/hostile/hivebot/tele/New()
/mob/living/simple_animal/hostile/hivebot/tele/warpbots()
/mob/living/simple_animal/hostile/mimic
/mob/living/simple_animal/hostile/mimic/Die()
/mob/living/simple_animal/hostile/mimic/FindTarget()
/mob/living/simple_animal/hostile/mimic/copy
/mob/living/simple_animal/hostile/mimic/copy/AttackingTarget()
/mob/living/simple_animal/hostile/mimic/copy/ChangeOwner(var/mob/owner)
/mob/living/simple_animal/hostile/mimic/copy/CopyObject(var/obj/O, var/mob/living/creator)
/mob/living/simple_animal/hostile/mimic/copy/DestroySurroundings()
/mob/living/simple_animal/hostile/mimic/copy/Die()
/mob/living/simple_animal/hostile/mimic/copy/ListTargets()
/mob/living/simple_animal/hostile/mimic/copy/New(loc, var/obj/copy, var/mob/living/creator)
/mob/living/simple_animal/hostile/mimic/crate
/mob/living/simple_animal/hostile/mimic/crate/AttackingTarget()
/mob/living/simple_animal/hostile/mimic/crate/DestroySurroundings()
/mob/living/simple_animal/hostile/mimic/crate/Die()
/mob/living/simple_animal/hostile/mimic/crate/FindTarget()
/mob/living/simple_animal/hostile/mimic/crate/ListTargets()
/mob/living/simple_animal/hostile/mimic/crate/LoseTarget()
/mob/living/simple_animal/hostile/mimic/crate/LostTarget()
/mob/living/simple_animal/hostile/mimic/crate/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/mimic/crate/initialize()
/mob/living/simple_animal/hostile/mimic/crate/trigger()
/mob/living/simple_animal/hostile/mining_drone/
/mob/living/simple_animal/hostile/mining_drone/AttackingTarget()
/mob/living/simple_animal/hostile/mining_drone/CollectOre()
/mob/living/simple_animal/hostile/mining_drone/Die()
/mob/living/simple_animal/hostile/mining_drone/DropOre()
/mob/living/simple_animal/hostile/mining_drone/New()
/mob/living/simple_animal/hostile/mining_drone/SetCollectBehavior()
/mob/living/simple_animal/hostile/mining_drone/SetOffenseBehavior()
/mob/living/simple_animal/hostile/mining_drone/adjustBruteLoss()
/mob/living/simple_animal/hostile/mining_drone/attack_hand(mob/living/carbon/human/M)
/mob/living/simple_animal/hostile/mining_drone/attackby(obj/item/I as obj, mob/user as mob)
/mob/living/simple_animal/hostile/mushroom
/mob/living/simple_animal/hostile/mushroom/Bruise()
/mob/living/simple_animal/hostile/mushroom/Die()
/mob/living/simple_animal/hostile/mushroom/LevelUp(var/level_gain)
/mob/living/simple_animal/hostile/mushroom/Life()
/mob/living/simple_animal/hostile/mushroom/New()
/mob/living/simple_animal/hostile/mushroom/Recover()
/mob/living/simple_animal/hostile/mushroom/UpdateMushroomCap()
/mob/living/simple_animal/hostile/mushroom/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/mushroom/attack_animal(var/mob/living/L)
/mob/living/simple_animal/hostile/mushroom/attack_hand(mob/living/carbon/human/M as mob)
/mob/living/simple_animal/hostile/mushroom/attackby(obj/item/I as obj, mob/user as mob)
/mob/living/simple_animal/hostile/mushroom/bullet_act()
/mob/living/simple_animal/hostile/mushroom/examine()
/mob/living/simple_animal/hostile/mushroom/harvest()
/mob/living/simple_animal/hostile/mushroom/hitby(atom/movable/AM)
/mob/living/simple_animal/hostile/mushroom/revive()
/mob/living/simple_animal/hostile/panther
/mob/living/simple_animal/hostile/panther/AttackTarget()
/mob/living/simple_animal/hostile/panther/AttackingTarget()
/mob/living/simple_animal/hostile/panther/FindTarget()
/mob/living/simple_animal/hostile/panther/ListTargets()
/mob/living/simple_animal/hostile/pirate
/mob/living/simple_animal/hostile/pirate/Die()
/mob/living/simple_animal/hostile/pirate/ranged
/mob/living/simple_animal/hostile/retaliate
/mob/living/simple_animal/hostile/retaliate/DestroySurroundings()
/mob/living/simple_animal/hostile/retaliate/Found(var/atom/A)
/mob/living/simple_animal/hostile/retaliate/ListTargets()
/mob/living/simple_animal/hostile/retaliate/Retaliate()
/mob/living/simple_animal/hostile/retaliate/adjustBruteLoss(var/damage)
/mob/living/simple_animal/hostile/retaliate/clown
/mob/living/simple_animal/hostile/retaliate/ghost
/mob/living/simple_animal/hostile/retaliate/ghost/Die()
/mob/living/simple_animal/hostile/retaliate/ghost/FindTarget()
/mob/living/simple_animal/hostile/retaliate/ghost/Life()
/mob/living/simple_animal/hostile/retaliate/ghost/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/retaliate/goat
/mob/living/simple_animal/hostile/retaliate/goat/Life()
/mob/living/simple_animal/hostile/retaliate/goat/Move()
/mob/living/simple_animal/hostile/retaliate/goat/New()
/mob/living/simple_animal/hostile/retaliate/goat/Retaliate()
/mob/living/simple_animal/hostile/retaliate/goat/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/hostile/retaliate/malf_drone
/mob/living/simple_animal/hostile/retaliate/malf_drone/Destroy()
/mob/living/simple_animal/hostile/retaliate/malf_drone/Die()
/mob/living/simple_animal/hostile/retaliate/malf_drone/Life()
/mob/living/simple_animal/hostile/retaliate/malf_drone/ListTargets()
/mob/living/simple_animal/hostile/retaliate/malf_drone/New()
/mob/living/simple_animal/hostile/retaliate/malf_drone/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/retaliate/malf_drone/emp_act(severity)
/mob/living/simple_animal/hostile/retaliate/skeleton
/mob/living/simple_animal/hostile/retaliate/skeleton/Die()
/mob/living/simple_animal/hostile/retaliate/zombie
/mob/living/simple_animal/hostile/retaliate/zombie/Die()
/mob/living/simple_animal/hostile/russian
/mob/living/simple_animal/hostile/russian/Die()
/mob/living/simple_animal/hostile/russian/ranged
/mob/living/simple_animal/hostile/samak
/mob/living/simple_animal/hostile/scarybat
/mob/living/simple_animal/hostile/scarybat/AttackingTarget()
/mob/living/simple_animal/hostile/scarybat/FindTarget()
/mob/living/simple_animal/hostile/scarybat/Found(var/atom/A)
/mob/living/simple_animal/hostile/scarybat/New(loc, mob/living/L as mob)
/mob/living/simple_animal/hostile/scarybat/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/shantak
/mob/living/simple_animal/hostile/snake
/mob/living/simple_animal/hostile/snake/AttackTarget()
/mob/living/simple_animal/hostile/snake/AttackingTarget()
/mob/living/simple_animal/hostile/snake/FindTarget()
/mob/living/simple_animal/hostile/snake/ListTargets()
/mob/living/simple_animal/hostile/statue
/mob/living/simple_animal/hostile/statue/AttackingTarget()
/mob/living/simple_animal/hostile/statue/CanAttack(var/atom/the_target)
/mob/living/simple_animal/hostile/statue/DestroySurroundings()
/mob/living/simple_animal/hostile/statue/Die()
/mob/living/simple_animal/hostile/statue/Life()
/mob/living/simple_animal/hostile/statue/Move(var/turf/NewLoc)
/mob/living/simple_animal/hostile/statue/New()
/mob/living/simple_animal/hostile/statue/UnarmedAttack()
/mob/living/simple_animal/hostile/statue/can_be_seen(var/turf/destination)
/mob/living/simple_animal/hostile/statue/face_atom()
/mob/living/simple_animal/hostile/statue/gib(var/animation = 0)
/mob/living/simple_animal/hostile/statue/say()
/mob/living/simple_animal/hostile/syndicate
/mob/living/simple_animal/hostile/syndicate/Die()
/mob/living/simple_animal/hostile/syndicate/melee
/mob/living/simple_animal/hostile/syndicate/melee/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/hostile/syndicate/melee/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/hostile/syndicate/melee/space
/mob/living/simple_animal/hostile/syndicate/melee/space/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/syndicate/ranged
/mob/living/simple_animal/hostile/syndicate/ranged/space
/mob/living/simple_animal/hostile/syndicate/ranged/space/Process_Spacemove(var/check_drift = 0)
/mob/living/simple_animal/hostile/tree
/mob/living/simple_animal/hostile/tree/AttackingTarget()
/mob/living/simple_animal/hostile/tree/Die()
/mob/living/simple_animal/hostile/tree/FindTarget()
/mob/living/simple_animal/hostile/tribesman
/mob/living/simple_animal/hostile/tribesman/FindTarget()
/mob/living/simple_animal/hostile/tribesman/ListTargets()
/mob/living/simple_animal/hostile/tribesman/New()
/mob/living/simple_animal/hostile/tribesman/OpenFire(target_mob)
/mob/living/simple_animal/hostile/viscerator
/mob/living/simple_animal/hostile/viscerator/Die()
/mob/living/simple_animal/lizard
/mob/living/simple_animal/make_babies()
/mob/living/simple_animal/mind_initialize()
/mob/living/simple_animal/mouse
/mob/living/simple_animal/mouse/Crossed(AM as mob|obj)
/mob/living/simple_animal/mouse/Die()
/mob/living/simple_animal/mouse/Life()
/mob/living/simple_animal/mouse/New()
/mob/living/simple_animal/mouse/brown
/mob/living/simple_animal/mouse/brown/Tom
/mob/living/simple_animal/mouse/gray
/mob/living/simple_animal/mouse/splat()
/mob/living/simple_animal/mouse/start_pulling(var/atom/movable/AM)
/mob/living/simple_animal/mouse/verb/ventcrawl()
/mob/living/simple_animal/mouse/white
/mob/living/simple_animal/movement_delay()
/mob/living/simple_animal/parrot
/mob/living/simple_animal/parrot/Die()
/mob/living/simple_animal/parrot/Life()
/mob/living/simple_animal/parrot/New()
/mob/living/simple_animal/parrot/Poly
/mob/living/simple_animal/parrot/Poly/New()
/mob/living/simple_animal/parrot/Stat()
/mob/living/simple_animal/parrot/Topic(href, href_list)
/mob/living/simple_animal/parrot/attack_alien(mob/living/carbon/monkey/M as mob)
/mob/living/simple_animal/parrot/attack_animal(mob/living/simple_animal/M as mob)
/mob/living/simple_animal/parrot/attack_hand(mob/living/carbon/M as mob)
/mob/living/simple_animal/parrot/attack_paw(mob/living/carbon/monkey/M as mob)
/mob/living/simple_animal/parrot/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/parrot/bullet_act(var/obj/item/projectile/Proj)
/mob/living/simple_animal/parrot/drop_held_item(var/drop_gently = 1)
/mob/living/simple_animal/parrot/movement_delay()
/mob/living/simple_animal/parrot/perch_player()
/mob/living/simple_animal/parrot/search_for_item()
/mob/living/simple_animal/parrot/search_for_perch()
/mob/living/simple_animal/parrot/search_for_perch_and_item()
/mob/living/simple_animal/parrot/show_inv(mob/user as mob)
/mob/living/simple_animal/parrot/steal_from_ground()
/mob/living/simple_animal/parrot/steal_from_mob()
/mob/living/simple_animal/parrot/verb/drop_held_item_player()
/mob/living/simple_animal/pig
/mob/living/simple_animal/pony
/mob/living/simple_animal/pony/Life()
/mob/living/simple_animal/pony/applejack
/mob/living/simple_animal/pony/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/pony/clownie
/mob/living/simple_animal/pony/fleur
/mob/living/simple_animal/pony/fluttershy
/mob/living/simple_animal/pony/luna
/mob/living/simple_animal/pony/lyra
/mob/living/simple_animal/pony/mac
/mob/living/simple_animal/pony/pinkie
/mob/living/simple_animal/pony/rainbow
/mob/living/simple_animal/pony/rarity
/mob/living/simple_animal/pony/tia
/mob/living/simple_animal/pony/trixie
/mob/living/simple_animal/pony/twilight
/mob/living/simple_animal/pony/vinyl
/mob/living/simple_animal/pony/whooves
/mob/living/simple_animal/revive()
/mob/living/simple_animal/sculpture
/mob/living/simple_animal/sculpture/Bump(atom/movable/AM as mob, yes)
/mob/living/simple_animal/sculpture/Bumped(atom/movable/AM as mob, yes)
/mob/living/simple_animal/sculpture/Escape()
/mob/living/simple_animal/sculpture/GrabMob(var/mob/living/target)
/mob/living/simple_animal/sculpture/Life()
/mob/living/simple_animal/sculpture/Topic(href, href_list)
/mob/living/simple_animal/sculpture/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/sculpture/ex_act(var/severity)
/mob/living/simple_animal/seal
/mob/living/simple_animal/shade
/mob/living/simple_animal/shade/Life()
/mob/living/simple_animal/shade/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/shade/mind_initialize()
/mob/living/simple_animal/slime
/mob/living/simple_animal/slime/Bump(atom/movable/AM as mob|obj, yes)
/mob/living/simple_animal/slime/adult/Die()
/mob/living/simple_animal/space_worm
/mob/living/simple_animal/space_worm/Attach(var/mob/living/simple_animal/space_worm/attachement)
/mob/living/simple_animal/space_worm/AttemptToEat(var/atom/target)
/mob/living/simple_animal/space_worm/Bump(atom/obstacle)
/mob/living/simple_animal/space_worm/Destroy()
/mob/living/simple_animal/space_worm/Detach(die = 0)
/mob/living/simple_animal/space_worm/Life()
/mob/living/simple_animal/space_worm/Move()
/mob/living/simple_animal/space_worm/ProcessStomach()
/mob/living/simple_animal/space_worm/head
/mob/living/simple_animal/space_worm/head/New(var/location, var/segments = 6)
/mob/living/simple_animal/space_worm/head/update_icon()
/mob/living/simple_animal/space_worm/update_icon()
/mob/living/simple_animal/spiderbot
/mob/living/simple_animal/spiderbot/Destroy()
/mob/living/simple_animal/spiderbot/Die()
/mob/living/simple_animal/spiderbot/New()
/mob/living/simple_animal/spiderbot/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/spiderbot/eject_brain()
/mob/living/simple_animal/spiderbot/examine()
/mob/living/simple_animal/spiderbot/explode()
/mob/living/simple_animal/spiderbot/transfer_personality(var/obj/item/device/mmi/M as obj)
/mob/living/simple_animal/spiderbot/update_icon()
/mob/living/simple_animal/spiderbot/verb/drop_held_item()
/mob/living/simple_animal/spiderbot/verb/get_item()
/mob/living/simple_animal/spiderbot/verb/ventcrawl()
/mob/living/simple_animal/tindalos
/mob/living/simple_animal/tomato
/mob/living/simple_animal/tribble
/mob/living/simple_animal/tribble/Die()
/mob/living/simple_animal/tribble/Life()
/mob/living/simple_animal/tribble/New()
/mob/living/simple_animal/tribble/attack_hand(mob/user as mob)
/mob/living/simple_animal/tribble/attackby(var/obj/item/weapon/O as obj, var/mob/user as mob)
/mob/living/simple_animal/tribble/procreate()
/mob/living/simple_animal/update_fire()
/mob/living/simple_animal/updatehealth()
/mob/living/simple_animal/verb/hide()
/mob/living/simple_animal/vox/armalis/
/mob/living/simple_animal/vox/armalis/Die()
/mob/living/simple_animal/vox/armalis/attackby(var/obj/item/O as obj, var/mob/user as mob)
/mob/living/simple_animal/vox/armalis/mind_initialize()
/mob/living/simple_animal/vox/armalis/regenerate_icons()
/mob/living/simple_animal/vox/armalis/verb/fire_quill(mob/target as mob in oview())
/mob/living/simple_animal/vox/armalis/verb/message_mob()
/mob/living/simple_animal/vox/armalis/verb/shriek()
/mob/living/simple_animal/walrus
/mob/living/simple_animal/yithian
/mob/living/take_organ_damage(var/brute, var/burn)
/mob/living/take_overall_damage(var/brute, var/burn, var/used_weapon = null)
/mob/living/update_fire()
/mob/living/updatehealth()
/mob/living/verb/ghost()
/mob/living/verb/lay_down()
/mob/living/verb/resist()
/mob/living/verb/succumb()
/mob/make_changeling()
/mob/make_into_mask(var/should_gib = 0, var/should_remove_items = 0)
/mob/make_vampire()
/mob/melt()
/mob/mind_initialize()
/mob/movement_delay()
/mob/nations_status()
/mob/new_player
/mob/new_player/AIize()
/mob/new_player/AnnounceArrival(var/mob/living/carbon/human/character, var/rank)
/mob/new_player/AttemptLateSpawn(rank)
/mob/new_player/ClickOn()
/mob/new_player/IsJobAvailable(rank)
/mob/new_player/LateChoices()
/mob/new_player/Login()
/mob/new_player/Logout()
/mob/new_player/Move()
/mob/new_player/New()
/mob/new_player/Stat()
/mob/new_player/Topic(href, href_list[])
/mob/new_player/ViewManifest()
/mob/new_player/close_spawn_windows()
/mob/new_player/create_character()
/mob/new_player/cultist/AttemptLateSpawn(rank)
/mob/new_player/get_gender()
/mob/new_player/get_species()
/mob/new_player/handle_player_polling()
/mob/new_player/handle_privacy_poll()
/mob/new_player/has_admin_rights()
/mob/new_player/is_ready()
/mob/new_player/is_species_whitelisted(datum/species/S)
/mob/new_player/log_text_poll_reply(var/pollid = -1, var/replytext = "")
/mob/new_player/new_player_panel_proc()
/mob/new_player/poll_player(var/pollid = -1)
/mob/new_player/privacy_poll()
/mob/new_player/verb/new_player_panel()
/mob/new_player/vote_on_numval_poll(var/pollid = -1, var/optionid = -1, var/rating = null)
/mob/new_player/vote_on_poll(var/pollid = -1, var/optionid = -1, var/multichoice = 0)
/mob/pipe_eject(var/direction)
/mob/pl_effects()
/mob/playsound_local(var/turf/turf_source, soundin, vol as num, vary, frequency, falloff, surround = 1)
/mob/print_flavor_text()
/mob/proc/abiotic(var/full_body = 0)
/mob/proc/changeling_rapidregen()
/mob/proc/flash_pain()
/mob/pull_damage()
/mob/put_in_active_hand(var/obj/item/W)
/mob/put_in_any_hand_if_possible(obj/item/W as obj, del_on_fail = 0, disable_warning = 1, redraw_mob = 1)
/mob/put_in_hands(obj/item/W)
/mob/put_in_inactive_hand(var/obj/item/W)
/mob/put_in_l_hand(var/obj/item/W)
/mob/put_in_r_hand(var/obj/item/W)
/mob/regenerate_icons()
/mob/removeFromVisibilityNetwork(var/datum/visibility_network/network)
/mob/remove_changeling_powers()
/mob/remove_from_mob(var/obj/O)
/mob/remove_language(var/rem_language)
/mob/remove_vampire_blood(amount = 0)
/mob/remove_vampire_powers()
/mob/rename_self(var/role, var/allow_numbers=0)
/mob/reset_view(atom/A)
/mob/respawn_self()
/mob/restrained()
/mob/ret_grab(obj/effect/list_container/mobl/L as obj, flag)
/mob/rightandwrong(var/summon_type)
/mob/safe_animal(var/MP)
/mob/safe_respawn(var/MP)
/mob/say()
/mob/say_dead(var/message)
/mob/say_quote(var/text,var/datum/language/speaking)
/mob/say_test(var/text)
/mob/say_understands(var/mob/other,var/datum/language/speaking = null)
/mob/scorestats()
/mob/see(message)
/mob/set_machine(var/obj/O)
/mob/show_inv(mob/user as mob)
/mob/show_message(msg, type, alt, alt_type)
/mob/show_viewers(message)
/mob/spellremove(var/mob/M as mob)
/mob/spirit
/mob/spirit/Del()
/mob/spirit/Move()
/mob/spirit/New()
/mob/spirit/Spirit_Move(direct)
/mob/spirit/Topic(href, href_list)
/mob/spirit/follow_cultist(mob/living/target as mob)
/mob/spirit/is_active()
/mob/spirit/mask
/mob/spirit/mask/New()
/mob/spirit/mask/flicker()
/mob/spirit/mask/pick_cultist()
/mob/spirit/mask/set_name()
/mob/spirit/mask/verb/go_to_follower()
/mob/spirit/mask/verb/set_cult_name()
/mob/spirit/mask/verb/set_favor_for_cultist()
/mob/spirit/mask/verb/urge_cult()
/mob/spirit/mask/verb/urge_cultist()
/mob/spirit/setLoc(var/T)
/mob/spirit/verb/toggle_acceleration()
/mob/start_pulling(var/atom/movable/AM)
/mob/sting_can_reach(mob/M as mob, sting_range = 1)
/mob/store_memory(msg as message, popup, sane = 1)
/mob/sync_mind()
/mob/texttospeech(var/text, var/speed, var/pitch, var/accent, var/voice, var/echo)
/mob/throw_item(atom/target)
/mob/u_equip(W as obj)
/mob/unset_machine()
/mob/update_Login_details()
/mob/update_action_buttons()
/mob/update_canmove()
/mob/update_flavor_text()
/mob/update_hud()
/mob/update_icons()
/mob/update_inv_back()
/mob/update_inv_belt()
/mob/update_inv_ears()
/mob/update_inv_glasses()
/mob/update_inv_gloves()
/mob/update_inv_handcuffed()
/mob/update_inv_head()
/mob/update_inv_l_hand()
/mob/update_inv_legcuffed()
/mob/update_inv_pockets()
/mob/update_inv_r_hand()
/mob/update_inv_s_store()
/mob/update_inv_shoes()
/mob/update_inv_w_uniform()
/mob/update_inv_wear_id()
/mob/update_inv_wear_mask()
/mob/update_inv_wear_pda()
/mob/update_inv_wear_suit()
/mob/update_music()
/mob/update_mutations()
/mob/update_targeted()
/mob/vampire_active(required_blood=0, max_stat=0, active_range=1)
/mob/vampire_affected(datum/mind/M)
/mob/vampire_can_reach(mob/M as mob, active_range = 1)
/mob/vampire_power(required_blood=0, max_stat=0)
/mob/var
/mob/var/list/targeted_by
/mob/verb/a_intent_change(input as text)
/mob/verb/add_memory(msg as message)
/mob/verb/button_pressed_F12(var/full = 0 as null)
/mob/verb/cancel_camera()
/mob/verb/check_languages()
/mob/verb/eastface()
/mob/verb/me_verb(message as text)
/mob/verb/memory()
/mob/verb/mode()
/mob/verb/northface()
/mob/verb/observe()
/mob/verb/pray(msg as text)
/mob/verb/respawn()
/mob/verb/say_verb(message as text)
/mob/verb/skincmd(data as text)
/mob/verb/southface()
/mob/verb/spend_karma(var/mob/M in player_list)
/mob/verb/stop_pulling()
/mob/verb/vote()
/mob/verb/westface()
/mob/verb/whisper()
/mob/visible_message(var/message, var/self_message, var/blind_message)
/mob/warn_flavor_changed()
/mob/yank_out_object()
/mobs_in_area(var/area/the_area, var/client_needed=0, var/moblist=mob_list)
/modulus(var/M)
/move_admin_shuttle()
/move_alien_ship()
/move_ferry()
/move_gamma_ship()
/move_labor_shuttle()
/move_mining_shuttle()
/move_research_shuttle()
/msg_admin_attack(var/text)
/n_Interpreter
/n_Interpreter/Add(a, b)
/n_Interpreter/AssignVariable(name, node/expression/value, scope/S=null)
/n_Interpreter/CallProc(name, params[]=null)
/n_Interpreter/CreateGlobalScope()
/n_Interpreter/CreateScope(node/BlockDefinition/B)
/n_Interpreter/Divide(a, b)
/n_Interpreter/Eval(node/expression/exp)
/n_Interpreter/EvalOperator(node/expression/operator/exp)
/n_Interpreter/GetFunction(name)
/n_Interpreter/GetVar(name)
/n_Interpreter/GetVariable(name)
/n_Interpreter/GetVariableScope(name)
/n_Interpreter/HandleError(runtimeError/e)
/n_Interpreter/IsVariableAccessible(name)
/n_Interpreter/Iterate(node/BlockDefinition/block, count)
/n_Interpreter/Load(node/BlockDefinition/GlobalBlock/program)
/n_Interpreter/LogicalXor(a, b)		return (a||b) && !(a&&b)
/n_Interpreter/Modulo(a, b)
/n_Interpreter/Multiply(a, b)
/n_Interpreter/New(node/BlockDefinition/GlobalBlock/program=null)
/n_Interpreter/Power(a, b)
/n_Interpreter/ProcExists(name)
/n_Interpreter/RaiseError(runtimeError/e)
/n_Interpreter/Run()
/n_Interpreter/RunBlock(node/BlockDefinition/Block, scope/scope = null)
/n_Interpreter/RunFunction(node/statement/FunctionCall/stmt)
/n_Interpreter/RunIf(node/statement/IfStatement/stmt)
/n_Interpreter/RunWhile(node/statement/WhileLoop/stmt)
/n_Interpreter/SetProc(name, path, object=null, list/params=null)
/n_Interpreter/SetVar(name, value)
/n_Interpreter/Subtract(a, b)
/n_Interpreter/TCS_Interpreter
/n_Interpreter/TCS_Interpreter/HandleError(runtimeError/e)
/n_Interpreter/VarExists(name)
/n_Interpreter/proc/EvalOperator(node/expression/operator/exp)
/n_Interpreter/var
/n_Interpreter/var/datum/container
/n_Interpreter/var/node
/n_Interpreter/var/node/BlockDefinition/program
/n_Interpreter/var/node/statement/FunctionDefinition/curFunction
/n_Interpreter/var/returnVal
/n_Interpreter/var/scope
/n_Interpreter/var/scope/curScope
/n_Interpreter/var/scope/globalScope
/n_Interpreter/var/stack
/n_Keyword
/n_Keyword/New(inline=0)
/n_Keyword/Parse(n_Parser/parser)
/n_Keyword/nS_Keyword
/n_Keyword/nS_Keyword/New(inline=0)
/n_Keyword/nS_Keyword/kwBreak
/n_Keyword/nS_Keyword/kwBreak/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwContinue
/n_Keyword/nS_Keyword/kwContinue/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwDef
/n_Keyword/nS_Keyword/kwDef/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwElse
/n_Keyword/nS_Keyword/kwElse/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwIf
/n_Keyword/nS_Keyword/kwIf/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwReturn
/n_Keyword/nS_Keyword/kwReturn/Parse(n_Parser/nS_Parser/parser)
/n_Keyword/nS_Keyword/kwWhile
/n_Keyword/nS_Keyword/kwWhile/Parse(n_Parser/nS_Parser/parser)
/n_Parser
/n_Parser/NextToken()
/n_Parser/Parse()
/n_Parser/nS_Parser
/n_Parser/nS_Parser/AddBlock(node/BlockDefinition/B)
/n_Parser/nS_Parser/CheckToken(val, type, err=1, skip=1)
/n_Parser/nS_Parser/EndBlock()
/n_Parser/nS_Parser/EndOfExpression(end[])
/n_Parser/nS_Parser/GetBinaryOperator(O)
/n_Parser/nS_Parser/GetExpression(token/T)
/n_Parser/nS_Parser/GetOperator(O, type=/node/expression/operator, L[])
/n_Parser/nS_Parser/GetUnaryOperator(O)
/n_Parser/nS_Parser/New(tokens[], n_scriptOptions/options)
/n_Parser/nS_Parser/Parse()
/n_Parser/nS_Parser/ParseAssignment()
/n_Parser/nS_Parser/ParseExpression(list/end=list(/token/end), list/ErrChars=list("", "}"))
/n_Parser/nS_Parser/ParseFunctionExpression()
/n_Parser/nS_Parser/ParseFunctionStatement()
/n_Parser/nS_Parser/ParseParamExpression()
/n_Parser/nS_Parser/ParseParenExpression()
/n_Parser/nS_Parser/Precedence(node/expression/operator/top, node/expression/operator/input)
/n_Parser/nS_Parser/Reduce(stack/opr, stack/val)
/n_Parser/nS_Parser/var
/n_Parser/var
/n_Parser/var/list
/n_Parser/var/node/BlockDefinition
/n_Parser/var/node/BlockDefinition/curBlock
/n_Parser/var/stack
/n_Parser/var/token
/n_Parser/var/token/curToken
/n_Scanner
/n_Scanner/LoadCode(c)
/n_Scanner/LoadCodeFromFile(f)
/n_Scanner/Scan()
/n_Scanner/nS_Scanner
/n_Scanner/nS_Scanner/New(code, n_scriptOptions/nS_Options/options)
/n_Scanner/nS_Scanner/ReadComment()
/n_Scanner/nS_Scanner/ReadNumber()
/n_Scanner/nS_Scanner/ReadString(start)
/n_Scanner/nS_Scanner/ReadSymbol()
/n_Scanner/nS_Scanner/ReadWord()
/n_Scanner/nS_Scanner/Scan()
/n_Scanner/nS_Scanner/var
/n_Scanner/nS_Scanner/var/list
/n_Scanner/nS_Scanner/var/n_scriptOptions/nS_Options/options
/n_Scanner/var
/n_Scanner/var/code
/n_Scanner/var/list
/n_abs(var/num)
/n_ceil(var/num)
/n_clamp(var/num, var/min=-1, var/max=1)
/n_floor(var/num)
/n_inrange(var/num, var/min=-1, var/max=1)
/n_list()
/n_listadd()
/n_listcopy(var/list/L, var/start, var/end)
/n_listcut(var/list/L, var/start, var/end)
/n_listinsert(var/list/L, var/index, var/element)
/n_listpos(var/list/L, var/pos, var/value)
/n_listremove()
/n_listswap(var/list/L, var/firstindex, var/secondindex)
/n_lower(var/string)
/n_num2str(var/num)
/n_pick()
/n_repeat(var/string, var/amount)
/n_reverse(var/string)
/n_round(var/num)
/n_scriptOptions
/n_scriptOptions/CanStartID(char)
/n_scriptOptions/IsDigit(char)
/n_scriptOptions/IsValidID(id)
/n_scriptOptions/IsValidIDChar(char)
/n_scriptOptions/nS_Options
/n_scriptOptions/nS_Options/New()
/n_scriptOptions/nS_Options/var
/n_scriptOptions/nS_Options/var/list
/n_sqrt(var/num)
/n_str2num(var/string)
/n_upper(var/string)
/near_camera(var/mob/living/M)
/near_range_camera(var/mob/M)
/ninjaspeak(n)
/node
/node/BlockDefinition
/node/BlockDefinition/FunctionBlock
/node/BlockDefinition/GlobalBlock
/node/BlockDefinition/GlobalBlock/New()
/node/BlockDefinition/SetVar(name, value)
/node/ToString()
/node/expression
/node/expression/FunctionCall
/node/expression/FunctionCall/var
/node/expression/FunctionCall/var/func_name
/node/expression/FunctionCall/var/node/identifier/object
/node/expression/operator
/node/expression/operator/New()
/node/expression/operator/ToString()
/node/expression/operator/binary
/node/expression/operator/binary/Add
/node/expression/operator/binary/BitwiseAnd
/node/expression/operator/binary/BitwiseOr
/node/expression/operator/binary/BitwiseXor
/node/expression/operator/binary/Divide
/node/expression/operator/binary/Equal
/node/expression/operator/binary/Greater
/node/expression/operator/binary/GreaterOrEqual
/node/expression/operator/binary/Less
/node/expression/operator/binary/LessOrEqual
/node/expression/operator/binary/LogicalAnd
/node/expression/operator/binary/LogicalOr
/node/expression/operator/binary/LogicalXor
/node/expression/operator/binary/Modulo
/node/expression/operator/binary/Multiply
/node/expression/operator/binary/NotEqual
/node/expression/operator/binary/Power
/node/expression/operator/binary/Subtract
/node/expression/operator/unary
/node/expression/operator/unary/BitwiseNot
/node/expression/operator/unary/LogicalNot
/node/expression/operator/unary/Minus
/node/expression/operator/unary/New(node/expression/exp)
/node/expression/operator/unary/group
/node/expression/operator/var
/node/expression/operator/var/node/expression/exp
/node/expression/operator/var/tmp
/node/expression/operator/var/tmp/name
/node/expression/operator/var/tmp/precedence
/node/expression/value/literal
/node/expression/value/literal/New(value)
/node/expression/value/literal/ToString()
/node/expression/value/literal/var
/node/expression/value/literal/var/value
/node/expression/value/reference
/node/expression/value/reference/New(value)
/node/expression/value/reference/ToString()
/node/expression/value/reference/var
/node/expression/value/reference/var/datum/value
/node/expression/value/variable
/node/expression/value/variable/New(ident)
/node/expression/value/variable/ToString()
/node/expression/value/variable/var
/node/expression/value/variable/var/node
/node/expression/value/variable/var/node/identifier
/node/expression/value/variable/var/node/identifier/id
/node/expression/value/variable/var/node/object
/node/identifier
/node/identifier/New(id)
/node/identifier/ToString()
/node/identifier/var
/node/identifier/var/id_name
/node/statement
/node/statement/BreakStatement
/node/statement/ContinueStatement
/node/statement/ForLoop
/node/statement/ForLoop/var
/node/statement/ForLoop/var/node
/node/statement/ForLoop/var/node/BlockDefinition/block
/node/statement/ForLoop/var/node/expression/increment
/node/statement/ForLoop/var/node/expression/init
/node/statement/ForLoop/var/node/expression/test
/node/statement/FunctionCall
/node/statement/FunctionCall/var
/node/statement/FunctionCall/var/func_name
/node/statement/FunctionCall/var/node/identifier/object
/node/statement/FunctionDefinition
/node/statement/FunctionDefinition/var
/node/statement/FunctionDefinition/var/func_name
/node/statement/FunctionDefinition/var/node/BlockDefinition/FunctionBlock/block
/node/statement/IfStatement
/node/statement/IfStatement/var
/node/statement/IfStatement/var/node
/node/statement/IfStatement/var/node/BlockDefinition
/node/statement/IfStatement/var/node/BlockDefinition/block
/node/statement/IfStatement/var/node/BlockDefinition/else_block
/node/statement/IfStatement/var/node/expression/cond
/node/statement/ReturnStatement
/node/statement/ReturnStatement/var
/node/statement/ReturnStatement/var/node/expression/value
/node/statement/VariableAssignment
/node/statement/VariableAssignment/var
/node/statement/VariableAssignment/var/node
/node/statement/VariableAssignment/var/node/expression/value
/node/statement/VariableAssignment/var/node/identifier
/node/statement/VariableAssignment/var/node/identifier/object
/node/statement/VariableAssignment/var/node/identifier/var_name
/node/statement/VariableDeclaration
/node/statement/VariableDeclaration/var
/node/statement/VariableDeclaration/var/node
/node/statement/VariableDeclaration/var/node/identifier
/node/statement/VariableDeclaration/var/node/identifier/object
/node/statement/VariableDeclaration/var/node/identifier/var_name
/node/statement/WhileLoop
/node/statement/WhileLoop/var
/node/statement/WhileLoop/var/node
/node/statement/WhileLoop/var/node/BlockDefinition/block
/node/statement/WhileLoop/var/node/expression/cond
/notes_add(var/key, var/note, var/mob/usr)
/notes_del(var/key, var/index)
/num2dir(direction)
/num2hex(num, placeholder)
/num2seclevel(var/num)
/num2septext(var/theNum, var/sigFig = 7,var/sep=",")
/number_active_with_role(role)
/obj
/obj/Destroy()
/obj/GetJobName()
/obj/GetJobRealName()
/obj/IsAssemblyHolder()
/obj/IsSpecialAssembly()
/obj/SkinCmd(mob/user as mob, var/data as text)
/obj/airflow_hit(atom/A)
/obj/allowed(mob/M)
/obj/alter_health()
/obj/assume_air(datum/gas_mixture/giver)
/obj/attack_tk(mob/user)
/obj/check_access(obj/item/I)
/obj/check_access_list(var/list/L)
/obj/crate/fireworks
/obj/crate/fireworks/New()
/obj/cult_viewpoint
/obj/cult_viewpoint/Del()
/obj/cult_viewpoint/New(var/mob/target)
/obj/cult_viewpoint/active_mask()
/obj/cult_viewpoint/become_mask()
/obj/cult_viewpoint/can_see()
/obj/cult_viewpoint/can_use()
/obj/cult_viewpoint/get_cult_name()
/obj/cult_viewpoint/get_display_name()
/obj/cult_viewpoint/handle_missing_mask()
/obj/cult_viewpoint/mask_has_been_found()
/obj/cult_viewpoint/mask_is_missing()
/obj/cult_viewpoint/set_cult_name(var/newName)
/obj/cult_viewpoint/set_favor(var/newFavor)
/obj/cult_viewpoint/set_urge(var/newUrge)
/obj/cult_viewpoint/verb/check_favor()
/obj/cult_viewpoint/verb/check_urge()
/obj/cult_viewpoint/verb/pray_to_mask()
/obj/cult_viewpoint/verb/reach_out()
/obj/effect/Del()
/obj/effect/New()
/obj/effect/accelerated_particle
/obj/effect/accelerated_particle/Bump(atom/A)
/obj/effect/accelerated_particle/Bumped(atom/A)
/obj/effect/accelerated_particle/New(loc, dir = 2)
/obj/effect/accelerated_particle/ex_act(severity)
/obj/effect/accelerated_particle/move(var/lag)
/obj/effect/accelerated_particle/strong
/obj/effect/accelerated_particle/toxmob(var/mob/living/M)
/obj/effect/accelerated_particle/weak
/obj/effect/alien
/obj/effect/alien/acid
/obj/effect/alien/acid/New(loc, target)
/obj/effect/alien/acid/tick()
/obj/effect/alien/egg
/obj/effect/alien/egg/Burst(var/kill = 1)
/obj/effect/alien/egg/GetFacehugger()
/obj/effect/alien/egg/Grow()
/obj/effect/alien/egg/HasProximity(atom/movable/AM as mob|obj)
/obj/effect/alien/egg/New()
/obj/effect/alien/egg/attack_hand(user as mob)
/obj/effect/alien/egg/attack_paw(user as mob)
/obj/effect/alien/egg/attackby(var/obj/item/weapon/W, var/mob/user)
/obj/effect/alien/egg/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/alien/egg/healthcheck()
/obj/effect/alien/egg/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/alien/resin
/obj/effect/alien/resin/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/effect/alien/resin/Destroy()
/obj/effect/alien/resin/New()
/obj/effect/alien/resin/attack_alien()
/obj/effect/alien/resin/attack_hand()
/obj/effect/alien/resin/attack_paw()
/obj/effect/alien/resin/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/alien/resin/blob_act()
/obj/effect/alien/resin/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/alien/resin/ex_act(severity)
/obj/effect/alien/resin/healthcheck()
/obj/effect/alien/resin/hitby(AM as mob|obj)
/obj/effect/alien/resin/membrane
/obj/effect/alien/resin/meteorhit()
/obj/effect/alien/resin/wall
/obj/effect/alien/weeds
/obj/effect/alien/weeds/Destroy()
/obj/effect/alien/weeds/Life()
/obj/effect/alien/weeds/New(pos, var/obj/effect/alien/weeds/node/N)
/obj/effect/alien/weeds/attackby(var/obj/item/weapon/W, var/mob/user)
/obj/effect/alien/weeds/ex_act(severity)
/obj/effect/alien/weeds/fire_act(null, temperature, volume)
/obj/effect/alien/weeds/healthcheck()
/obj/effect/alien/weeds/node
/obj/effect/alien/weeds/node/Destroy()
/obj/effect/alien/weeds/node/New()
/obj/effect/alien/weeds/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/anomaly
/obj/effect/anomaly/New()
/obj/effect/anomaly/anomalyEffect()
/obj/effect/anomaly/anomalyNeutralize()
/obj/effect/anomaly/attackby(obj/item/I, mob/user)
/obj/effect/anomaly/bhole
/obj/effect/anomaly/bhole/New()
/obj/effect/anomaly/bhole/affect_coord(var/x, var/y, var/ex_act_force, var/pull_chance, var/turf_removal_chance)
/obj/effect/anomaly/bhole/anomalyEffect()
/obj/effect/anomaly/bhole/grav(var/r, var/ex_act_force, var/pull_chance, var/turf_removal_chance)
/obj/effect/anomaly/bluespace
/obj/effect/anomaly/bluespace/Bumped(atom/A)
/obj/effect/anomaly/bluespace/New()
/obj/effect/anomaly/flux
/obj/effect/anomaly/flux/New()
/obj/effect/anomaly/grav
/obj/effect/anomaly/grav/Bump(mob/A)
/obj/effect/anomaly/grav/Bumped(mob/A)
/obj/effect/anomaly/grav/New()
/obj/effect/anomaly/grav/anomalyEffect()
/obj/effect/anomaly/grav/gravShock(var/mob/A)
/obj/effect/anomaly/pyro
/obj/effect/anomaly/pyro/New()
/obj/effect/anomaly/pyro/anomalyEffect()
/obj/effect/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/beam
/obj/effect/beam/i_beam
/obj/effect/beam/i_beam/Bump()
/obj/effect/beam/i_beam/Bumped()
/obj/effect/beam/i_beam/Crossed(atom/movable/AM as mob|obj)
/obj/effect/beam/i_beam/Destroy()
/obj/effect/beam/i_beam/hit()
/obj/effect/beam/i_beam/process()
/obj/effect/beam/i_beam/vis_spread(v)
/obj/effect/begin
/obj/effect/bgstar
/obj/effect/bgstar/New()
/obj/effect/bgstar/startmove()
/obj/effect/bhole
/obj/effect/bhole/New()
/obj/effect/bhole/affect_coord(var/x, var/y, var/ex_act_force, var/pull_chance, var/turf_removal_chance)
/obj/effect/bhole/controller()
/obj/effect/bhole/grav(var/r, var/ex_act_force, var/pull_chance, var/turf_removal_chance)
/obj/effect/biomass
/obj/effect/biomass/Destroy()
/obj/effect/biomass/New()
/obj/effect/biomass/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/biomass/ex_act(severity)
/obj/effect/biomass/grow()
/obj/effect/biomass/spread()
/obj/effect/biomass/temperature_expose(null, temp, volume)
/obj/effect/biomass_controller
/obj/effect/biomass_controller/Destroy()
/obj/effect/biomass_controller/New()
/obj/effect/biomass_controller/process()
/obj/effect/biomass_controller/spawn_biomass_piece(var/turf/location)
/obj/effect/blob
/obj/effect/blob/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/effect/blob/Delete()
/obj/effect/blob/Destroy()
/obj/effect/blob/Life()
/obj/effect/blob/New(loc)
/obj/effect/blob/Pulse(var/pulse = 0, var/origin_dir = 0)
/obj/effect/blob/attackby(var/obj/item/weapon/W, var/mob/user)
/obj/effect/blob/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/blob/change_to(var/type)
/obj/effect/blob/core
/obj/effect/blob/core/Destroy()
/obj/effect/blob/core/Life()
/obj/effect/blob/core/New(loc, var/h = 200, var/client/new_overmind = null, var/new_rate = 2, var/mob/camera/blob/C = null)
/obj/effect/blob/core/create_overmind(var/client/new_overmind)
/obj/effect/blob/core/run_action()
/obj/effect/blob/core/update_icon()
/obj/effect/blob/ex_act(severity)
/obj/effect/blob/expand(var/turf/T = null, var/prob = 1)
/obj/effect/blob/factory
/obj/effect/blob/factory/run_action()
/obj/effect/blob/factory/update_icon()
/obj/effect/blob/fire_act(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/blob/node
/obj/effect/blob/node/Destroy()
/obj/effect/blob/node/Life()
/obj/effect/blob/node/New(loc, var/h = 100)
/obj/effect/blob/node/run_action()
/obj/effect/blob/node/update_icon()
/obj/effect/blob/normal
/obj/effect/blob/normal/Delete()
/obj/effect/blob/normal/update_icon()
/obj/effect/blob/process()
/obj/effect/blob/resource
/obj/effect/blob/resource/run_action()
/obj/effect/blob/resource/update_icon()
/obj/effect/blob/run_action()
/obj/effect/blob/shield
/obj/effect/blob/shield/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/effect/blob/shield/update_icon()
/obj/effect/bmode
/obj/effect/bmode/builddir
/obj/effect/bmode/builddir/Click()
/obj/effect/bmode/buildhelp
/obj/effect/bmode/buildhelp/Click()
/obj/effect/bmode/buildholder
/obj/effect/bmode/buildmode
/obj/effect/bmode/buildmode/Click(location, control, params)
/obj/effect/bmode/buildquit
/obj/effect/bmode/buildquit/Click()
/obj/effect/bump_teleporter
/obj/effect/bump_teleporter/Bumped(atom/user)
/obj/effect/bump_teleporter/Destroy()
/obj/effect/bump_teleporter/New()
/obj/effect/datacore
/obj/effect/datacore/get_manifest(monochrome, OOC)
/obj/effect/datacore/get_manifest_json()
/obj/effect/datacore/manifest(var/nosleep = 0)
/obj/effect/datacore/manifest_inject(var/mob/living/carbon/human/H)
/obj/effect/datacore/manifest_modify(var/name, var/assignment)
/obj/effect/datacore/proc/get_manifest(monochrome, OOC)
/obj/effect/debugging/camera_range
/obj/effect/debugging/camera_range/New()
/obj/effect/debugging/marker
/obj/effect/debugging/marker/Move()
/obj/effect/decal/cleanable
/obj/effect/decal/cleanable/New()
/obj/effect/decal/cleanable/ash
/obj/effect/decal/cleanable/blood
/obj/effect/decal/cleanable/blood/Crossed(mob/living/carbon/human/perp)
/obj/effect/decal/cleanable/blood/Destroy()
/obj/effect/decal/cleanable/blood/New()
/obj/effect/decal/cleanable/blood/attack_hand(mob/living/carbon/human/user)
/obj/effect/decal/cleanable/blood/drip
/obj/effect/decal/cleanable/blood/drip/green
/obj/effect/decal/cleanable/blood/dry()
/obj/effect/decal/cleanable/blood/gibs
/obj/effect/decal/cleanable/blood/gibs/body
/obj/effect/decal/cleanable/blood/gibs/core
/obj/effect/decal/cleanable/blood/gibs/down
/obj/effect/decal/cleanable/blood/gibs/limb
/obj/effect/decal/cleanable/blood/gibs/pipe_eject(var/direction)
/obj/effect/decal/cleanable/blood/gibs/streak(var/list/directions)
/obj/effect/decal/cleanable/blood/gibs/up
/obj/effect/decal/cleanable/blood/green
/obj/effect/decal/cleanable/blood/green/Crossed(mob/living/carbon/human/perp)
/obj/effect/decal/cleanable/blood/splatter
/obj/effect/decal/cleanable/blood/tracks
/obj/effect/decal/cleanable/blood/tracks/AddTracks(var/mob/living/carbon/human/H, var/list/DNA, var/comingdir, var/goingdir,var/typepath)
/obj/effect/decal/cleanable/blood/tracks/footprints
/obj/effect/decal/cleanable/blood/tracks/footprints/green
/obj/effect/decal/cleanable/blood/tracks/process()
/obj/effect/decal/cleanable/blood/tracks/update_icon()
/obj/effect/decal/cleanable/blood/tracks/wheels
/obj/effect/decal/cleanable/blood/viralsputum
/obj/effect/decal/cleanable/blood/viralsputum/Del()
/obj/effect/decal/cleanable/blood/writing
/obj/effect/decal/cleanable/blood/writing/New()
/obj/effect/decal/cleanable/blood/writing/examine()
/obj/effect/decal/cleanable/blood/xtracks
/obj/effect/decal/cleanable/cobweb
/obj/effect/decal/cleanable/cobweb2
/obj/effect/decal/cleanable/crayon
/obj/effect/decal/cleanable/crayon/New(location,main = "#FFFFFF",shade = "#000000",var/type = "rune")
/obj/effect/decal/cleanable/crayon/examine()
/obj/effect/decal/cleanable/dirt
/obj/effect/decal/cleanable/egg_smudge
/obj/effect/decal/cleanable/flour
/obj/effect/decal/cleanable/generic
/obj/effect/decal/cleanable/greenglow
/obj/effect/decal/cleanable/greenglow/New()
/obj/effect/decal/cleanable/liquid_fuel
/obj/effect/decal/cleanable/liquid_fuel/New(newLoc,amt=1)
/obj/effect/decal/cleanable/liquid_fuel/Spread()
/obj/effect/decal/cleanable/liquid_fuel/flamethrower_fuel
/obj/effect/decal/cleanable/liquid_fuel/flamethrower_fuel/New(newLoc, amt = 1, d = 0)
/obj/effect/decal/cleanable/liquid_fuel/flamethrower_fuel/Spread()
/obj/effect/decal/cleanable/molten_item
/obj/effect/decal/cleanable/mucus
/obj/effect/decal/cleanable/mucus/New()
/obj/effect/decal/cleanable/oil
/obj/effect/decal/cleanable/oil/Destroy()
/obj/effect/decal/cleanable/oil/streak
/obj/effect/decal/cleanable/pie_smudge
/obj/effect/decal/cleanable/poop
/obj/effect/decal/cleanable/random
/obj/effect/decal/cleanable/random/New()
/obj/effect/decal/cleanable/robot_debris
/obj/effect/decal/cleanable/robot_debris/down
/obj/effect/decal/cleanable/robot_debris/gib/pipe_eject(var/direction)
/obj/effect/decal/cleanable/robot_debris/limb
/obj/effect/decal/cleanable/robot_debris/streak(var/list/directions)
/obj/effect/decal/cleanable/robot_debris/up
/obj/effect/decal/cleanable/spiderling_remains
/obj/effect/decal/cleanable/tomato_smudge
/obj/effect/decal/cleanable/vomit
/obj/effect/decal/cleanable/vomit/Destroy()
/obj/effect/decal/cleanable/xenoblood
/obj/effect/decal/cleanable/xenoblood/Destroy()
/obj/effect/decal/cleanable/xenoblood/xgibs
/obj/effect/decal/cleanable/xenoblood/xgibs/body
/obj/effect/decal/cleanable/xenoblood/xgibs/core
/obj/effect/decal/cleanable/xenoblood/xgibs/down
/obj/effect/decal/cleanable/xenoblood/xgibs/limb
/obj/effect/decal/cleanable/xenoblood/xgibs/streak(var/list/directions)
/obj/effect/decal/cleanable/xenoblood/xgibs/up
/obj/effect/decal/cleanable/xenoblood/xsplatter
/obj/effect/decal/mecha_wreckage
/obj/effect/decal/mecha_wreckage/New()
/obj/effect/decal/mecha_wreckage/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/decal/mecha_wreckage/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/decal/mecha_wreckage/durand
/obj/effect/decal/mecha_wreckage/durand/New()
/obj/effect/decal/mecha_wreckage/durand/old
/obj/effect/decal/mecha_wreckage/ex_act(severity)
/obj/effect/decal/mecha_wreckage/gygax
/obj/effect/decal/mecha_wreckage/gygax/New()
/obj/effect/decal/mecha_wreckage/gygax/dark
/obj/effect/decal/mecha_wreckage/honker
/obj/effect/decal/mecha_wreckage/honker/New()
/obj/effect/decal/mecha_wreckage/hoverpod
/obj/effect/decal/mecha_wreckage/marauder
/obj/effect/decal/mecha_wreckage/mauler
/obj/effect/decal/mecha_wreckage/mime
/obj/effect/decal/mecha_wreckage/odysseus
/obj/effect/decal/mecha_wreckage/odysseus/New()
/obj/effect/decal/mecha_wreckage/phazon
/obj/effect/decal/mecha_wreckage/recitence
/obj/effect/decal/mecha_wreckage/ripley
/obj/effect/decal/mecha_wreckage/ripley/New()
/obj/effect/decal/mecha_wreckage/ripley/deathripley
/obj/effect/decal/mecha_wreckage/ripley/firefighter
/obj/effect/decal/mecha_wreckage/ripley/firefighter/New()
/obj/effect/decal/mecha_wreckage/seraph
/obj/effect/decal/point
/obj/effect/decal/point/point()
/obj/effect/decal/remains/human
/obj/effect/decal/remains/robot
/obj/effect/decal/remains/xeno
/obj/effect/decal/snow
/obj/effect/decal/snow/clean/edge
/obj/effect/decal/snow/clean/surround
/obj/effect/decal/snow/sand/edge
/obj/effect/decal/snow/sand/surround
/obj/effect/decal/spraystill
/obj/effect/decal/warning_stripes
/obj/effect/decal/warning_stripes/New()
/obj/effect/delete()
/obj/effect/dummy/chameleon
/obj/effect/dummy/chameleon/attack_hand()
/obj/effect/dummy/chameleon/attackby()
/obj/effect/dummy/chameleon/bullet_act()
/obj/effect/dummy/chameleon/ex_act()
/obj/effect/dummy/chameleon/relaymove(var/mob/user, direction)
/obj/effect/dummy/spell_jaunt
/obj/effect/dummy/spell_jaunt/bullet_act(blah)
/obj/effect/dummy/spell_jaunt/ex_act(blah)
/obj/effect/dummy/spell_jaunt/relaymove(var/mob/user, direction)
/obj/effect/effect
/obj/effect/effect/bad_smoke
/obj/effect/effect/bad_smoke/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/effect/effect/bad_smoke/Crossed(mob/living/carbon/M as mob )
/obj/effect/effect/bad_smoke/Move()
/obj/effect/effect/bad_smoke/New()
/obj/effect/effect/chem_smoke
/obj/effect/effect/chem_smoke/Crossed(mob/living/carbon/M as mob )
/obj/effect/effect/chem_smoke/Move()
/obj/effect/effect/chem_smoke/New()
/obj/effect/effect/foam
/obj/effect/effect/foam/Crossed(var/atom/movable/AM)
/obj/effect/effect/foam/Destroy()
/obj/effect/effect/foam/New(loc, var/ismetal=0)
/obj/effect/effect/foam/process()
/obj/effect/effect/foam/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/effect/harmless_smoke
/obj/effect/effect/harmless_smoke/Move()
/obj/effect/effect/harmless_smoke/New()
/obj/effect/effect/ion_trails
/obj/effect/effect/mustard_gas
/obj/effect/effect/mustard_gas/Crossed(mob/living/carbon/human/R as mob )
/obj/effect/effect/mustard_gas/Move()
/obj/effect/effect/mustard_gas/New()
/obj/effect/effect/sleep_smoke
/obj/effect/effect/sleep_smoke/Crossed(mob/living/carbon/M as mob )
/obj/effect/effect/sleep_smoke/Move()
/obj/effect/effect/sleep_smoke/New()
/obj/effect/effect/smoke
/obj/effect/effect/sparks
/obj/effect/effect/sparks/Destroy()
/obj/effect/effect/sparks/Move()
/obj/effect/effect/sparks/New()
/obj/effect/effect/steam
/obj/effect/effect/water
/obj/effect/effect/water/Bump(atom/A)
/obj/effect/effect/water/Destroy()
/obj/effect/effect/water/Move(turf/newloc)
/obj/effect/effect/water/New()
/obj/effect/energy_field
/obj/effect/energy_field/CanPass(atom/movable/mover, turf/target, height=1.5, air_group = 0)
/obj/effect/energy_field/Strengthen(var/severity)
/obj/effect/energy_field/Stress(var/severity)
/obj/effect/energy_field/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/energy_field/ex_act(var/severity)
/obj/effect/energy_field/meteorhit(obj/effect/meteor/M as obj)
/obj/effect/energy_net
/obj/effect/energy_net/attack_alien()
/obj/effect/energy_net/attack_hand()
/obj/effect/energy_net/attack_paw()
/obj/effect/energy_net/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/energy_net/blob_act()
/obj/effect/energy_net/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/energy_net/ex_act(severity)
/obj/effect/energy_net/healthcheck()
/obj/effect/energy_net/hitby(AM as mob|obj)
/obj/effect/energy_net/meteorhit()
/obj/effect/energy_net/process(var/mob/living/carbon/M as mob)
/obj/effect/equip_e
/obj/effect/equip_e/New()
/obj/effect/equip_e/done()
/obj/effect/equip_e/human
/obj/effect/equip_e/human/done()
/obj/effect/equip_e/human/process()
/obj/effect/equip_e/monkey
/obj/effect/equip_e/monkey/done()
/obj/effect/equip_e/monkey/process()
/obj/effect/equip_e/process()
/obj/effect/expl_particles
/obj/effect/expl_particles/Move()
/obj/effect/expl_particles/New()
/obj/effect/explosion
/obj/effect/explosion/New()
/obj/effect/fake_attacker
/obj/effect/fake_attacker/Crossed(var/mob/M, somenumber)
/obj/effect/fake_attacker/New()
/obj/effect/fake_attacker/attack_loop()
/obj/effect/fake_attacker/attackby(var/obj/item/weapon/P as obj, mob/user as mob)
/obj/effect/fake_attacker/collapse()
/obj/effect/fake_attacker/updateimage()
/obj/effect/foam_dart_dummy
/obj/effect/forcefield/mime
/obj/effect/forcefield/mime/New()
/obj/effect/forcefield/mime/process()
/obj/effect/gateway
/obj/effect/gateway/Bumped(mob/M as mob|obj)
/obj/effect/gateway/Crossed(AM as mob|obj)
/obj/effect/gibspawner
/obj/effect/gibspawner/Gib(atom/location, var/list/viruses = list(), var/datum/dna/MobDNA = null)
/obj/effect/gibspawner/New(location, var/list/viruses, var/datum/dna/MobDNA)
/obj/effect/gibspawner/generic
/obj/effect/gibspawner/generic/New()
/obj/effect/gibspawner/human
/obj/effect/gibspawner/human/New()
/obj/effect/gibspawner/robot
/obj/effect/gibspawner/robot/New()
/obj/effect/gibspawner/xeno
/obj/effect/gibspawner/xeno/New()
/obj/effect/glowshroom
/obj/effect/glowshroom/CalcDir(turf/location = loc)
/obj/effect/glowshroom/CheckEndurance()
/obj/effect/glowshroom/Destroy()
/obj/effect/glowshroom/New()
/obj/effect/glowshroom/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/glowshroom/ex_act(severity)
/obj/effect/glowshroom/process()
/obj/effect/glowshroom/single
/obj/effect/glowshroom/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/golem_rune
/obj/effect/golem_rune/New()
/obj/effect/golem_rune/Topic(href,href_list)
/obj/effect/golem_rune/announce_to_ghosts()
/obj/effect/golem_rune/attack_ghost(var/mob/dead/observer/O)
/obj/effect/golem_rune/attack_hand(mob/living/user as mob)
/obj/effect/golem_rune/check_observer(var/mob/dead/observer/O)
/obj/effect/golem_rune/process()
/obj/effect/golem_rune/volunteer(var/mob/dead/observer/O)
/obj/effect/goliath_tentacle/
/obj/effect/goliath_tentacle/Crossed(AM as mob|obj)
/obj/effect/goliath_tentacle/New()
/obj/effect/goliath_tentacle/Trip()
/obj/effect/goliath_tentacle/original
/obj/effect/goliath_tentacle/original/New()
/obj/effect/immovablerod
/obj/effect/immovablerod/Bump(atom/clong)
/obj/effect/immovablerod/Move()
/obj/effect/immovablerod/New(atom/start, atom/end)
/obj/effect/jungle_tribe_spawn
/obj/effect/jungle_tribe_spawn/Destroy()
/obj/effect/jungle_tribe_spawn/New()
/obj/effect/jungle_tribe_spawn/process()
/obj/effect/landmark
/obj/effect/landmark/Destroy()
/obj/effect/landmark/New()
/obj/effect/landmark/animal_spawner
/obj/effect/landmark/animal_spawner/Destroy()
/obj/effect/landmark/animal_spawner/New()
/obj/effect/landmark/animal_spawner/monkey
/obj/effect/landmark/animal_spawner/panther
/obj/effect/landmark/animal_spawner/parrot
/obj/effect/landmark/animal_spawner/process()
/obj/effect/landmark/animal_spawner/snake
/obj/effect/landmark/corpse
/obj/effect/landmark/corpse/bridgeofficer
/obj/effect/landmark/corpse/chef
/obj/effect/landmark/corpse/clown
/obj/effect/landmark/corpse/clownking
/obj/effect/landmark/corpse/commander
/obj/effect/landmark/corpse/createCorpse()
/obj/effect/landmark/corpse/doctor
/obj/effect/landmark/corpse/engineer
/obj/effect/landmark/corpse/engineer/rig
/obj/effect/landmark/corpse/initialize()
/obj/effect/landmark/corpse/mime
/obj/effect/landmark/corpse/miner
/obj/effect/landmark/corpse/miner/rig
/obj/effect/landmark/corpse/scientist
/obj/effect/landmark/corpse/syndicatecommando
/obj/effect/landmark/corpse/syndicatesoldier
/obj/effect/landmark/costume/New()
/obj/effect/landmark/costume/butler/New()
/obj/effect/landmark/costume/chicken/New()
/obj/effect/landmark/costume/commie/New()
/obj/effect/landmark/costume/cutewitch/New()
/obj/effect/landmark/costume/elpresidente/New()
/obj/effect/landmark/costume/fakewizard/New()
/obj/effect/landmark/costume/gladiator/New()
/obj/effect/landmark/costume/highlander/New()
/obj/effect/landmark/costume/holiday_priest/New()
/obj/effect/landmark/costume/imperium_monk/New()
/obj/effect/landmark/costume/madscientist/New()
/obj/effect/landmark/costume/maid/New()
/obj/effect/landmark/costume/marisawizard/fake/New()
/obj/effect/landmark/costume/nightowl/New()
/obj/effect/landmark/costume/nyangirl/New()
/obj/effect/landmark/costume/pirate/New()
/obj/effect/landmark/costume/plaguedoctor/New()
/obj/effect/landmark/costume/prig/New()
/obj/effect/landmark/costume/scratch/New()
/obj/effect/landmark/costume/sexyclown/New()
/obj/effect/landmark/costume/sexymime/New()
/obj/effect/landmark/costume/waiter/New()
/obj/effect/landmark/door_spawner
/obj/effect/landmark/falsewall_spawner
/obj/effect/landmark/glowshroom_spawn
/obj/effect/landmark/glowshroom_spawn/New()
/obj/effect/landmark/loot_spawn
/obj/effect/landmark/loot_spawn/New()
/obj/effect/landmark/loot_spawn/low
/obj/effect/landmark/mobcorpse
/obj/effect/landmark/mobcorpse/New()
/obj/effect/landmark/mobcorpse/clown
/obj/effect/landmark/mobcorpse/createCorpse()
/obj/effect/landmark/mobcorpse/pirate
/obj/effect/landmark/mobcorpse/pirate/ranged
/obj/effect/landmark/mobcorpse/russian
/obj/effect/landmark/mobcorpse/russian/ranged
/obj/effect/landmark/mobcorpse/syndicatecommando
/obj/effect/landmark/mobcorpse/syndicatesoldier
/obj/effect/landmark/nations
/obj/effect/landmark/nations/New()
/obj/effect/landmark/path_waypoint
/obj/effect/landmark/river_waypoint
/obj/effect/landmark/spacepod/random
/obj/effect/landmark/spacepod/random/New()
/obj/effect/landmark/start
/obj/effect/landmark/start/New()
/obj/effect/landmark/temple
/obj/effect/landmark/temple/New()
/obj/effect/landmark/temple/destination/New()
/obj/effect/landmark/temple/destination/init()
/obj/effect/laser
/obj/effect/laser/Bump()
/obj/effect/laser/Move()
/obj/effect/light_emitter
/obj/effect/liquid
/obj/effect/liquid/Destroy()
/obj/effect/liquid/Move()
/obj/effect/liquid/New()
/obj/effect/liquid/apply_calculated_effect()
/obj/effect/liquid/spread()
/obj/effect/liquid/update_icon2()
/obj/effect/list_container
/obj/effect/list_container/mobl
/obj/effect/manifest
/obj/effect/manifest/New()
/obj/effect/manifest/manifest()
/obj/effect/mark
/obj/effect/meteor
/obj/effect/meteor/Bump(atom/A)
/obj/effect/meteor/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/meteor/big
/obj/effect/meteor/big/Bump(atom/A)
/obj/effect/meteor/big/ex_act(severity)
/obj/effect/meteor/ex_act(severity)
/obj/effect/meteor/small
/obj/effect/mine
/obj/effect/mine/Bumped(mob/M as mob|obj)
/obj/effect/mine/Crossed(AM as mob|obj)
/obj/effect/mine/New()
/obj/effect/mine/dnascramble
/obj/effect/mine/explode(obj)
/obj/effect/mine/kick
/obj/effect/mine/n2o
/obj/effect/mine/plasma
/obj/effect/mine/stun
/obj/effect/mine/triggerkick(obj)
/obj/effect/mine/triggern2o(obj)
/obj/effect/mine/triggerplasma(obj)
/obj/effect/mine/triggerrad(obj)
/obj/effect/mine/triggerstun(obj)
/obj/effect/mist
/obj/effect/overlay
/obj/effect/overlay/beam
/obj/effect/overlay/beam/New()
/obj/effect/overlay/coconut
/obj/effect/overlay/palmtree_l
/obj/effect/overlay/palmtree_r
/obj/effect/portal
/obj/effect/portal/Bumped(mob/M as mob|obj)
/obj/effect/portal/Crossed(AM as mob|obj)
/obj/effect/portal/Destroy()
/obj/effect/portal/New()
/obj/effect/portal/attack_ghost(mob/user as mob)
/obj/effect/portal/teleport(atom/movable/M as mob|obj)
/obj/effect/portal/wormhole
/obj/effect/portal/wormhole/attack_hand(mob/user)
/obj/effect/portal/wormhole/attackby(obj/item/I, mob/user)
/obj/effect/portal/wormhole/jaunt_tunnel
/obj/effect/portal/wormhole/jaunt_tunnel/teleport(atom/movable/M)
/obj/effect/portal/wormhole/teleport(atom/movable/M)
/obj/effect/proc_holder
/obj/effect/proc_holder/spell
/obj/effect/proc_holder/spell/Click()
/obj/effect/proc_holder/spell/New()
/obj/effect/proc_holder/spell/adjust_var(mob/living/target = usr, type, amount)
/obj/effect/proc_holder/spell/after_cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf
/obj/effect/proc_holder/spell/aoe_turf/blindness
/obj/effect/proc_holder/spell/aoe_turf/blindness/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/blood_speech
/obj/effect/proc_holder/spell/aoe_turf/blood_speech/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/boo
/obj/effect/proc_holder/spell/aoe_turf/boo/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/aoe_turf/conjure
/obj/effect/proc_holder/spell/aoe_turf/conjure/carp
/obj/effect/proc_holder/spell/aoe_turf/conjure/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/conjure/construct
/obj/effect/proc_holder/spell/aoe_turf/conjure/construct/lesser
/obj/effect/proc_holder/spell/aoe_turf/conjure/create_talisman
/obj/effect/proc_holder/spell/aoe_turf/conjure/create_talisman/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/conjure/creature
/obj/effect/proc_holder/spell/aoe_turf/conjure/floor
/obj/effect/proc_holder/spell/aoe_turf/conjure/forcewall
/obj/effect/proc_holder/spell/aoe_turf/conjure/lesserforcewall
/obj/effect/proc_holder/spell/aoe_turf/conjure/soulstone
/obj/effect/proc_holder/spell/aoe_turf/conjure/summonEdSwarm
/obj/effect/proc_holder/spell/aoe_turf/conjure/wall
/obj/effect/proc_holder/spell/aoe_turf/conjure/wall/reinforced
/obj/effect/proc_holder/spell/aoe_turf/flicker_lights
/obj/effect/proc_holder/spell/aoe_turf/flicker_lights/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/knock
/obj/effect/proc_holder/spell/aoe_turf/knock/cast(list/targets)
/obj/effect/proc_holder/spell/aoe_turf/shatter_lights
/obj/effect/proc_holder/spell/aoe_turf/shatter_lights/cast(list/targets)
/obj/effect/proc_holder/spell/before_cast(list/targets)
/obj/effect/proc_holder/spell/cast(list/targets)
/obj/effect/proc_holder/spell/cast_check(skipcharge = 0,mob/user = usr)
/obj/effect/proc_holder/spell/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/critfail(list/targets)
/obj/effect/proc_holder/spell/dumbfire
/obj/effect/proc_holder/spell/dumbfire/cast(list/targets, mob/user = usr)
/obj/effect/proc_holder/spell/dumbfire/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/dumbfire/fireball
/obj/effect/proc_holder/spell/invocation(mob/user = usr)
/obj/effect/proc_holder/spell/noclothes
/obj/effect/proc_holder/spell/perform(list/targets, recharge = 1, mob/user = usr)
/obj/effect/proc_holder/spell/revert_cast(mob/user = usr)
/obj/effect/proc_holder/spell/start_recharge()
/obj/effect/proc_holder/spell/targeted
/obj/effect/proc_holder/spell/targeted/area_teleport
/obj/effect/proc_holder/spell/targeted/area_teleport/before_cast(list/targets)
/obj/effect/proc_holder/spell/targeted/area_teleport/cast(list/targets,area/thearea)
/obj/effect/proc_holder/spell/targeted/area_teleport/invocation(area/chosenarea = null)
/obj/effect/proc_holder/spell/targeted/area_teleport/perform(list/targets, recharge = 1)
/obj/effect/proc_holder/spell/targeted/area_teleport/teleport
/obj/effect/proc_holder/spell/targeted/charge
/obj/effect/proc_holder/spell/targeted/charge/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/targeted/cryokinesis
/obj/effect/proc_holder/spell/targeted/cryokinesis/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/eat
/obj/effect/proc_holder/spell/targeted/eat/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/eat/choose_targets(mob/user = usr)
/obj/effect/proc_holder/spell/targeted/eat/doHeal(var/mob/user)
/obj/effect/proc_holder/spell/targeted/emplosion
/obj/effect/proc_holder/spell/targeted/emplosion/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/emplosion/disable_tech
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/ethereal_jaunt/shift
/obj/effect/proc_holder/spell/targeted/explosion
/obj/effect/proc_holder/spell/targeted/explosion/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/explosion/fireball
/obj/effect/proc_holder/spell/targeted/genetic
/obj/effect/proc_holder/spell/targeted/genetic/blind
/obj/effect/proc_holder/spell/targeted/genetic/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/genetic/mutate
/obj/effect/proc_holder/spell/targeted/horsemask
/obj/effect/proc_holder/spell/targeted/horsemask/cast(list/targets, mob/user = usr)
/obj/effect/proc_holder/spell/targeted/hulk
/obj/effect/proc_holder/spell/targeted/hulk/New()
/obj/effect/proc_holder/spell/targeted/hulk/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/immolate
/obj/effect/proc_holder/spell/targeted/immolate/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/inflict_handler
/obj/effect/proc_holder/spell/targeted/inflict_handler/blind
/obj/effect/proc_holder/spell/targeted/inflict_handler/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/inflict_handler/disintegrate
/obj/effect/proc_holder/spell/targeted/inflict_handler/fireball
/obj/effect/proc_holder/spell/targeted/inflict_handler/flesh_to_stone
/obj/effect/proc_holder/spell/targeted/inflict_handler/magic_missile
/obj/effect/proc_holder/spell/targeted/leap
/obj/effect/proc_holder/spell/targeted/leap/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/mind_transfer
/obj/effect/proc_holder/spell/targeted/mind_transfer/cast(list/targets,mob/user = usr)
/obj/effect/proc_holder/spell/targeted/night_vision
/obj/effect/proc_holder/spell/targeted/night_vision/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/polymorph
/obj/effect/proc_holder/spell/targeted/polymorph/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/projectile
/obj/effect/proc_holder/spell/targeted/projectile/cast(list/targets, mob/user = usr)
/obj/effect/proc_holder/spell/targeted/projectile/magic_missile
/obj/effect/proc_holder/spell/targeted/projectile/magic_missile/lesser
/obj/effect/proc_holder/spell/targeted/smoke
/obj/effect/proc_holder/spell/targeted/trigger
/obj/effect/proc_holder/spell/targeted/trigger/Destroy()
/obj/effect/proc_holder/spell/targeted/trigger/New()
/obj/effect/proc_holder/spell/targeted/trigger/blind
/obj/effect/proc_holder/spell/targeted/trigger/cast(list/targets)
/obj/effect/proc_holder/spell/targeted/turf_teleport
/obj/effect/proc_holder/spell/targeted/turf_teleport/blink
/obj/effect/proc_holder/spell/targeted/turf_teleport/cast(list/targets)
/obj/effect/proc_holder/spell/turf/fireball/cast(var/turf/T)
/obj/effect/projection
/obj/effect/rend
/obj/effect/rend/New()
/obj/effect/rend/cow
/obj/effect/rend/cow/New()
/obj/effect/rend/cow/attackby(obj/item/I as obj, mob/user as mob)
/obj/effect/rend/cow/process()
/obj/effect/resonance
/obj/effect/resonance/New()
/obj/effect/rune
/obj/effect/rune/Del()
/obj/effect/rune/New()
/obj/effect/rune/ajourney()
/obj/effect/rune/armor()
/obj/effect/rune/attack_hand(mob/living/user as mob)
/obj/effect/rune/attackby(I as obj, user as mob)
/obj/effect/rune/blind()
/obj/effect/rune/bloodboil()
/obj/effect/rune/burningblood()
/obj/effect/rune/can_see()
/obj/effect/rune/can_use()
/obj/effect/rune/check_icon()
/obj/effect/rune/communicate()
/obj/effect/rune/convert()
/obj/effect/rune/cultsummon()
/obj/effect/rune/deafen()
/obj/effect/rune/drain()
/obj/effect/rune/emp(var/U,var/range_red)
/obj/effect/rune/empRune()
/obj/effect/rune/examine()
/obj/effect/rune/fizzle()
/obj/effect/rune/freedom()
/obj/effect/rune/get_word_string()
/obj/effect/rune/itemport(var/key)
/obj/effect/rune/itemportRune()
/obj/effect/rune/manifest()
/obj/effect/rune/mend()
/obj/effect/rune/obscure(var/rad)
/obj/effect/rune/obscureRune()
/obj/effect/rune/raise()
/obj/effect/rune/revealrunes(var/obj/W as obj)
/obj/effect/rune/revealrunesrune()
/obj/effect/rune/runestun(var/mob/living/T as mob)
/obj/effect/rune/sacrifice()
/obj/effect/rune/seer()
/obj/effect/rune/talisman()
/obj/effect/rune/tearreality()
/obj/effect/rune/teleport(var/key)
/obj/effect/rune/teleportRune()
/obj/effect/rune/tomesummon()
/obj/effect/rune/wall()
/obj/effect/rust_em_field
/obj/effect/rust_em_field/AddEnergy(var/a_energy, var/a_mega_energy, var/a_frequency)
/obj/effect/rust_em_field/AddParticles(var/name, var/quantity = 1)
/obj/effect/rust_em_field/ChangeFieldFrequency(var/new_frequency)
/obj/effect/rust_em_field/ChangeFieldStrength(var/new_strength)
/obj/effect/rust_em_field/Destroy()
/obj/effect/rust_em_field/New()
/obj/effect/rust_em_field/RadiateAll(var/ratio_lost = 1)
/obj/effect/rust_em_field/React()
/obj/effect/rust_em_field/change_size(var/newsize = 1)
/obj/effect/rust_em_field/process()
/obj/effect/rust_particle_catcher
/obj/effect/rust_particle_catcher/AddParticles(var/name, var/quantity = 1)
/obj/effect/rust_particle_catcher/Bumped(atom/AM)
/obj/effect/rust_particle_catcher/SetSize(var/newsize)
/obj/effect/rust_particle_catcher/UpdateSize()
/obj/effect/rust_particle_catcher/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/rust_particle_catcher/process()
/obj/effect/shut_controller
/obj/effect/space_dust
/obj/effect/space_dust/Bump(atom/A)
/obj/effect/space_dust/Bumped(atom/A)
/obj/effect/space_dust/New()
/obj/effect/space_dust/ex_act(severity)
/obj/effect/space_dust/meaty
/obj/effect/space_dust/meaty/Bump(atom/A)
/obj/effect/space_dust/strong
/obj/effect/space_dust/super
/obj/effect/space_dust/weak
/obj/effect/spacevine
/obj/effect/spacevine/Destroy()
/obj/effect/spacevine/New()
/obj/effect/spacevine/attack_hand(mob/user as mob)
/obj/effect/spacevine/attack_paw(mob/user as mob)
/obj/effect/spacevine/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/spacevine/buckle_mob()
/obj/effect/spacevine/ex_act(severity)
/obj/effect/spacevine/grow()
/obj/effect/spacevine/manual_unbuckle(mob/user as mob)
/obj/effect/spacevine/spread()
/obj/effect/spacevine/temperature_expose(null, temp, volume)
/obj/effect/spacevine/unbuckle()
/obj/effect/spacevine_controller
/obj/effect/spacevine_controller/Destroy()
/obj/effect/spacevine_controller/New()
/obj/effect/spacevine_controller/process()
/obj/effect/spacevine_controller/spawn_spacevine_piece(var/turf/location)
/obj/effect/spawner
/obj/effect/spawner/lootdrop
/obj/effect/spawner/lootdrop/initialize()
/obj/effect/spawner/newbomb
/obj/effect/spawner/newbomb/New()
/obj/effect/spawner/newbomb/proximity
/obj/effect/spawner/newbomb/radio
/obj/effect/spawner/newbomb/timer
/obj/effect/spawner/newbomb/timer/syndicate
/obj/effect/speech_bubble
/obj/effect/spider
/obj/effect/spider/attackby(var/obj/item/weapon/W, var/mob/user)
/obj/effect/spider/bullet_act(var/obj/item/projectile/Proj)
/obj/effect/spider/cocoon
/obj/effect/spider/cocoon/Destroy()
/obj/effect/spider/cocoon/New()
/obj/effect/spider/eggcluster
/obj/effect/spider/eggcluster/New()
/obj/effect/spider/eggcluster/process()
/obj/effect/spider/ex_act(severity)
/obj/effect/spider/healthcheck()
/obj/effect/spider/spiderling
/obj/effect/spider/spiderling/Bump(atom/user)
/obj/effect/spider/spiderling/New()
/obj/effect/spider/spiderling/die()
/obj/effect/spider/spiderling/healthcheck()
/obj/effect/spider/spiderling/process()
/obj/effect/spider/stickyweb
/obj/effect/spider/stickyweb/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/effect/spider/stickyweb/New()
/obj/effect/spider/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/effect/spresent
/obj/effect/spresent/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/effect/spresent/relaymove(mob/user as mob)
/obj/effect/starender
/obj/effect/starspawner
/obj/effect/starspawner/West
/obj/effect/starspawner/startspawn()
/obj/effect/step_trigger
/obj/effect/step_trigger/Crossed(H as mob|obj)
/obj/effect/step_trigger/Trigger(var/atom/movable/A)
/obj/effect/step_trigger/message
/obj/effect/step_trigger/message/Trigger(mob/M as mob)
/obj/effect/step_trigger/stopper
/obj/effect/step_trigger/teleport_fancy
/obj/effect/step_trigger/teleport_fancy/Trigger(mob/M as mob)
/obj/effect/step_trigger/teleporter
/obj/effect/step_trigger/teleporter/Trigger(var/atom/movable/A)
/obj/effect/step_trigger/teleporter/random
/obj/effect/step_trigger/teleporter/random/Trigger(var/atom/movable/A)
/obj/effect/step_trigger/thrower
/obj/effect/step_trigger/thrower/Trigger(var/atom/A)
/obj/effect/step_trigger/trap
/obj/effect/step_trigger/trap/New()
/obj/effect/step_trigger/trap/Trigger(var/atom/A)
/obj/effect/step_trigger/trap/fake
/obj/effect/step_trigger/trap/fake/New()
/obj/effect/step_trigger/trap/fifty
/obj/effect/step_trigger/trap/fifty/New()
/obj/effect/stop
/obj/effect/suspension_field
/obj/effect/suspension_field/Destroy()
/obj/effect/syringe_gun_dummy
/obj/effect/syringe_gun_dummy/New()
/obj/effect/tear
/obj/effect/tear/New()
/obj/effect/vaultspawner
/obj/effect/vaultspawner/New(turf/location as turf,lX = minX,uX = maxX,lY = minY,uY = maxY,var/type = null)
/obj/effects/laser
/obj/effects/self_deleting
/obj/effects/self_deleting/New(var/atom/location, var/icon/I, var/duration = 20, var/oname = "something")
/obj/effects/sparkels
/obj/effects/sparkels/Destroy()
/obj/effects/sparkels/Move()
/obj/effects/sparkels/New()
/obj/fire
/obj/fire/Del()
/obj/fire/New(newLoc,fl)
/obj/fire/RemoveFire()
/obj/fire/proc/RemoveFire()
/obj/fire/process()
/obj/get_card_account(var/obj/item/weapon/card/I, var/mob/user=null, var/terminal_name="", var/transaction_purpose="", var/require_pin=0)
/obj/handle_internal_lifeform(mob/lifeform_inside_me, breath_request)
/obj/hear_talk(mob/M as mob, text)
/obj/hide(h)
/obj/interact(mob/user)
/obj/item
/obj/item/Adjacent(var/atom/neighbor, var/recurse = 1)
/obj/item/Destroy()
/obj/item/GetAccess()
/obj/item/GetID()
/obj/item/IsShield()
/obj/item/active_uplink_check(mob/user as mob)
/obj/item/add_blood(mob/living/carbon/human/M as mob)
/obj/item/afterattack(atom/target, mob/user, proximity_flag, click_parameters)
/obj/item/airflow_hit(atom/A)
/obj/item/alarm_frame
/obj/item/alarm_frame/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/alarm_frame/try_build(turf/on_wall)
/obj/item/ammo_box
/obj/item/ammo_box/New()
/obj/item/ammo_box/a12mm
/obj/item/ammo_box/a357
/obj/item/ammo_box/a418
/obj/item/ammo_box/a666
/obj/item/ammo_box/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/ammo_box/c38
/obj/item/ammo_box/c45
/obj/item/ammo_box/c9mm
/obj/item/ammo_box/get_round(var/keep = 0)
/obj/item/ammo_box/give_round(var/obj/item/ammo_casing/r)
/obj/item/ammo_box/magazine/ammo_count()
/obj/item/ammo_box/magazine/internal/cylinder
/obj/item/ammo_box/magazine/internal/cylinder/ammo_count(var/countempties = 1)
/obj/item/ammo_box/magazine/internal/cylinder/dualshot
/obj/item/ammo_box/magazine/internal/cylinder/rev38
/obj/item/ammo_box/magazine/internal/cylinder/rus357
/obj/item/ammo_box/magazine/internal/cylinder/rus357/New()
/obj/item/ammo_box/magazine/internal/shot
/obj/item/ammo_box/magazine/internal/shotcom
/obj/item/ammo_box/magazine/m10mm
/obj/item/ammo_box/magazine/m12mm
/obj/item/ammo_box/magazine/m12mm/update_icon()
/obj/item/ammo_box/magazine/m45
/obj/item/ammo_box/magazine/m50
/obj/item/ammo_box/magazine/m75
/obj/item/ammo_box/magazine/m762
/obj/item/ammo_box/magazine/m762/update_icon()
/obj/item/ammo_box/magazine/m9mm
/obj/item/ammo_box/magazine/msmg9mm
/obj/item/ammo_box/magazine/msmg9mm/update_icon()
/obj/item/ammo_box/magazine/uzim45
/obj/item/ammo_box/magazine/uzim45/update_icon()
/obj/item/ammo_box/shotgun
/obj/item/ammo_box/shotgun/beanbag
/obj/item/ammo_box/shotgun/buck
/obj/item/ammo_box/shotgun/stun
/obj/item/ammo_box/update_icon()
/obj/item/ammo_casing
/obj/item/ammo_casing/New()
/obj/item/ammo_casing/a12mm
/obj/item/ammo_casing/a357
/obj/item/ammo_casing/a418
/obj/item/ammo_casing/a50
/obj/item/ammo_casing/a666
/obj/item/ammo_casing/a75
/obj/item/ammo_casing/a762
/obj/item/ammo_casing/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/ammo_casing/c10mm
/obj/item/ammo_casing/c38
/obj/item/ammo_casing/c45
/obj/item/ammo_casing/c9mm
/obj/item/ammo_casing/energy/kinetic
/obj/item/ammo_casing/rocket
/obj/item/ammo_casing/shotgun
/obj/item/ammo_casing/shotgun/beanbag
/obj/item/ammo_casing/shotgun/birdshot
/obj/item/ammo_casing/shotgun/buck
/obj/item/ammo_casing/shotgun/dart
/obj/item/ammo_casing/shotgun/dart/New()
/obj/item/ammo_casing/shotgun/dart/attackby()
/obj/item/ammo_casing/shotgun/fakebeanbag
/obj/item/ammo_casing/shotgun/incendiary
/obj/item/ammo_casing/shotgun/stunshell
/obj/item/ammo_casing/update_icon()
/obj/item/apc_frame
/obj/item/apc_frame/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/apc_frame/try_build(turf/on_wall)
/obj/item/apiary
/obj/item/ashtray
/obj/item/ashtray/New()
/obj/item/ashtray/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/ashtray/bronze
/obj/item/ashtray/bronze/die()
/obj/item/ashtray/die()
/obj/item/ashtray/glass
/obj/item/ashtray/glass/die()
/obj/item/ashtray/plastic
/obj/item/ashtray/plastic/die()
/obj/item/ashtray/throw_impact(atom/hit_atom)
/obj/item/assembly/shock_kit
/obj/item/assembly/shock_kit/Destroy()
/obj/item/assembly/shock_kit/attack_self(mob/user as mob)
/obj/item/assembly/shock_kit/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/assembly/shock_kit/receive_signal()
/obj/item/asteroid/goliath_hide
/obj/item/asteroid/goliath_hide/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/asteroid/hivelord_core
/obj/item/asteroid/hivelord_core/New()
/obj/item/asteroid/hivelord_core/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/attack(mob/living/M as mob, mob/living/user as mob, def_zone)
/obj/item/attack_ai(mob/user as mob)
/obj/item/attack_alien(mob/user as mob)
/obj/item/attack_hand(mob/user as mob)
/obj/item/attack_paw(mob/user as mob)
/obj/item/attack_self(mob/user)
/obj/item/attack_tk(mob/user)
/obj/item/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/beezeez
/obj/item/beezeez/New()
/obj/item/blob_act()
/obj/item/blueprints
/obj/item/blueprints/Topic(href, href_list)
/obj/item/blueprints/attack_self(mob/M as mob)
/obj/item/blueprints/check_tile_is_border(var/turf/T2,var/dir)
/obj/item/blueprints/create_area()
/obj/item/blueprints/detect_room(var/turf/first)
/obj/item/blueprints/edit_area()
/obj/item/blueprints/get_area()
/obj/item/blueprints/get_area_type(var/area/A = get_area())
/obj/item/blueprints/interact()
/obj/item/blueprints/move_turfs_to_area(var/list/turf/turfs, var/area/A)
/obj/item/blueprints/set_area_machinery_title(var/area/A,var/title,var/oldtitle)
/obj/item/bodybag
/obj/item/bodybag/attack_self(mob/user)
/obj/item/bodybag/cryobag
/obj/item/bodybag/cryobag/attack_self(mob/user)
/obj/item/borg/combat/mobility
/obj/item/borg/combat/shield
/obj/item/borg/combat/shield/verb/set_shield_level()
/obj/item/borg/overdrive
/obj/item/borg/sight
/obj/item/borg/sight/hud
/obj/item/borg/sight/hud/med
/obj/item/borg/sight/hud/med/New()
/obj/item/borg/sight/hud/sec
/obj/item/borg/sight/hud/sec/New()
/obj/item/borg/sight/meson
/obj/item/borg/sight/thermal
/obj/item/borg/sight/thermal/alien
/obj/item/borg/sight/xray
/obj/item/borg/stun
/obj/item/borg/stun/attack(mob/M as mob, mob/living/silicon/robot/user as mob)
/obj/item/borg/upgrade
/obj/item/borg/upgrade/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/jetpack
/obj/item/borg/upgrade/jetpack/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/rename
/obj/item/borg/upgrade/rename/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/rename/attack_self(mob/user as mob)
/obj/item/borg/upgrade/reset
/obj/item/borg/upgrade/reset/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/restart
/obj/item/borg/upgrade/restart/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/syndicate/
/obj/item/borg/upgrade/syndicate/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/tasercooler
/obj/item/borg/upgrade/tasercooler/action(var/mob/living/silicon/robot/R)
/obj/item/borg/upgrade/vtec
/obj/item/borg/upgrade/vtec/action(var/mob/living/silicon/robot/R)
/obj/item/brain
/obj/item/brain/New()
/obj/item/brain/alien
/obj/item/brain/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/brain/examine()
/obj/item/brain/transfer_identity(var/mob/living/carbon/H)
/obj/item/broken_device
/obj/item/can_contaminate()
/obj/item/candle
/obj/item/candle/attack_self(mob/user as mob)
/obj/item/candle/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/candle/dropped(mob/user)
/obj/item/candle/light(var/flavor_text = "\red [usr] lights the [name].")
/obj/item/candle/pickup(mob/user)
/obj/item/candle/process()
/obj/item/candle/update_icon()
/obj/item/changestone
/obj/item/changestone/attack_hand(var/mob/user as mob)
/obj/item/check_airflow_movable(n)
/obj/item/clean_blood()
/obj/item/clothing
/obj/item/clothing/ears
/obj/item/clothing/ears/attack_hand(mob/user as mob)
/obj/item/clothing/ears/earmuffs
/obj/item/clothing/ears/earmuffs/tribblemuffs
/obj/item/clothing/ears/offear
/obj/item/clothing/ears/offear/New(var/obj/O)
/obj/item/clothing/glasses
/obj/item/clothing/glasses/eyepatch
/obj/item/clothing/glasses/eyepatch/fluff/thysse_1
/obj/item/clothing/glasses/fluff/arjun_chopra_1
/obj/item/clothing/glasses/fluff/uzenwa_sissra_1
/obj/item/clothing/glasses/gglasses
/obj/item/clothing/glasses/hud
/obj/item/clothing/glasses/hud/health
/obj/item/clothing/glasses/hud/health/mech
/obj/item/clothing/glasses/hud/health/mech/process_hud(var/mob/M)
/obj/item/clothing/glasses/hud/health/process_hud(var/mob/M)
/obj/item/clothing/glasses/hud/security
/obj/item/clothing/glasses/hud/security/jensenshades
/obj/item/clothing/glasses/hud/security/process_hud(var/mob/M)
/obj/item/clothing/glasses/material
/obj/item/clothing/glasses/meson
/obj/item/clothing/glasses/meson/fluff/book_berner_1
/obj/item/clothing/glasses/meson/prescription
/obj/item/clothing/glasses/monocle
/obj/item/clothing/glasses/night
/obj/item/clothing/glasses/regular
/obj/item/clothing/glasses/regular/hipster
/obj/item/clothing/glasses/science
/obj/item/clothing/glasses/sunglasses
/obj/item/clothing/glasses/sunglasses/big
/obj/item/clothing/glasses/sunglasses/blindfold
/obj/item/clothing/glasses/sunglasses/prescription
/obj/item/clothing/glasses/sunglasses/sechud
/obj/item/clothing/glasses/sunglasses/sechud/New()
/obj/item/clothing/glasses/thermal
/obj/item/clothing/glasses/thermal/emp_act(severity)
/obj/item/clothing/glasses/thermal/eyepatch
/obj/item/clothing/glasses/thermal/jensen
/obj/item/clothing/glasses/thermal/monocle
/obj/item/clothing/glasses/thermal/syndi
/obj/item/clothing/glasses/threedglasses
/obj/item/clothing/glasses/virussunglasses
/obj/item/clothing/glasses/virussunglasses/dropped(mob/user as mob)
/obj/item/clothing/glasses/virussunglasses/equipped(var/mob/user, var/slot)
/obj/item/clothing/glasses/welding
/obj/item/clothing/glasses/welding/attack_self()
/obj/item/clothing/glasses/welding/getMask()
/obj/item/clothing/glasses/welding/superior
/obj/item/clothing/glasses/welding/superior/getMask()
/obj/item/clothing/glasses/welding/verb/toggle()
/obj/item/clothing/gloves
/obj/item/clothing/gloves/Touch()
/obj/item/clothing/gloves/attackby(obj/item/weapon/W, mob/user)
/obj/item/clothing/gloves/black
/obj/item/clothing/gloves/black/ce
/obj/item/clothing/gloves/black/hos
/obj/item/clothing/gloves/black/thief
/obj/item/clothing/gloves/blue
/obj/item/clothing/gloves/botanic_leather
/obj/item/clothing/gloves/boxing
/obj/item/clothing/gloves/boxing/blue
/obj/item/clothing/gloves/boxing/green
/obj/item/clothing/gloves/boxing/hologlove
/obj/item/clothing/gloves/boxing/yellow
/obj/item/clothing/gloves/brown
/obj/item/clothing/gloves/brown/cargo
/obj/item/clothing/gloves/captain
/obj/item/clothing/gloves/combat
/obj/item/clothing/gloves/cyborg
/obj/item/clothing/gloves/examine()
/obj/item/clothing/gloves/fluff/ashley_rifler_1
/obj/item/clothing/gloves/fluff/chal_appara_1
/obj/item/clothing/gloves/fluff/murad_hassim_1
/obj/item/clothing/gloves/fluff/walter_brooks_1
/obj/item/clothing/gloves/furgloves
/obj/item/clothing/gloves/fyellow
/obj/item/clothing/gloves/fyellow/New()
/obj/item/clothing/gloves/golem
/obj/item/clothing/gloves/green
/obj/item/clothing/gloves/grey
/obj/item/clothing/gloves/grey/hop
/obj/item/clothing/gloves/grey/rd
/obj/item/clothing/gloves/latex
/obj/item/clothing/gloves/latex/cmo
/obj/item/clothing/gloves/light_brown
/obj/item/clothing/gloves/orange
/obj/item/clothing/gloves/powered
/obj/item/clothing/gloves/purple
/obj/item/clothing/gloves/rainbow
/obj/item/clothing/gloves/rainbow/clown
/obj/item/clothing/gloves/red
/obj/item/clothing/gloves/space_ninja
/obj/item/clothing/gloves/space_ninja/Touch(var/atom/A,var/proximity)
/obj/item/clothing/gloves/space_ninja/drain(target_type as text, target, obj/suit)
/obj/item/clothing/gloves/space_ninja/examine()
/obj/item/clothing/gloves/space_ninja/toggled()
/obj/item/clothing/gloves/swat
/obj/item/clothing/gloves/white
/obj/item/clothing/gloves/white/redcoat
/obj/item/clothing/gloves/yellow
/obj/item/clothing/gloves/yellow/power
/obj/item/clothing/gloves/yellow/vox
/obj/item/clothing/head
/obj/item/clothing/head/bandana
/obj/item/clothing/head/bearpelt
/obj/item/clothing/head/beaverhat
/obj/item/clothing/head/beret
/obj/item/clothing/head/beret/centcom/captain
/obj/item/clothing/head/beret/centcom/officer
/obj/item/clothing/head/beret/eng
/obj/item/clothing/head/beret/sec
/obj/item/clothing/head/bio_hood
/obj/item/clothing/head/bio_hood/anomaly
/obj/item/clothing/head/bio_hood/cmo
/obj/item/clothing/head/bio_hood/general
/obj/item/clothing/head/bio_hood/janitor
/obj/item/clothing/head/bio_hood/scientist
/obj/item/clothing/head/bio_hood/security
/obj/item/clothing/head/bio_hood/virology
/obj/item/clothing/head/boaterhat
/obj/item/clothing/head/bomb_hood
/obj/item/clothing/head/bomb_hood/security
/obj/item/clothing/head/bowlerhat
/obj/item/clothing/head/cakehat
/obj/item/clothing/head/cakehat/attack_self(mob/user as mob)
/obj/item/clothing/head/cakehat/process()
/obj/item/clothing/head/caphat
/obj/item/clothing/head/cardborg
/obj/item/clothing/head/centhat
/obj/item/clothing/head/chaplain_hood
/obj/item/clothing/head/chefhat
/obj/item/clothing/head/chicken
/obj/item/clothing/head/collectable
/obj/item/clothing/head/collectable/HoS
/obj/item/clothing/head/collectable/beret
/obj/item/clothing/head/collectable/captain
/obj/item/clothing/head/collectable/chef
/obj/item/clothing/head/collectable/flatcap
/obj/item/clothing/head/collectable/hardhat
/obj/item/clothing/head/collectable/kitty
/obj/item/clothing/head/collectable/paper
/obj/item/clothing/head/collectable/petehat
/obj/item/clothing/head/collectable/pirate
/obj/item/clothing/head/collectable/police
/obj/item/clothing/head/collectable/rabbitears
/obj/item/clothing/head/collectable/slime
/obj/item/clothing/head/collectable/swat
/obj/item/clothing/head/collectable/thunderdome
/obj/item/clothing/head/collectable/tophat
/obj/item/clothing/head/collectable/welding
/obj/item/clothing/head/collectable/wizard
/obj/item/clothing/head/collectable/xenom
/obj/item/clothing/head/corgi
/obj/item/clothing/head/crown
/obj/item/clothing/head/cueball
/obj/item/clothing/head/culthood
/obj/item/clothing/head/culthood/alt
/obj/item/clothing/head/det_hat
/obj/item/clothing/head/det_hat/fluff/retpolcap
/obj/item/clothing/head/fedora
/obj/item/clothing/head/fedora/brownfedora
/obj/item/clothing/head/fedora/verb/tip_fedora()
/obj/item/clothing/head/fedora/whitefedora
/obj/item/clothing/head/festive
/obj/item/clothing/head/fez
/obj/item/clothing/head/flatcap
/obj/item/clothing/head/fluff/bruce_hachert
/obj/item/clothing/head/fluff/edvin_telephosphor_1
/obj/item/clothing/head/fluff/heather_winceworth
/obj/item/clothing/head/fluff/krinnhat
/obj/item/clothing/head/furcap
/obj/item/clothing/head/greenbandana
/obj/item/clothing/head/hairflower
/obj/item/clothing/head/hairflower/purple
/obj/item/clothing/head/hardhat
/obj/item/clothing/head/hardhat/attack_self(mob/user)
/obj/item/clothing/head/hardhat/dblue
/obj/item/clothing/head/hardhat/dropped(mob/user)
/obj/item/clothing/head/hardhat/orange
/obj/item/clothing/head/hardhat/pickup(mob/user)
/obj/item/clothing/head/hardhat/pumpkinhead
/obj/item/clothing/head/hardhat/red
/obj/item/clothing/head/hardhat/reindeer
/obj/item/clothing/head/hardhat/white
/obj/item/clothing/head/hasturhood
/obj/item/clothing/head/helmet
/obj/item/clothing/head/helmet/HoS
/obj/item/clothing/head/helmet/HoS/dermal
/obj/item/clothing/head/helmet/attackby(var/obj/item/device/assembly/signaler/S, mob/user as mob)
/obj/item/clothing/head/helmet/cap
/obj/item/clothing/head/helmet/customs
/obj/item/clothing/head/helmet/gladiator
/obj/item/clothing/head/helmet/greenbandana/fluff/taryn_kifer_1
/obj/item/clothing/head/helmet/riot
/obj/item/clothing/head/helmet/roman
/obj/item/clothing/head/helmet/roman/legionaire
/obj/item/clothing/head/helmet/space
/obj/item/clothing/head/helmet/space/anomaly
/obj/item/clothing/head/helmet/space/capspace
/obj/item/clothing/head/helmet/space/clown
/obj/item/clothing/head/helmet/space/cult
/obj/item/clothing/head/helmet/space/deathsquad
/obj/item/clothing/head/helmet/space/deathsquad/beret
/obj/item/clothing/head/helmet/space/mime
/obj/item/clothing/head/helmet/space/nasavoid
/obj/item/clothing/head/helmet/space/paramedic
/obj/item/clothing/head/helmet/space/pirate
/obj/item/clothing/head/helmet/space/rig
/obj/item/clothing/head/helmet/space/rig/atmos
/obj/item/clothing/head/helmet/space/rig/attack_self(mob/user)
/obj/item/clothing/head/helmet/space/rig/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/clothing/head/helmet/space/rig/dropped(mob/user)
/obj/item/clothing/head/helmet/space/rig/elite
/obj/item/clothing/head/helmet/space/rig/ert
/obj/item/clothing/head/helmet/space/rig/ert/attack_self(mob/user)
/obj/item/clothing/head/helmet/space/rig/ert/commander
/obj/item/clothing/head/helmet/space/rig/ert/engineer
/obj/item/clothing/head/helmet/space/rig/ert/examine()
/obj/item/clothing/head/helmet/space/rig/ert/medical
/obj/item/clothing/head/helmet/space/rig/ert/security
/obj/item/clothing/head/helmet/space/rig/medical
/obj/item/clothing/head/helmet/space/rig/mining
/obj/item/clothing/head/helmet/space/rig/pickup(mob/user)
/obj/item/clothing/head/helmet/space/rig/security
/obj/item/clothing/head/helmet/space/rig/security/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/clothing/head/helmet/space/rig/security/unathi
/obj/item/clothing/head/helmet/space/rig/singuloth
/obj/item/clothing/head/helmet/space/rig/syndi
/obj/item/clothing/head/helmet/space/rig/syndi/attack_self(mob/user)
/obj/item/clothing/head/helmet/space/rig/syndi/examine()
/obj/item/clothing/head/helmet/space/rig/tajara
/obj/item/clothing/head/helmet/space/rig/unathi
/obj/item/clothing/head/helmet/space/rig/wizard
/obj/item/clothing/head/helmet/space/santahat
/obj/item/clothing/head/helmet/space/skrell
/obj/item/clothing/head/helmet/space/skrell/black
/obj/item/clothing/head/helmet/space/skrell/white
/obj/item/clothing/head/helmet/space/space_ninja
/obj/item/clothing/head/helmet/space/syndicate
/obj/item/clothing/head/helmet/space/syndicate/black
/obj/item/clothing/head/helmet/space/syndicate/black/blue
/obj/item/clothing/head/helmet/space/syndicate/black/engie
/obj/item/clothing/head/helmet/space/syndicate/black/green
/obj/item/clothing/head/helmet/space/syndicate/black/med
/obj/item/clothing/head/helmet/space/syndicate/black/orange
/obj/item/clothing/head/helmet/space/syndicate/black/red
/obj/item/clothing/head/helmet/space/syndicate/blue
/obj/item/clothing/head/helmet/space/syndicate/green
/obj/item/clothing/head/helmet/space/syndicate/green/dark
/obj/item/clothing/head/helmet/space/syndicate/orange
/obj/item/clothing/head/helmet/space/unathi
/obj/item/clothing/head/helmet/space/unathi/breacher
/obj/item/clothing/head/helmet/space/unathi/helmet_cheap
/obj/item/clothing/head/helmet/space/vox
/obj/item/clothing/head/helmet/space/vox/carapace
/obj/item/clothing/head/helmet/space/vox/medic
/obj/item/clothing/head/helmet/space/vox/pressure
/obj/item/clothing/head/helmet/space/vox/stealth
/obj/item/clothing/head/helmet/swat
/obj/item/clothing/head/helmet/thunderdome
/obj/item/clothing/head/helmet/warden
/obj/item/clothing/head/hgpiratecap
/obj/item/clothing/head/justice
/obj/item/clothing/head/justice/blue
/obj/item/clothing/head/justice/green
/obj/item/clothing/head/justice/pink
/obj/item/clothing/head/justice/yellow
/obj/item/clothing/head/kitty
/obj/item/clothing/head/kitty/mouse
/obj/item/clothing/head/kitty/mouse/update_icon(var/mob/living/carbon/human/user)
/obj/item/clothing/head/kitty/update_icon(var/mob/living/carbon/human/user)
/obj/item/clothing/head/magus
/obj/item/clothing/head/mailman
/obj/item/clothing/head/nun_hood
/obj/item/clothing/head/nursehat
/obj/item/clothing/head/pirate
/obj/item/clothing/head/plaguedoctorhat
/obj/item/clothing/head/powdered_wig
/obj/item/clothing/head/rabbitears
/obj/item/clothing/head/radiation
/obj/item/clothing/head/redcoat
/obj/item/clothing/head/secsoft/fluff/swatcap
/obj/item/clothing/head/soft
/obj/item/clothing/head/soft/black
/obj/item/clothing/head/soft/blue
/obj/item/clothing/head/soft/dropped()
/obj/item/clothing/head/soft/green
/obj/item/clothing/head/soft/grey
/obj/item/clothing/head/soft/mime
/obj/item/clothing/head/soft/orange
/obj/item/clothing/head/soft/purple
/obj/item/clothing/head/soft/rainbow
/obj/item/clothing/head/soft/red
/obj/item/clothing/head/soft/sec
/obj/item/clothing/head/soft/sec/corp
/obj/item/clothing/head/soft/verb/flip()
/obj/item/clothing/head/soft/yellow
/obj/item/clothing/head/space/golem
/obj/item/clothing/head/space/powered
/obj/item/clothing/head/space/powered/atmotoggle()
/obj/item/clothing/head/surgery
/obj/item/clothing/head/surgery/blue
/obj/item/clothing/head/surgery/green
/obj/item/clothing/head/surgery/purple
/obj/item/clothing/head/syndicatefake
/obj/item/clothing/head/that
/obj/item/clothing/head/ushanka
/obj/item/clothing/head/ushanka/attack_self(mob/user as mob)
/obj/item/clothing/head/welding
/obj/item/clothing/head/welding/attack_self()
/obj/item/clothing/head/welding/fluff/alice_mccrea_1
/obj/item/clothing/head/welding/fluff/norah_briggs_1
/obj/item/clothing/head/welding/fluff/yuki_matsuda_1
/obj/item/clothing/head/welding/verb/toggle()
/obj/item/clothing/head/witchwig
/obj/item/clothing/head/wizard
/obj/item/clothing/head/wizard/amp
/obj/item/clothing/head/wizard/fake
/obj/item/clothing/head/wizard/magus
/obj/item/clothing/head/wizard/marisa
/obj/item/clothing/head/wizard/marisa/fake
/obj/item/clothing/head/wizard/red
/obj/item/clothing/head/xenos
/obj/item/clothing/mask
/obj/item/clothing/mask/balaclava
/obj/item/clothing/mask/banemask
/obj/item/clothing/mask/bluescarf
/obj/item/clothing/mask/breath
/obj/item/clothing/mask/breath/medical
/obj/item/clothing/mask/breath/verb/toggle()
/obj/item/clothing/mask/cigarette
/obj/item/clothing/mask/cigarette/Destroy()
/obj/item/clothing/mask/cigarette/New()
/obj/item/clothing/mask/cigarette/afterattack(obj/item/weapon/reagent_containers/glass/glass, mob/user as mob, proximity)
/obj/item/clothing/mask/cigarette/attack_self(mob/user as mob)
/obj/item/clothing/mask/cigarette/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/clothing/mask/cigarette/cigar
/obj/item/clothing/mask/cigarette/cigar/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/clothing/mask/cigarette/cigar/cohiba
/obj/item/clothing/mask/cigarette/cigar/havana
/obj/item/clothing/mask/cigarette/die()
/obj/item/clothing/mask/cigarette/joint
/obj/item/clothing/mask/cigarette/joint/New()
/obj/item/clothing/mask/cigarette/joint/deus
/obj/item/clothing/mask/cigarette/light(var/flavor_text = "[usr] lights the [name].")
/obj/item/clothing/mask/cigarette/pipe
/obj/item/clothing/mask/cigarette/pipe/attack_self(mob/user as mob)
/obj/item/clothing/mask/cigarette/pipe/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/clothing/mask/cigarette/pipe/cobpipe
/obj/item/clothing/mask/cigarette/pipe/light(var/flavor_text = "[usr] lights the [name].")
/obj/item/clothing/mask/cigarette/pipe/process()
/obj/item/clothing/mask/cigarette/process()
/obj/item/clothing/mask/facehugger/lamarr/New()
/obj/item/clothing/mask/fakemoustache
/obj/item/clothing/mask/fawkes
/obj/item/clothing/mask/fluff/electriccig
/obj/item/clothing/mask/gas
/obj/item/clothing/mask/gas/clown_hat
/obj/item/clothing/mask/gas/clown_hat/attack_self(mob/user)
/obj/item/clothing/mask/gas/cyborg
/obj/item/clothing/mask/gas/death_commando
/obj/item/clothing/mask/gas/golem
/obj/item/clothing/mask/gas/mime
/obj/item/clothing/mask/gas/monkeymask
/obj/item/clothing/mask/gas/owl_mask
/obj/item/clothing/mask/gas/plaguedoctor
/obj/item/clothing/mask/gas/sechailer
/obj/item/clothing/mask/gas/sechailer/attack_self()
/obj/item/clothing/mask/gas/sechailer/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/clothing/mask/gas/sechailer/hos
/obj/item/clothing/mask/gas/sechailer/verb/halt()
/obj/item/clothing/mask/gas/sechailer/warden
/obj/item/clothing/mask/gas/sexyclown
/obj/item/clothing/mask/gas/sexymime
/obj/item/clothing/mask/gas/swat
/obj/item/clothing/mask/gas/syndicate
/obj/item/clothing/mask/gas/virusclown_hat
/obj/item/clothing/mask/gas/virusclown_hat/dropped(mob/user as mob)
/obj/item/clothing/mask/gas/virusclown_hat/equipped(var/mob/user, var/slot)
/obj/item/clothing/mask/gas/voice
/obj/item/clothing/mask/gas/voice/space_ninja
/obj/item/clothing/mask/gas/voice/space_ninja/New()
/obj/item/clothing/mask/gas/voice/space_ninja/assess_targets(list/target_list, mob/living/carbon/U)
/obj/item/clothing/mask/gas/voice/space_ninja/examine()
/obj/item/clothing/mask/gas/voice/space_ninja/monocular
/obj/item/clothing/mask/gas/voice/space_ninja/scar
/obj/item/clothing/mask/gas/voice/space_ninja/switchm()
/obj/item/clothing/mask/gas/voice/space_ninja/togglev()
/obj/item/clothing/mask/gas/voice/space_ninja/visor
/obj/item/clothing/mask/greenscarf
/obj/item/clothing/mask/horsehead
/obj/item/clothing/mask/horsehead/Destroy()
/obj/item/clothing/mask/horsehead/dropped()
/obj/item/clothing/mask/horsehead/equipped(mob/user, slot)
/obj/item/clothing/mask/horsehead/goodbye_horses(mob/user)
/obj/item/clothing/mask/horsehead/magic
/obj/item/clothing/mask/horsehead/magic/dropped(mob/user as mob)
/obj/item/clothing/mask/horsehead/magic/equipped(var/mob/user, var/slot)
/obj/item/clothing/mask/luchador
/obj/item/clothing/mask/luchador/rudos
/obj/item/clothing/mask/luchador/tecnicos
/obj/item/clothing/mask/mara_kilpatrick_1
/obj/item/clothing/mask/muzzle
/obj/item/clothing/mask/muzzle/attack_paw(mob/user as mob)
/obj/item/clothing/mask/muzzle/gag
/obj/item/clothing/mask/ninjascarf
/obj/item/clothing/mask/pig
/obj/item/clothing/mask/redscarf
/obj/item/clothing/mask/surgical
/obj/item/clothing/mob_can_equip(M as mob, slot)
/obj/item/clothing/shoes
/obj/item/clothing/shoes/
/obj/item/clothing/shoes/black
/obj/item/clothing/shoes/black/redcoat
/obj/item/clothing/shoes/blue
/obj/item/clothing/shoes/brown
/obj/item/clothing/shoes/brown/captain
/obj/item/clothing/shoes/brown/ce
/obj/item/clothing/shoes/brown/cmo
/obj/item/clothing/shoes/brown/hop
/obj/item/clothing/shoes/brown/rd
/obj/item/clothing/shoes/centcom
/obj/item/clothing/shoes/clown_shoes
/obj/item/clothing/shoes/combat
/obj/item/clothing/shoes/cult
/obj/item/clothing/shoes/cyborg
/obj/item/clothing/shoes/furboots
/obj/item/clothing/shoes/galoshes
/obj/item/clothing/shoes/golem
/obj/item/clothing/shoes/green
/obj/item/clothing/shoes/jackboots
/obj/item/clothing/shoes/laceup
/obj/item/clothing/shoes/leather
/obj/item/clothing/shoes/magboots
/obj/item/clothing/shoes/magboots/attack_self(mob/user)
/obj/item/clothing/shoes/magboots/examine()
/obj/item/clothing/shoes/magboots/fluff/susan_harris_1
/obj/item/clothing/shoes/magboots/vox
/obj/item/clothing/shoes/magboots/vox/attack_self(mob/user)
/obj/item/clothing/shoes/magboots/vox/dropped(mob/user as mob)
/obj/item/clothing/shoes/magboots/vox/examine()
/obj/item/clothing/shoes/mime
/obj/item/clothing/shoes/orange
/obj/item/clothing/shoes/orange/attack_self(mob/user as mob)
/obj/item/clothing/shoes/orange/attackby(H as obj, loc)
/obj/item/clothing/shoes/powered
/obj/item/clothing/shoes/purple
/obj/item/clothing/shoes/rainbow
/obj/item/clothing/shoes/red
/obj/item/clothing/shoes/roman
/obj/item/clothing/shoes/sandal
/obj/item/clothing/shoes/sandal/marisa
/obj/item/clothing/shoes/slippers
/obj/item/clothing/shoes/slippers_worn
/obj/item/clothing/shoes/space_ninja
/obj/item/clothing/shoes/swat
/obj/item/clothing/shoes/syndigaloshes
/obj/item/clothing/shoes/white
/obj/item/clothing/shoes/yellow
/obj/item/clothing/suit
/obj/item/clothing/suit/apron
/obj/item/clothing/suit/apron/overalls
/obj/item/clothing/suit/armor
/obj/item/clothing/suit/armor/bulletproof
/obj/item/clothing/suit/armor/captain
/obj/item/clothing/suit/armor/centcomm
/obj/item/clothing/suit/armor/det_suit
/obj/item/clothing/suit/armor/heavy
/obj/item/clothing/suit/armor/hos
/obj/item/clothing/suit/armor/hos/hosbluejacket
/obj/item/clothing/suit/armor/hos/hosnavyjacket
/obj/item/clothing/suit/armor/hos/jensen
/obj/item/clothing/suit/armor/hos/officerbluejacket
/obj/item/clothing/suit/armor/hos/officernavyjacket
/obj/item/clothing/suit/armor/laserproof
/obj/item/clothing/suit/armor/reactive
/obj/item/clothing/suit/armor/reactive/IsShield()
/obj/item/clothing/suit/armor/reactive/attack_self(mob/user as mob)
/obj/item/clothing/suit/armor/reactive/emp_act(severity)
/obj/item/clothing/suit/armor/riot
/obj/item/clothing/suit/armor/swat
/obj/item/clothing/suit/armor/swat/officer
/obj/item/clothing/suit/armor/tdome
/obj/item/clothing/suit/armor/tdome/green
/obj/item/clothing/suit/armor/tdome/red
/obj/item/clothing/suit/armor/vest
/obj/item/clothing/suit/armor/vest/fluff/deus_blueshield
/obj/item/clothing/suit/armor/vest/security
/obj/item/clothing/suit/armor/vest/warden
/obj/item/clothing/suit/bio_suit
/obj/item/clothing/suit/bio_suit/anomaly
/obj/item/clothing/suit/bio_suit/cmo
/obj/item/clothing/suit/bio_suit/general
/obj/item/clothing/suit/bio_suit/janitor
/obj/item/clothing/suit/bio_suit/plaguedoctorsuit
/obj/item/clothing/suit/bio_suit/scientist
/obj/item/clothing/suit/bio_suit/security
/obj/item/clothing/suit/bio_suit/virology
/obj/item/clothing/suit/blacktrenchcoat
/obj/item/clothing/suit/bluetag
/obj/item/clothing/suit/bomb_suit
/obj/item/clothing/suit/bomb_suit/security
/obj/item/clothing/suit/browncoat
/obj/item/clothing/suit/browntrenchcoat
/obj/item/clothing/suit/captunic
/obj/item/clothing/suit/captunic/capjacket
/obj/item/clothing/suit/cardborg
/obj/item/clothing/suit/chaplain_hoodie
/obj/item/clothing/suit/chef
/obj/item/clothing/suit/chef/classic
/obj/item/clothing/suit/chickensuit
/obj/item/clothing/suit/corgisuit
/obj/item/clothing/suit/creamsuit
/obj/item/clothing/suit/cultrobes
/obj/item/clothing/suit/cultrobes/alt
/obj/item/clothing/suit/cyborg_suit
/obj/item/clothing/suit/emp_act(severity)
/obj/item/clothing/suit/fire
/obj/item/clothing/suit/fire/firefighter
/obj/item/clothing/suit/fire/heavy
/obj/item/clothing/suit/fluff/oldscarf
/obj/item/clothing/suit/furcape
/obj/item/clothing/suit/furcoat
/obj/item/clothing/suit/golem
/obj/item/clothing/suit/greatcoat
/obj/item/clothing/suit/hastur
/obj/item/clothing/suit/hear_talk(mob/M, var/msg)
/obj/item/clothing/suit/hgpirate
/obj/item/clothing/suit/holidaypriest
/obj/item/clothing/suit/ianshirt
/obj/item/clothing/suit/imperium_monk
/obj/item/clothing/suit/johnny_coat
/obj/item/clothing/suit/judgerobe
/obj/item/clothing/suit/justice
/obj/item/clothing/suit/leathercoat
/obj/item/clothing/suit/magusred
/obj/item/clothing/suit/monkeysuit
/obj/item/clothing/suit/neocoat
/obj/item/clothing/suit/nun
/obj/item/clothing/suit/pirate
/obj/item/clothing/suit/radiation
/obj/item/clothing/suit/redtag
/obj/item/clothing/suit/space
/obj/item/clothing/suit/space/New()
/obj/item/clothing/suit/space/anomaly
/obj/item/clothing/suit/space/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/clothing/suit/space/calc_breach_damage()
/obj/item/clothing/suit/space/clown
/obj/item/clothing/suit/space/create_breaches(var/damtype, var/amount)
/obj/item/clothing/suit/space/cult
/obj/item/clothing/suit/space/examine()
/obj/item/clothing/suit/space/mime
/obj/item/clothing/suit/space/nasavoid
/obj/item/clothing/suit/space/paramedic
/obj/item/clothing/suit/space/pirate
/obj/item/clothing/suit/space/powered
/obj/item/clothing/suit/space/powered/New()
/obj/item/clothing/suit/space/powered/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/clothing/suit/space/powered/powerdown(sudden = 0)
/obj/item/clothing/suit/space/powered/poweroff()
/obj/item/clothing/suit/space/powered/poweron()
/obj/item/clothing/suit/space/powered/spawnable/badmin/New()
/obj/item/clothing/suit/space/powered/spawnable/regular/New()
/obj/item/clothing/suit/space/repair_breaches(var/damtype, var/amount, var/mob/user)
/obj/item/clothing/suit/space/rig
/obj/item/clothing/suit/space/rig/atmos
/obj/item/clothing/suit/space/rig/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/clothing/suit/space/rig/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/clothing/suit/space/rig/dropped()
/obj/item/clothing/suit/space/rig/elite
/obj/item/clothing/suit/space/rig/equipped(mob/M)
/obj/item/clothing/suit/space/rig/ert
/obj/item/clothing/suit/space/rig/ert/commander
/obj/item/clothing/suit/space/rig/ert/engineer
/obj/item/clothing/suit/space/rig/ert/medical
/obj/item/clothing/suit/space/rig/ert/security
/obj/item/clothing/suit/space/rig/medical
/obj/item/clothing/suit/space/rig/mining
/obj/item/clothing/suit/space/rig/security
/obj/item/clothing/suit/space/rig/security/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/clothing/suit/space/rig/security/unathi
/obj/item/clothing/suit/space/rig/singuloth
/obj/item/clothing/suit/space/rig/syndi
/obj/item/clothing/suit/space/rig/tajara
/obj/item/clothing/suit/space/rig/unathi
/obj/item/clothing/suit/space/rig/verb/toggle_helmet()
/obj/item/clothing/suit/space/rig/wizard
/obj/item/clothing/suit/space/santa
/obj/item/clothing/suit/space/skrell
/obj/item/clothing/suit/space/skrell/black
/obj/item/clothing/suit/space/skrell/white
/obj/item/clothing/suit/space/space_ninja
/obj/item/clothing/suit/space/space_ninja/Destroy()
/obj/item/clothing/suit/space/space_ninja/New()
/obj/item/clothing/suit/space/space_ninja/Topic(href, href_list)
/obj/item/clothing/suit/space/space_ninja/ai_hack_ninja()
/obj/item/clothing/suit/space/space_ninja/ai_holo(var/turf/T in oview(3,affecting))
/obj/item/clothing/suit/space/space_ninja/ai_holo_clear()
/obj/item/clothing/suit/space/space_ninja/ai_holo_process()
/obj/item/clothing/suit/space/space_ninja/ai_instruction()
/obj/item/clothing/suit/space/space_ninja/ai_return_control()
/obj/item/clothing/suit/space/space_ninja/attackby(obj/item/I, mob/U)
/obj/item/clothing/suit/space/space_ninja/blade_check(mob/living/carbon/U, X = 1)
/obj/item/clothing/suit/space/space_ninja/cancel_stealth()
/obj/item/clothing/suit/space/space_ninja/deinit()
/obj/item/clothing/suit/space/space_ninja/deinitialize(delay = s_delay)
/obj/item/clothing/suit/space/space_ninja/display_spideros()
/obj/item/clothing/suit/space/space_ninja/examine()
/obj/item/clothing/suit/space/space_ninja/grant_AI_verbs()
/obj/item/clothing/suit/space/space_ninja/grant_equip_verbs()
/obj/item/clothing/suit/space/space_ninja/grant_kamikaze(mob/living/carbon/U)
/obj/item/clothing/suit/space/space_ninja/grant_ninja_verbs()
/obj/item/clothing/suit/space/space_ninja/handle_teleport_grab(turf/T, mob/living/U)
/obj/item/clothing/suit/space/space_ninja/init()
/obj/item/clothing/suit/space/space_ninja/killai(mob/living/silicon/ai/A = AI)
/obj/item/clothing/suit/space/space_ninja/lock_suit(mob/living/carbon/U, X = 0)
/obj/item/clothing/suit/space/space_ninja/ninitialize(delay = s_delay, mob/living/carbon/human/U = loc)
/obj/item/clothing/suit/space/space_ninja/ninjablade()
/obj/item/clothing/suit/space/space_ninja/ninjaboost()
/obj/item/clothing/suit/space/space_ninja/ninjacost(C = 0,X = 0)
/obj/item/clothing/suit/space/space_ninja/ninjajaunt()
/obj/item/clothing/suit/space/space_ninja/ninjamirage()
/obj/item/clothing/suit/space/space_ninja/ninjanet(mob/living/carbon/M in oview())
/obj/item/clothing/suit/space/space_ninja/ninjapulse()
/obj/item/clothing/suit/space/space_ninja/ninjashift(turf/T in oview())
/obj/item/clothing/suit/space/space_ninja/ninjaslayer()
/obj/item/clothing/suit/space/space_ninja/ninjasmoke()
/obj/item/clothing/suit/space/space_ninja/ninjastar()
/obj/item/clothing/suit/space/space_ninja/ninjawalk()
/obj/item/clothing/suit/space/space_ninja/ntick(mob/living/carbon/human/U = affecting)
/obj/item/clothing/suit/space/space_ninja/randomize_param()
/obj/item/clothing/suit/space/space_ninja/remove_AI_verbs()
/obj/item/clothing/suit/space/space_ninja/remove_equip_verbs()
/obj/item/clothing/suit/space/space_ninja/remove_kamikaze(mob/living/carbon/U)
/obj/item/clothing/suit/space/space_ninja/remove_ninja_verbs()
/obj/item/clothing/suit/space/space_ninja/spideros()
/obj/item/clothing/suit/space/space_ninja/stealth()
/obj/item/clothing/suit/space/space_ninja/terminate()
/obj/item/clothing/suit/space/space_ninja/toggle_stealth()
/obj/item/clothing/suit/space/space_ninja/unlock_suit()
/obj/item/clothing/suit/space/syndicate
/obj/item/clothing/suit/space/syndicate/black
/obj/item/clothing/suit/space/syndicate/black/blue
/obj/item/clothing/suit/space/syndicate/black/engie
/obj/item/clothing/suit/space/syndicate/black/green
/obj/item/clothing/suit/space/syndicate/black/med
/obj/item/clothing/suit/space/syndicate/black/orange
/obj/item/clothing/suit/space/syndicate/black/red
/obj/item/clothing/suit/space/syndicate/blue
/obj/item/clothing/suit/space/syndicate/green
/obj/item/clothing/suit/space/syndicate/green/dark
/obj/item/clothing/suit/space/syndicate/orange
/obj/item/clothing/suit/space/unathi
/obj/item/clothing/suit/space/unathi/breacher
/obj/item/clothing/suit/space/unathi/rig_cheap
/obj/item/clothing/suit/space/vox
/obj/item/clothing/suit/space/vox/carapace
/obj/item/clothing/suit/space/vox/medic
/obj/item/clothing/suit/space/vox/pressure
/obj/item/clothing/suit/space/vox/stealth
/obj/item/clothing/suit/storage
/obj/item/clothing/suit/storage/MouseDrop(atom/over_object)
/obj/item/clothing/suit/storage/New()
/obj/item/clothing/suit/storage/attack_hand(mob/user as mob)
/obj/item/clothing/suit/storage/attack_paw(mob/user as mob)
/obj/item/clothing/suit/storage/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/clothing/suit/storage/close(mob/user as mob)
/obj/item/clothing/suit/storage/det_suit
/obj/item/clothing/suit/storage/det_suit/fluff/graycoat
/obj/item/clothing/suit/storage/det_suit/fluff/leatherjack
/obj/item/clothing/suit/storage/det_suit/fluff/retpolcoat
/obj/item/clothing/suit/storage/forensics
/obj/item/clothing/suit/storage/forensics/blue
/obj/item/clothing/suit/storage/forensics/red
/obj/item/clothing/suit/storage/fr_jacket
/obj/item/clothing/suit/storage/fr_jacket/verb/toggle()
/obj/item/clothing/suit/storage/hazardvest
/obj/item/clothing/suit/storage/hide_from(mob/user as mob)
/obj/item/clothing/suit/storage/internalaffairs
/obj/item/clothing/suit/storage/internalaffairs/verb/toggle()
/obj/item/clothing/suit/storage/labcoat
/obj/item/clothing/suit/storage/labcoat/chemist
/obj/item/clothing/suit/storage/labcoat/cmo
/obj/item/clothing/suit/storage/labcoat/fluff/aeneas_rinil
/obj/item/clothing/suit/storage/labcoat/fluff/pink
/obj/item/clothing/suit/storage/labcoat/fluff/red
/obj/item/clothing/suit/storage/labcoat/genetics
/obj/item/clothing/suit/storage/labcoat/mad
/obj/item/clothing/suit/storage/labcoat/science
/obj/item/clothing/suit/storage/labcoat/verb/toggle()
/obj/item/clothing/suit/storage/labcoat/virologist
/obj/item/clothing/suit/storage/lawyer/bluejacket
/obj/item/clothing/suit/storage/lawyer/purpjacket
/obj/item/clothing/suit/storage/orient2hud(mob/user as mob)
/obj/item/clothing/suit/storage/orient_objs(tx, ty, mx, my)
/obj/item/clothing/suit/storage/paramedic
/obj/item/clothing/suit/storage/return_inv()
/obj/item/clothing/suit/storage/show_to(mob/user as mob)
/obj/item/clothing/suit/storage/standard_orient_objs(var/rows,var/cols)
/obj/item/clothing/suit/straight_jacket
/obj/item/clothing/suit/stripper/stripper_green
/obj/item/clothing/suit/stripper/stripper_pink
/obj/item/clothing/suit/suit/verb/toggle()
/obj/item/clothing/suit/suspenders
/obj/item/clothing/suit/syndicatefake
/obj/item/clothing/suit/unathi/mantle
/obj/item/clothing/suit/unathi/robe
/obj/item/clothing/suit/wcoat
/obj/item/clothing/suit/wizrobe
/obj/item/clothing/suit/wizrobe/fake
/obj/item/clothing/suit/wizrobe/magusblue
/obj/item/clothing/suit/wizrobe/magusred
/obj/item/clothing/suit/wizrobe/marisa
/obj/item/clothing/suit/wizrobe/marisa/fake
/obj/item/clothing/suit/wizrobe/psypurple
/obj/item/clothing/suit/wizrobe/red
/obj/item/clothing/suit/xenos
/obj/item/clothing/tie
/obj/item/clothing/tie/accessory/gunholster
/obj/item/clothing/tie/armband
/obj/item/clothing/tie/armband/cargo
/obj/item/clothing/tie/armband/engine
/obj/item/clothing/tie/armband/hydro
/obj/item/clothing/tie/armband/med
/obj/item/clothing/tie/armband/medgreen
/obj/item/clothing/tie/armband/science
/obj/item/clothing/tie/blue
/obj/item/clothing/tie/fluff/altair_locket
/obj/item/clothing/tie/fluff/konaa_hirano
/obj/item/clothing/tie/fluff/konaa_hirano/attack_self(mob/user as mob)
/obj/item/clothing/tie/fluff/konaa_hirano/attackby(var/obj/item/O as obj, mob/user as mob)
/obj/item/clothing/tie/fluff/lin_chang_1
/obj/item/clothing/tie/fluff/nasir_khayyam_1
/obj/item/clothing/tie/holobadge
/obj/item/clothing/tie/holobadge/attack(mob/living/carbon/human/M, mob/living/user)
/obj/item/clothing/tie/holobadge/attack_self(mob/user as mob)
/obj/item/clothing/tie/holobadge/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/clothing/tie/holobadge/cord
/obj/item/clothing/tie/holster
/obj/item/clothing/tie/holster/armpit
/obj/item/clothing/tie/holster/waist
/obj/item/clothing/tie/horrible
/obj/item/clothing/tie/medal
/obj/item/clothing/tie/medal/bronze_heart
/obj/item/clothing/tie/medal/conduct
/obj/item/clothing/tie/medal/gold
/obj/item/clothing/tie/medal/gold/captain
/obj/item/clothing/tie/medal/gold/heroism
/obj/item/clothing/tie/medal/nobel_science
/obj/item/clothing/tie/medal/silver
/obj/item/clothing/tie/medal/silver/security
/obj/item/clothing/tie/medal/silver/valor
/obj/item/clothing/tie/red
/obj/item/clothing/tie/stethoscope
/obj/item/clothing/tie/stethoscope/attack(mob/living/carbon/human/M, mob/living/user)
/obj/item/clothing/tie/storage
/obj/item/clothing/tie/storage/New()
/obj/item/clothing/tie/storage/attack_self(mob/user as mob)
/obj/item/clothing/tie/storage/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/clothing/tie/storage/black_vest
/obj/item/clothing/tie/storage/brown_vest
/obj/item/clothing/tie/storage/knifeharness
/obj/item/clothing/tie/storage/knifeharness/New()
/obj/item/clothing/tie/storage/knifeharness/attackby(var/obj/item/O as obj, mob/user as mob)
/obj/item/clothing/tie/storage/knifeharness/update()
/obj/item/clothing/tie/storage/webbing
/obj/item/clothing/under
/obj/item/clothing/under/acj
/obj/item/clothing/under/aqua
/obj/item/clothing/under/attackby(obj/item/I, mob/user)
/obj/item/clothing/under/bane
/obj/item/clothing/under/barber
/obj/item/clothing/under/blackskirt
/obj/item/clothing/under/bluepyjamas
/obj/item/clothing/under/brown
/obj/item/clothing/under/captain_fly
/obj/item/clothing/under/chameleon
/obj/item/clothing/under/chameleon/New()
/obj/item/clothing/under/chameleon/all/New()
/obj/item/clothing/under/chameleon/attackby(obj/item/clothing/under/U as obj, mob/user as mob)
/obj/item/clothing/under/chameleon/emp_act(severity)
/obj/item/clothing/under/chameleon/verb/change()
/obj/item/clothing/under/cloud
/obj/item/clothing/under/color/black
/obj/item/clothing/under/color/blackf
/obj/item/clothing/under/color/blue
/obj/item/clothing/under/color/blue/dodgeball
/obj/item/clothing/under/color/green
/obj/item/clothing/under/color/grey
/obj/item/clothing/under/color/orange
/obj/item/clothing/under/color/pink
/obj/item/clothing/under/color/red
/obj/item/clothing/under/color/red/dodgeball
/obj/item/clothing/under/color/white
/obj/item/clothing/under/color/yellow
/obj/item/clothing/under/darkblue
/obj/item/clothing/under/darkred
/obj/item/clothing/under/det
/obj/item/clothing/under/det/fluff/retpoluniform
/obj/item/clothing/under/dress/dress_cap
/obj/item/clothing/under/dress/dress_fire
/obj/item/clothing/under/dress/dress_green
/obj/item/clothing/under/dress/dress_hop
/obj/item/clothing/under/dress/dress_hr
/obj/item/clothing/under/dress/dress_orange
/obj/item/clothing/under/dress/dress_pink
/obj/item/clothing/under/dress/dress_rd
/obj/item/clothing/under/dress/dress_saloon
/obj/item/clothing/under/dress/dress_yellow
/obj/item/clothing/under/dress/plaid_blue
/obj/item/clothing/under/dress/plaid_purple
/obj/item/clothing/under/dress/plaid_red
/obj/item/clothing/under/examine()
/obj/item/clothing/under/flappers
/obj/item/clothing/under/fluff/WornTurtleneck
/obj/item/clothing/under/fluff/ana_issek_1
/obj/item/clothing/under/fluff/blackschoolGirl
/obj/item/clothing/under/fluff/callum_suit
/obj/item/clothing/under/fluff/jane_sidsuit
/obj/item/clothing/under/fluff/jane_sidsuit/verb/toggle_zipper()
/obj/item/clothing/under/fluff/jumpsuitdown
/obj/item/clothing/under/fluff/lilith_vinous_1
/obj/item/clothing/under/fluff/milo_hachert
/obj/item/clothing/under/fluff/olddressuniform
/obj/item/clothing/under/fluff/solara_light_1
/obj/item/clothing/under/fluff/tian_dress
/obj/item/clothing/under/fluff/wyatt_1
/obj/item/clothing/under/gimmick/rank/captain/suit
/obj/item/clothing/under/gimmick/rank/head_of_personnel/suit
/obj/item/clothing/under/gladiator
/obj/item/clothing/under/golem
/obj/item/clothing/under/holster()
/obj/item/clothing/under/johnny
/obj/item/clothing/under/kilt
/obj/item/clothing/under/lawyer
/obj/item/clothing/under/lawyer/black
/obj/item/clothing/under/lawyer/blue
/obj/item/clothing/under/lawyer/bluesuit
/obj/item/clothing/under/lawyer/female
/obj/item/clothing/under/lawyer/oldman
/obj/item/clothing/under/lawyer/purpsuit
/obj/item/clothing/under/lawyer/red
/obj/item/clothing/under/librarian
/obj/item/clothing/under/lightblue
/obj/item/clothing/under/lightbrown
/obj/item/clothing/under/lightgreen
/obj/item/clothing/under/lightpurple
/obj/item/clothing/under/lightred
/obj/item/clothing/under/mafia
/obj/item/clothing/under/mafia/sue
/obj/item/clothing/under/mafia/tan
/obj/item/clothing/under/mafia/vest
/obj/item/clothing/under/mafia/white
/obj/item/clothing/under/maid
/obj/item/clothing/under/mime
/obj/item/clothing/under/overalls
/obj/item/clothing/under/owl
/obj/item/clothing/under/pirate
/obj/item/clothing/under/pj/blue
/obj/item/clothing/under/pj/red
/obj/item/clothing/under/psyche
/obj/item/clothing/under/psyjump
/obj/item/clothing/under/psysuit
/obj/item/clothing/under/psysuit/fluff/isaca_sirius_1
/obj/item/clothing/under/purple
/obj/item/clothing/under/rainbow
/obj/item/clothing/under/rank/New()
/obj/item/clothing/under/rank/atmospheric_technician
/obj/item/clothing/under/rank/bartender
/obj/item/clothing/under/rank/bartender/fluff/classy
/obj/item/clothing/under/rank/captain
/obj/item/clothing/under/rank/cargo
/obj/item/clothing/under/rank/cargotech
/obj/item/clothing/under/rank/centcom/captain
/obj/item/clothing/under/rank/centcom/officer
/obj/item/clothing/under/rank/centcom/representative
/obj/item/clothing/under/rank/centcom_commander
/obj/item/clothing/under/rank/centcom_officer
/obj/item/clothing/under/rank/chaplain
/obj/item/clothing/under/rank/chef
/obj/item/clothing/under/rank/chemist
/obj/item/clothing/under/rank/chemist_new
/obj/item/clothing/under/rank/chief_engineer
/obj/item/clothing/under/rank/chief_medical_officer
/obj/item/clothing/under/rank/clown
/obj/item/clothing/under/rank/dispatch
/obj/item/clothing/under/rank/engineer
/obj/item/clothing/under/rank/geneticist
/obj/item/clothing/under/rank/geneticist_new
/obj/item/clothing/under/rank/head_of_personnel
/obj/item/clothing/under/rank/head_of_personnel_whimsy
/obj/item/clothing/under/rank/head_of_security
/obj/item/clothing/under/rank/head_of_security/corp
/obj/item/clothing/under/rank/head_of_security/jensen
/obj/item/clothing/under/rank/hydroponics
/obj/item/clothing/under/rank/internalaffairs
/obj/item/clothing/under/rank/janitor
/obj/item/clothing/under/rank/mailman
/obj/item/clothing/under/rank/mechanic
/obj/item/clothing/under/rank/medical
/obj/item/clothing/under/rank/medical/blue
/obj/item/clothing/under/rank/medical/fluff/short
/obj/item/clothing/under/rank/medical/green
/obj/item/clothing/under/rank/medical/paramedic
/obj/item/clothing/under/rank/medical/purple
/obj/item/clothing/under/rank/miner
/obj/item/clothing/under/rank/nurse
/obj/item/clothing/under/rank/nursesuit
/obj/item/clothing/under/rank/orderly
/obj/item/clothing/under/rank/research_director
/obj/item/clothing/under/rank/roboticist
/obj/item/clothing/under/rank/scientist
/obj/item/clothing/under/rank/scientist_new
/obj/item/clothing/under/rank/security
/obj/item/clothing/under/rank/security/corp
/obj/item/clothing/under/rank/security/fluff/jeremy_wolf_1
/obj/item/clothing/under/rank/security2
/obj/item/clothing/under/rank/vice
/obj/item/clothing/under/rank/virologist
/obj/item/clothing/under/rank/virologist_new
/obj/item/clothing/under/rank/warden
/obj/item/clothing/under/rank/warden/corp
/obj/item/clothing/under/redcoat
/obj/item/clothing/under/redpyjamas
/obj/item/clothing/under/roman
/obj/item/clothing/under/schoolgirl
/obj/item/clothing/under/scratch
/obj/item/clothing/under/sexyclown
/obj/item/clothing/under/sexymime
/obj/item/clothing/under/shorts
/obj/item/clothing/under/shorts/black
/obj/item/clothing/under/shorts/blue
/obj/item/clothing/under/shorts/green
/obj/item/clothing/under/shorts/grey
/obj/item/clothing/under/shorts/red
/obj/item/clothing/under/sl_suit
/obj/item/clothing/under/soviet
/obj/item/clothing/under/space
/obj/item/clothing/under/storage()
/obj/item/clothing/under/stripper/mankini
/obj/item/clothing/under/stripper/stripper_green
/obj/item/clothing/under/stripper/stripper_pink
/obj/item/clothing/under/suit_jacket
/obj/item/clothing/under/suit_jacket/female
/obj/item/clothing/under/suit_jacket/really_black
/obj/item/clothing/under/suit_jacket/red
/obj/item/clothing/under/sundress
/obj/item/clothing/under/swimsuit/
/obj/item/clothing/under/swimsuit/black
/obj/item/clothing/under/swimsuit/blue
/obj/item/clothing/under/swimsuit/green
/obj/item/clothing/under/swimsuit/purple
/obj/item/clothing/under/swimsuit/red
/obj/item/clothing/under/syndicate
/obj/item/clothing/under/syndicate/combat
/obj/item/clothing/under/syndicate/tacticool
/obj/item/clothing/under/verb/removetie()
/obj/item/clothing/under/verb/rollsuit()
/obj/item/clothing/under/verb/toggle()
/obj/item/clothing/under/vox
/obj/item/clothing/under/vox/vox_casual
/obj/item/clothing/under/vox/vox_robes
/obj/item/clothing/under/vox_atmos
/obj/item/clothing/under/vox_engi
/obj/item/clothing/under/vox_grey
/obj/item/clothing/under/vox_robotics
/obj/item/clothing/under/vox_toxins
/obj/item/clothing/under/waiter
/obj/item/clothing/under/wedding/bride_blue
/obj/item/clothing/under/wedding/bride_orange
/obj/item/clothing/under/wedding/bride_purple
/obj/item/clothing/under/wedding/bride_red
/obj/item/clothing/under/wedding/bride_white
/obj/item/clothing/under/yellowgreen
/obj/item/contaminate()
/obj/item/decontaminate()
/obj/item/device
/obj/item/device/aicard
/obj/item/device/aicard/Topic(href, href_list)
/obj/item/device/aicard/attack(mob/living/silicon/ai/M as mob, mob/user as mob)
/obj/item/device/aicard/attack(mob/living/silicon/decoy/M as mob, mob/user as mob)
/obj/item/device/aicard/attack_self(mob/user)
/obj/item/device/aicard/ex_act(severity)
/obj/item/device/am_shielding_container
/obj/item/device/am_shielding_container/attackby(var/obj/item/I, var/mob/user)
/obj/item/device/analyzer
/obj/item/device/analyzer/attack_self(mob/user as mob)
/obj/item/device/analyzer/plant_analyzer
/obj/item/device/analyzer/plant_analyzer/attack_self(mob/user as mob)
/obj/item/device/ano_scanner
/obj/item/device/ano_scanner/New()
/obj/item/device/ano_scanner/attack_self(var/mob/user as mob)
/obj/item/device/ano_scanner/interact(var/mob/user as mob)
/obj/item/device/ano_scanner/scan()
/obj/item/device/antibody_scanner
/obj/item/device/antibody_scanner/attack(mob/M as mob, mob/user as mob)
/obj/item/device/antibody_scanner/report(var/text, mob/user as mob)
/obj/item/device/assembly
/obj/item/device/assembly/Destroy()
/obj/item/device/assembly/activate()
/obj/item/device/assembly/attach_assembly(var/obj/A, var/mob/user)
/obj/item/device/assembly/attach_assembly(var/obj/item/device/assembly/A, var/mob/user)
/obj/item/device/assembly/attack_self(mob/user as mob)
/obj/item/device/assembly/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/assembly/describe()
/obj/item/device/assembly/examine()
/obj/item/device/assembly/holder_movement()
/obj/item/device/assembly/igniter
/obj/item/device/assembly/igniter/activate()
/obj/item/device/assembly/igniter/attack_self(mob/user as mob)
/obj/item/device/assembly/igniter/describe()
/obj/item/device/assembly/infra
/obj/item/device/assembly/infra/Move()
/obj/item/device/assembly/infra/Topic(href, href_list)
/obj/item/device/assembly/infra/activate()
/obj/item/device/assembly/infra/attack_hand()
/obj/item/device/assembly/infra/describe()
/obj/item/device/assembly/infra/holder_movement()
/obj/item/device/assembly/infra/interact(mob/user as mob)
/obj/item/device/assembly/infra/process()
/obj/item/device/assembly/infra/toggle_secure()
/obj/item/device/assembly/infra/trigger_beam()
/obj/item/device/assembly/infra/update_icon()
/obj/item/device/assembly/infra/verb/rotate()
/obj/item/device/assembly/interact(mob/user as mob)
/obj/item/device/assembly/mousetrap
/obj/item/device/assembly/mousetrap/Crossed(var/atom/movable/AM as mob|obj)
/obj/item/device/assembly/mousetrap/activate()
/obj/item/device/assembly/mousetrap/armed
/obj/item/device/assembly/mousetrap/attack_hand(mob/living/user as mob)
/obj/item/device/assembly/mousetrap/attack_self(mob/living/user as mob)
/obj/item/device/assembly/mousetrap/describe()
/obj/item/device/assembly/mousetrap/examine()
/obj/item/device/assembly/mousetrap/hitby(A as mob|obj)
/obj/item/device/assembly/mousetrap/on_found(mob/finder as mob)
/obj/item/device/assembly/mousetrap/triggered(mob/target as mob, var/type = "feet")
/obj/item/device/assembly/mousetrap/update_icon()
/obj/item/device/assembly/mousetrap/verb/hide_under()
/obj/item/device/assembly/process()
/obj/item/device/assembly/process_cooldown()
/obj/item/device/assembly/prox_sensor
/obj/item/device/assembly/prox_sensor/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/assembly/prox_sensor/Move()
/obj/item/device/assembly/prox_sensor/Topic(href, href_list)
/obj/item/device/assembly/prox_sensor/activate()
/obj/item/device/assembly/prox_sensor/describe()
/obj/item/device/assembly/prox_sensor/dropped()
/obj/item/device/assembly/prox_sensor/holder_movement()
/obj/item/device/assembly/prox_sensor/interact(mob/user as mob)
/obj/item/device/assembly/prox_sensor/process()
/obj/item/device/assembly/prox_sensor/sense()
/obj/item/device/assembly/prox_sensor/toggle_scan()
/obj/item/device/assembly/prox_sensor/toggle_secure()
/obj/item/device/assembly/prox_sensor/update_icon()
/obj/item/device/assembly/pulse(var/radio = 0)
/obj/item/device/assembly/pulsed(var/radio = 0)
/obj/item/device/assembly/signaler
/obj/item/device/assembly/signaler/New()
/obj/item/device/assembly/signaler/Topic(href, href_list)
/obj/item/device/assembly/signaler/activate()
/obj/item/device/assembly/signaler/anomaly
/obj/item/device/assembly/signaler/anomaly/attack_self()
/obj/item/device/assembly/signaler/anomaly/receive_signal(datum/signal/signal)
/obj/item/device/assembly/signaler/describe()
/obj/item/device/assembly/signaler/interact(mob/user as mob, flag1)
/obj/item/device/assembly/signaler/pulse(var/radio = 0)
/obj/item/device/assembly/signaler/receive_signal(datum/signal/signal)
/obj/item/device/assembly/signaler/set_frequency(new_frequency)
/obj/item/device/assembly/signaler/signal()
/obj/item/device/assembly/signaler/update_icon()
/obj/item/device/assembly/timer
/obj/item/device/assembly/timer/Topic(href, href_list)
/obj/item/device/assembly/timer/activate()
/obj/item/device/assembly/timer/describe()
/obj/item/device/assembly/timer/interact(mob/user as mob)
/obj/item/device/assembly/timer/process()
/obj/item/device/assembly/timer/timer_end()
/obj/item/device/assembly/timer/toggle_secure()
/obj/item/device/assembly/timer/update_icon()
/obj/item/device/assembly/toggle_secure()
/obj/item/device/assembly/voice
/obj/item/device/assembly/voice/activate()
/obj/item/device/assembly/voice/attack_self(mob/user)
/obj/item/device/assembly/voice/describe()
/obj/item/device/assembly/voice/hear_talk(mob/living/M as mob, msg)
/obj/item/device/assembly/voice/toggle_secure()
/obj/item/device/assembly_holder
/obj/item/device/assembly_holder/Bump()
/obj/item/device/assembly_holder/Crossed(atom/movable/AM as mob|obj)
/obj/item/device/assembly_holder/Destroy()
/obj/item/device/assembly_holder/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/assembly_holder/IsAssemblyHolder()
/obj/item/device/assembly_holder/Move()
/obj/item/device/assembly_holder/attach(var/obj/item/device/D, var/obj/item/device/D2, var/mob/user)
/obj/item/device/assembly_holder/attack_hand()
/obj/item/device/assembly_holder/attack_self(mob/user as mob)
/obj/item/device/assembly_holder/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/assembly_holder/ex_act(severity)
/obj/item/device/assembly_holder/examine()
/obj/item/device/assembly_holder/hear_talk(mob/living/M as mob, msg)
/obj/item/device/assembly_holder/on_found(mob/finder as mob)
/obj/item/device/assembly_holder/pickup()
/obj/item/device/assembly_holder/process_activation(var/obj/D, var/normal = 1, var/special = 1)
/obj/item/device/assembly_holder/process_activation(var/obj/item/device/D)
/obj/item/device/assembly_holder/process_movement()
/obj/item/device/assembly_holder/throw_impact()
/obj/item/device/assembly_holder/update_icon()
/obj/item/device/batterer
/obj/item/device/batterer/attack_self(mob/living/carbon/user as mob, flag = 0, emp = 0)
/obj/item/device/beacon_locator
/obj/item/device/beacon_locator/Destroy()
/obj/item/device/beacon_locator/New()
/obj/item/device/beacon_locator/Topic(href, href_list)
/obj/item/device/beacon_locator/attack_self(var/mob/user as mob)
/obj/item/device/beacon_locator/interact(var/mob/user as mob)
/obj/item/device/beacon_locator/process()
/obj/item/device/camera
/obj/item/device/camera/afterattack(atom/target as mob|obj|turf|area, mob/user as mob, flag)
/obj/item/device/camera/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/device/camera/attack_self(mob/user as mob)
/obj/item/device/camera/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/device/camera/fluff/oldcamera
/obj/item/device/camera/fluff/orange
/obj/item/device/camera/get_icon(turf/the_turf as turf)
/obj/item/device/camera/get_mobs(turf/the_turf as turf)
/obj/item/device/camera_bug
/obj/item/device/camera_film
/obj/item/device/chameleon
/obj/item/device/chameleon/afterattack(atom/target, mob/user, proximity)
/obj/item/device/chameleon/attack_self()
/obj/item/device/chameleon/disrupt()
/obj/item/device/chameleon/dropped()
/obj/item/device/chameleon/toggle()
/obj/item/device/core_sampler
/obj/item/device/core_sampler/attack_self()
/obj/item/device/core_sampler/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/core_sampler/examine()
/obj/item/device/core_sampler/sample_item(var/item_to_sample, var/mob/user as mob)
/obj/item/device/debugger
/obj/item/device/debugger/is_used_on(obj/O, mob/user)
/obj/item/device/depth_scanner
/obj/item/device/depth_scanner/Topic(href, href_list)
/obj/item/device/depth_scanner/attack_self(var/mob/user as mob)
/obj/item/device/depth_scanner/interact(var/mob/user as mob)
/obj/item/device/depth_scanner/scan_atom(var/mob/user, var/atom/A)
/obj/item/device/destTagger
/obj/item/device/destTagger/Topic(href, href_list)
/obj/item/device/destTagger/attack_self(mob/user as mob)
/obj/item/device/destTagger/openwindow(mob/user as mob)
/obj/item/device/detective_scanner
/obj/item/device/detective_scanner/add_data(atom/A as mob|obj|turf|area)
/obj/item/device/detective_scanner/afterattack(atom/A as obj|turf|area, mob/user as mob, proximity)
/obj/item/device/detective_scanner/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/device/detective_scanner/attackby(obj/item/weapon/f_card/W as obj, mob/user as mob)
/obj/item/device/detective_scanner/forger
/obj/item/device/detective_scanner/forger/New()
/obj/item/device/detective_scanner/forger/add_data(atom/A as mob|obj|turf|area)
/obj/item/device/detective_scanner/forger/afterattack(atom/A as obj|turf|area, mob/user as mob)
/obj/item/device/detective_scanner/forger/attack_self(var/mob/user as mob)
/obj/item/device/detective_scanner/forger/clear_forgery()
/obj/item/device/eftpos
/obj/item/device/eftpos/New()
/obj/item/device/eftpos/Topic(var/href, var/href_list)
/obj/item/device/eftpos/attack_self(mob/user as mob)
/obj/item/device/eftpos/attackby(O as obj, user as mob)
/obj/item/device/eftpos/print_reference()
/obj/item/device/eftpos/reconnect_database()
/obj/item/device/eftpos/scan_card(var/obj/item/weapon/card/I)
/obj/item/device/encryptionkey/
/obj/item/device/encryptionkey/New()
/obj/item/device/encryptionkey/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/encryptionkey/binary
/obj/item/device/encryptionkey/ert
/obj/item/device/encryptionkey/heads/captain
/obj/item/device/encryptionkey/heads/ce
/obj/item/device/encryptionkey/heads/cmo
/obj/item/device/encryptionkey/heads/hop
/obj/item/device/encryptionkey/heads/hos
/obj/item/device/encryptionkey/heads/rd
/obj/item/device/encryptionkey/headset_cargo
/obj/item/device/encryptionkey/headset_com
/obj/item/device/encryptionkey/headset_eng
/obj/item/device/encryptionkey/headset_med
/obj/item/device/encryptionkey/headset_medsci
/obj/item/device/encryptionkey/headset_rob
/obj/item/device/encryptionkey/headset_sci
/obj/item/device/encryptionkey/headset_sec
/obj/item/device/encryptionkey/syndicate
/obj/item/device/encryptionkey/syndicate/hacked
/obj/item/device/flash
/obj/item/device/flash/alien
/obj/item/device/flash/attack(mob/living/M as mob, mob/user as mob)
/obj/item/device/flash/attack_self(mob/living/carbon/user as mob, flag = 0, emp = 0)
/obj/item/device/flash/clown_check(var/mob/user)
/obj/item/device/flash/emp_act(severity)
/obj/item/device/flash/flash_recharge()
/obj/item/device/flash/synthetic
/obj/item/device/flash/synthetic/attack(mob/living/M as mob, mob/user as mob)
/obj/item/device/flash/synthetic/attack_self(mob/living/carbon/user as mob, flag = 0, emp = 0)
/obj/item/device/flashlight
/obj/item/device/flashlight/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/device/flashlight/attack_self(mob/user)
/obj/item/device/flashlight/dropped(mob/user)
/obj/item/device/flashlight/flare
/obj/item/device/flashlight/flare/New()
/obj/item/device/flashlight/flare/attack_self(mob/user)
/obj/item/device/flashlight/flare/process()
/obj/item/device/flashlight/flare/turn_off()
/obj/item/device/flashlight/fluff/thejesster14_1
/obj/item/device/flashlight/initialize()
/obj/item/device/flashlight/lamp
/obj/item/device/flashlight/lamp/green
/obj/item/device/flashlight/lamp/verb/toggle_light()
/obj/item/device/flashlight/lantern
/obj/item/device/flashlight/pen
/obj/item/device/flashlight/pickup(mob/user)
/obj/item/device/flashlight/update_brightness(var/mob/user = null)
/obj/item/device/gps
/obj/item/device/gps/attack_self(var/mob/user as mob)
/obj/item/device/hailer
/obj/item/device/hailer/attack_self(mob/living/carbon/user as mob)
/obj/item/device/hailer/attackby(obj/item/I, mob/user)
/obj/item/device/handtv
/obj/item/device/handtv/attack_self(mob/usr as mob)
/obj/item/device/handtv/check_eye(var/mob/usr as mob)
/obj/item/device/healthanalyzer
/obj/item/device/healthanalyzer/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/device/healthanalyzer/verb/toggle_mode()
/obj/item/device/laptop
/obj/item/device/laptop/AltClick()
/obj/item/device/laptop/verb/open_computer()
/obj/item/device/laser_pointer
/obj/item/device/laser_pointer/New()
/obj/item/device/laser_pointer/afterattack(var/atom/target, var/mob/living/user, flag, params)
/obj/item/device/laser_pointer/attack(mob/living/M, mob/user)
/obj/item/device/laser_pointer/attackby(obj/item/W, mob/user)
/obj/item/device/laser_pointer/blue
/obj/item/device/laser_pointer/green
/obj/item/device/laser_pointer/laser_act(var/atom/target, var/mob/living/user)
/obj/item/device/laser_pointer/process()
/obj/item/device/laser_pointer/purple
/obj/item/device/laser_pointer/red
/obj/item/device/laser_pointer/upgraded/New()
/obj/item/device/lightreplacer
/obj/item/device/lightreplacer/AddUses(var/amount = 1)
/obj/item/device/lightreplacer/CanUse(var/mob/living/user)
/obj/item/device/lightreplacer/Charge(var/mob/user)
/obj/item/device/lightreplacer/Emag()
/obj/item/device/lightreplacer/New()
/obj/item/device/lightreplacer/ReplaceLight(var/obj/machinery/light/target, var/mob/living/U)
/obj/item/device/lightreplacer/Use(var/mob/user)
/obj/item/device/lightreplacer/attack_self(mob/user)
/obj/item/device/lightreplacer/attackby(obj/item/W, mob/user)
/obj/item/device/lightreplacer/examine()
/obj/item/device/lightreplacer/update_icon()
/obj/item/device/mass_spectrometer
/obj/item/device/mass_spectrometer/New()
/obj/item/device/mass_spectrometer/adv
/obj/item/device/mass_spectrometer/attack_self(mob/user as mob)
/obj/item/device/mass_spectrometer/on_reagent_change()
/obj/item/device/measuring_tape
/obj/item/device/megaphone
/obj/item/device/megaphone/attack_self(mob/living/user as mob)
/obj/item/device/megaphone/attackby(obj/item/I, mob/user)
/obj/item/device/mining_scanner
/obj/item/device/mining_scanner/attack_self(mob/user)
/obj/item/device/mmi
/obj/item/device/mmi/attack_self(mob/user as mob)
/obj/item/device/mmi/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/device/mmi/dropbrain(var/obj/item/brain/brain, var/turf/dropspot)
/obj/item/device/mmi/emp_act(severity)
/obj/item/device/mmi/posibrain
/obj/item/device/mmi/posibrain/New()
/obj/item/device/mmi/posibrain/Topic(href,href_list)
/obj/item/device/mmi/posibrain/attack_ghost(var/mob/dead/observer/O)
/obj/item/device/mmi/posibrain/attack_self(mob/user as mob)
/obj/item/device/mmi/posibrain/check_observer(var/mob/dead/observer/O)
/obj/item/device/mmi/posibrain/emp_act(severity)
/obj/item/device/mmi/posibrain/examine()
/obj/item/device/mmi/posibrain/question(var/client/C)
/obj/item/device/mmi/posibrain/request_player()
/obj/item/device/mmi/posibrain/reset_search()
/obj/item/device/mmi/posibrain/transfer_identity(var/mob/living/carbon/H)
/obj/item/device/mmi/posibrain/transfer_personality(var/mob/candidate)
/obj/item/device/mmi/posibrain/volunteer(var/mob/dead/observer/O)
/obj/item/device/mmi/radio_enabled
/obj/item/device/mmi/radio_enabled/New()
/obj/item/device/mmi/radio_enabled/verb
/obj/item/device/mmi/radio_enabled/verb/Toggle_Broadcasting()
/obj/item/device/mmi/radio_enabled/verb/Toggle_Listening()
/obj/item/device/mmi/transfer_identity(var/mob/living/carbon/human/H)
/obj/item/device/multitool
/obj/item/device/multitool/uplink/New()
/obj/item/device/multitool/uplink/attack_self(mob/user as mob)
/obj/item/device/onetankbomb
/obj/item/device/onetankbomb/Crossed(atom/movable/AM as mob|obj)
/obj/item/device/onetankbomb/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/onetankbomb/attack_self(mob/user as mob)
/obj/item/device/onetankbomb/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/onetankbomb/examine()
/obj/item/device/onetankbomb/hear_talk(mob/living/M as mob, msg)
/obj/item/device/onetankbomb/on_found(mob/finder as mob)
/obj/item/device/onetankbomb/receive_signal()
/obj/item/device/onetankbomb/update_icon()
/obj/item/device/paicard
/obj/item/device/paicard/Destroy()
/obj/item/device/paicard/New()
/obj/item/device/paicard/Topic(href, href_list)
/obj/item/device/paicard/alertUpdate()
/obj/item/device/paicard/attack_self(mob/user)
/obj/item/device/paicard/emp_act(severity)
/obj/item/device/paicard/removePersonality()
/obj/item/device/paicard/setEmotion(var/emotion)
/obj/item/device/paicard/setPersonality(mob/living/silicon/pai/personality)
/obj/item/device/pda
/obj/item/device/pda/Destroy()
/obj/item/device/pda/GetAccess()
/obj/item/device/pda/GetID()
/obj/item/device/pda/MouseDrop(obj/over_object as obj, src_location, over_location)
/obj/item/device/pda/New()
/obj/item/device/pda/Topic(href, href_list)
/obj/item/device/pda/afterattack(atom/A as mob|obj|turf|area, mob/user as mob, proximity)
/obj/item/device/pda/ai
/obj/item/device/pda/ai/attack_self(mob/user as mob)
/obj/item/device/pda/ai/can_use()
/obj/item/device/pda/ai/pai
/obj/item/device/pda/ai/set_name_and_job(newname as text, newjob as text)
/obj/item/device/pda/ai/verb/cmd_send_pdamesg()
/obj/item/device/pda/ai/verb/cmd_show_message_log()
/obj/item/device/pda/ai/verb/cmd_toggle_pda_receiver()
/obj/item/device/pda/ai/verb/cmd_toggle_pda_silent()
/obj/item/device/pda/atmos
/obj/item/device/pda/attack(mob/living/C as mob, mob/living/user as mob)
/obj/item/device/pda/attack_self(mob/user as mob)
/obj/item/device/pda/attackby(obj/item/C as obj, mob/user as mob)
/obj/item/device/pda/available_pdas()
/obj/item/device/pda/bar
/obj/item/device/pda/botanist
/obj/item/device/pda/can_use()
/obj/item/device/pda/captain
/obj/item/device/pda/cargo
/obj/item/device/pda/chaplain
/obj/item/device/pda/chef
/obj/item/device/pda/chemist
/obj/item/device/pda/clear
/obj/item/device/pda/clown
/obj/item/device/pda/clown/Crossed(AM as mob|obj)
/obj/item/device/pda/create_message(var/mob/living/U = usr, var/obj/item/device/pda/P)
/obj/item/device/pda/detective
/obj/item/device/pda/detonate_act(var/obj/item/device/pda/P)
/obj/item/device/pda/dropped(mob/user)
/obj/item/device/pda/emp_act(severity)
/obj/item/device/pda/engineering
/obj/item/device/pda/explode()
/obj/item/device/pda/geneticist
/obj/item/device/pda/heads
/obj/item/device/pda/heads/ce
/obj/item/device/pda/heads/cmo
/obj/item/device/pda/heads/hop
/obj/item/device/pda/heads/hos
/obj/item/device/pda/heads/rd
/obj/item/device/pda/id_check(mob/user as mob, choice as num)
/obj/item/device/pda/janitor
/obj/item/device/pda/lawyer
/obj/item/device/pda/librarian
/obj/item/device/pda/medical
/obj/item/device/pda/mime
/obj/item/device/pda/pickup(mob/user)
/obj/item/device/pda/quartermaster
/obj/item/device/pda/remove_id()
/obj/item/device/pda/roboticist
/obj/item/device/pda/security
/obj/item/device/pda/shaftminer
/obj/item/device/pda/syndicate
/obj/item/device/pda/toxins
/obj/item/device/pda/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/item/device/pda/verb/verb_remove_id()
/obj/item/device/pda/verb/verb_remove_pen()
/obj/item/device/pda/viro
/obj/item/device/pda/warden
/obj/item/device/pipe_painter
/obj/item/device/pipe_painter/afterattack(atom/A, mob/user as mob)
/obj/item/device/pipe_painter/attack_self(mob/user as mob)
/obj/item/device/pipe_painter/examine()
/obj/item/device/powersink
/obj/item/device/powersink/Destroy()
/obj/item/device/powersink/attack_ai()
/obj/item/device/powersink/attack_hand(var/mob/user)
/obj/item/device/powersink/attack_paw()
/obj/item/device/powersink/attackby(var/obj/item/I, var/mob/user)
/obj/item/device/powersink/process()
/obj/item/device/radio
/obj/item/device/radio/Destroy()
/obj/item/device/radio/New()
/obj/item/device/radio/Topic(href, href_list)
/obj/item/device/radio/attack_self(mob/user as mob)
/obj/item/device/radio/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/radio/autosay(var/message, var/from, var/channel)
/obj/item/device/radio/beacon
/obj/item/device/radio/beacon/bacon
/obj/item/device/radio/beacon/bacon/digest_delay()
/obj/item/device/radio/beacon/hear_talk()
/obj/item/device/radio/beacon/send_hear()
/obj/item/device/radio/beacon/syndicate
/obj/item/device/radio/beacon/syndicate/attack_self(mob/user as mob)
/obj/item/device/radio/beacon/verb/alter_signal(t as text)
/obj/item/device/radio/borg
/obj/item/device/radio/borg/Topic(href, href_list)
/obj/item/device/radio/borg/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/radio/borg/interact(mob/user as mob)
/obj/item/device/radio/borg/recalculateChannels()
/obj/item/device/radio/config(op)
/obj/item/device/radio/electropack
/obj/item/device/radio/electropack/Destroy()
/obj/item/device/radio/electropack/Topic(href, href_list)
/obj/item/device/radio/electropack/attack_hand(mob/user as mob)
/obj/item/device/radio/electropack/attack_self(mob/user as mob, flag1)
/obj/item/device/radio/electropack/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/radio/electropack/receive_signal(datum/signal/signal)
/obj/item/device/radio/emp_act(severity)
/obj/item/device/radio/examine()
/obj/item/device/radio/headset
/obj/item/device/radio/headset/New()
/obj/item/device/radio/headset/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/radio/headset/binary
/obj/item/device/radio/headset/binary/New()
/obj/item/device/radio/headset/ert
/obj/item/device/radio/headset/heads/captain
/obj/item/device/radio/headset/heads/ce
/obj/item/device/radio/headset/heads/cmo
/obj/item/device/radio/headset/heads/hop
/obj/item/device/radio/headset/heads/hos
/obj/item/device/radio/headset/heads/rd
/obj/item/device/radio/headset/headset_cargo
/obj/item/device/radio/headset/headset_com
/obj/item/device/radio/headset/headset_eng
/obj/item/device/radio/headset/headset_med
/obj/item/device/radio/headset/headset_medsci
/obj/item/device/radio/headset/headset_rob
/obj/item/device/radio/headset/headset_sci
/obj/item/device/radio/headset/headset_sec
/obj/item/device/radio/headset/recalculateChannels()
/obj/item/device/radio/headset/receive_range(freq, level)
/obj/item/device/radio/headset/syndicate
/obj/item/device/radio/headset/syndicate/New()
/obj/item/device/radio/headset/uplink
/obj/item/device/radio/headset/uplink/New()
/obj/item/device/radio/hear_talk(mob/M as mob, msg)
/obj/item/device/radio/initialize()
/obj/item/device/radio/interact(mob/user as mob)
/obj/item/device/radio/intercom
/obj/item/device/radio/intercom/Destroy()
/obj/item/device/radio/intercom/New()
/obj/item/device/radio/intercom/attack_ai(mob/user as mob)
/obj/item/device/radio/intercom/attack_hand(mob/user as mob)
/obj/item/device/radio/intercom/attack_paw(mob/user as mob)
/obj/item/device/radio/intercom/hear_talk(mob/M as mob, msg)
/obj/item/device/radio/intercom/process()
/obj/item/device/radio/intercom/receive_range(freq, level)
/obj/item/device/radio/isWireCut(var/index)
/obj/item/device/radio/off
/obj/item/device/radio/receive_range(freq, level)
/obj/item/device/radio/send_hear(freq, level)
/obj/item/device/radio/set_frequency(new_frequency)
/obj/item/device/radio/talk_into(mob/living/M as mob, message, channel)
/obj/item/device/radio/text_sec_channel(var/chan_name, var/chan_stat)
/obj/item/device/radio/text_wires()
/obj/item/device/radio/uplink/New()
/obj/item/device/radio/uplink/attack_self(mob/user as mob)
/obj/item/device/reagent_scanner
/obj/item/device/reagent_scanner/adv
/obj/item/device/reagent_scanner/afterattack(obj/O, mob/user as mob)
/obj/item/device/soulstone
/obj/item/device/soulstone/Topic(href, href_list)
/obj/item/device/soulstone/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/device/soulstone/attack_self(mob/user)
/obj/item/device/spacepod_equipment
/obj/item/device/spacepod_equipment/weaponry
/obj/item/device/spacepod_equipment/weaponry/laser
/obj/item/device/spacepod_equipment/weaponry/taser
/obj/item/device/spacepod_equipment/weaponry/taser/burst
/obj/item/device/sps
/obj/item/device/sps/New()
/obj/item/device/sps/Topic(href, href_list)
/obj/item/device/sps/attack_self(mob/user as mob)
/obj/item/device/sps/emp_act(severity)
/obj/item/device/sps/engineering
/obj/item/device/sps/science
/obj/item/device/t_scanner
/obj/item/device/t_scanner/Destroy()
/obj/item/device/t_scanner/attack_self(mob/user)
/obj/item/device/t_scanner/process()
/obj/item/device/taperecorder
/obj/item/device/taperecorder/attack_self(mob/user)
/obj/item/device/taperecorder/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/device/taperecorder/explode()
/obj/item/device/taperecorder/hear_talk(mob/living/M as mob, msg)
/obj/item/device/taperecorder/verb/clear_memory()
/obj/item/device/taperecorder/verb/playback_memory()
/obj/item/device/taperecorder/verb/print_transcript()
/obj/item/device/taperecorder/verb/record()
/obj/item/device/taperecorder/verb/stop()
/obj/item/device/telepad_beacon
/obj/item/device/telepad_beacon/attack_self(mob/user as mob)
/obj/item/device/toner
/obj/item/device/transfer_valve
/obj/item/device/transfer_valve/HasProximity(atom/movable/AM as mob|obj)
/obj/item/device/transfer_valve/IsAssemblyHolder()
/obj/item/device/transfer_valve/Topic(href, href_list)
/obj/item/device/transfer_valve/attack_self(mob/user as mob)
/obj/item/device/transfer_valve/attackby(obj/item/item, mob/user)
/obj/item/device/transfer_valve/c_state()
/obj/item/device/transfer_valve/merge_gases()
/obj/item/device/transfer_valve/process_activation(var/obj/item/device/D)
/obj/item/device/transfer_valve/split_gases()
/obj/item/device/transfer_valve/toggle_valve()
/obj/item/device/transfer_valve/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/item/device/transfer_valve/update_icon()
/obj/item/device/uplink
/obj/item/device/uplink/New()
/obj/item/device/uplink/Topic(href, href_list)
/obj/item/device/uplink/generate_menu(mob/user as mob)
/obj/item/device/uplink/hidden
/obj/item/device/uplink/hidden/Topic(href, href_list)
/obj/item/device/uplink/hidden/check_trigger(mob/user as mob, var/value, var/target)
/obj/item/device/uplink/hidden/toggle()
/obj/item/device/uplink/hidden/trigger(mob/user as mob)
/obj/item/device/uplink/interact(mob/user as mob)
/obj/item/device/videocam
/obj/item/device/videocam/attack_self(mob/user)
/obj/item/device/videocam/examine()
/obj/item/device/videocam/hear_talk(mob/M as mob, msg)
/obj/item/device/violin
/obj/item/device/violin/Topic(href, href_list)
/obj/item/device/violin/attack_self(mob/user as mob)
/obj/item/device/violin/guitar
/obj/item/device/violin/playnote(var/note as text)
/obj/item/device/violin/playsong()
/obj/item/device/wormhole_jaunter
/obj/item/device/wormhole_jaunter/attack_self(mob/user as mob)
/obj/item/dropped(mob/user as mob)
/obj/item/effect/kinetic_blast
/obj/item/effect/kinetic_blast/New()
/obj/item/equipped(var/mob/user, var/slot)
/obj/item/ex_act(severity)
/obj/item/examine()
/obj/item/eyestab(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/firealarm_frame
/obj/item/firealarm_frame/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/firealarm_frame/try_build(turf/on_wall)
/obj/item/flag
/obj/item/flag/Ignite()
/obj/item/flag/atmos
/obj/item/flag/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/flag/cargo
/obj/item/flag/clown
/obj/item/flag/command
/obj/item/flag/cult
/obj/item/flag/fire_act(null, temperature, volume)
/obj/item/flag/grey
/obj/item/flag/ian
/obj/item/flag/light(var/flavor_text = "[usr] lights the [name].")
/obj/item/flag/med
/obj/item/flag/mime
/obj/item/flag/nation
/obj/item/flag/nation/Ignite()
/obj/item/flag/nation/New()
/obj/item/flag/nation/atmos
/obj/item/flag/nation/attack_hand(mob/user as mob)
/obj/item/flag/nation/attack_paw()
/obj/item/flag/nation/attackby(var/obj/item/weapon/W, var/mob/user)
/obj/item/flag/nation/blob_act()
/obj/item/flag/nation/cargo
/obj/item/flag/nation/command
/obj/item/flag/nation/dropped(mob/user as mob)
/obj/item/flag/nation/ex_act()
/obj/item/flag/nation/fire_act()
/obj/item/flag/nation/light()
/obj/item/flag/nation/med
/obj/item/flag/nation/rnd
/obj/item/flag/nation/sec
/obj/item/flag/ninja
/obj/item/flag/nt
/obj/item/flag/pony
/obj/item/flag/process()
/obj/item/flag/rnd
/obj/item/flag/sec
/obj/item/flag/species/diona
/obj/item/flag/species/greys
/obj/item/flag/species/human
/obj/item/flag/species/kidan
/obj/item/flag/species/machine
/obj/item/flag/species/skrell
/obj/item/flag/species/slime
/obj/item/flag/species/taj
/obj/item/flag/species/unathi
/obj/item/flag/species/vox
/obj/item/flag/syndi
/obj/item/flag/update_icons()
/obj/item/flag/wiz
/obj/item/fluff
/obj/item/fluff/ana_issek_2
/obj/item/fluff/ana_issek_2/attack(mob/living/carbon/human/M, mob/living/user)
/obj/item/fluff/ana_issek_2/attack_self(mob/user as mob)
/obj/item/fluff/angelo_wilkerson_1
/obj/item/fluff/david_fanning_1
/obj/item/fluff/ethan_way_1
/obj/item/fluff/john_mckeever_1
/obj/item/fluff/maurice_bedford_1
/obj/item/fluff/sarah_calvera_1
/obj/item/fluff/sarah_carbrokes_1
/obj/item/fluff/steve_johnson_1
/obj/item/fluff/val_mcneil_1
/obj/item/fluff/victor_kaminsky_1
/obj/item/fluff/victor_kaminsky_1/attack_self(mob/user as mob)
/obj/item/fluff/wes_solari_1
/obj/item/generate_blood_overlay(blood_overlay_color)
/obj/item/get_loc_turf()
/obj/item/inflatable
/obj/item/inflatable/attack_self(mob/user)
/obj/item/inflatable/door/
/obj/item/inflatable/door//attack_self(mob/user)
/obj/item/inflatable/door/torn
/obj/item/inflatable/door/torn/attack_self(mob/user)
/obj/item/inflatable/torn
/obj/item/inflatable/torn/attack_self(mob/user)
/obj/item/is_equipped()
/obj/item/is_used_on(obj/O, mob/user)
/obj/item/key
/obj/item/key/ambulance
/obj/item/lasermachine/New()
/obj/item/latexballon
/obj/item/latexballon/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/latexballon/blow(obj/item/weapon/tank/tank)
/obj/item/latexballon/bullet_act()
/obj/item/latexballon/burst()
/obj/item/latexballon/ex_act(severity)
/obj/item/latexballon/temperature_expose(datum/gas_mixture/air, temperature, volume)
/obj/item/light_fixture_frame
/obj/item/light_fixture_frame/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/light_fixture_frame/small
/obj/item/light_fixture_frame/try_build(turf/on_wall)
/obj/item/mecha_parts
/obj/item/mecha_parts/chassis
/obj/item/mecha_parts/chassis/attack_hand()
/obj/item/mecha_parts/chassis/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/mecha_parts/chassis/durand
/obj/item/mecha_parts/chassis/durand/New()
/obj/item/mecha_parts/chassis/firefighter
/obj/item/mecha_parts/chassis/firefighter/New()
/obj/item/mecha_parts/chassis/gygax
/obj/item/mecha_parts/chassis/gygax/New()
/obj/item/mecha_parts/chassis/honker
/obj/item/mecha_parts/chassis/honker/New()
/obj/item/mecha_parts/chassis/odysseus
/obj/item/mecha_parts/chassis/odysseus/New()
/obj/item/mecha_parts/chassis/phazon
/obj/item/mecha_parts/chassis/phazon/New()
/obj/item/mecha_parts/chassis/ripley
/obj/item/mecha_parts/chassis/ripley/New()
/obj/item/mecha_parts/mecha_equipment
/obj/item/mecha_parts/mecha_equipment/New()
/obj/item/mecha_parts/mecha_equipment/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/action_checks(atom/target)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/detach()
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/dynattackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/mecha_parts/mecha_equipment/anticcw_armor_booster/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/detach()
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/dynbulletdamage(var/obj/item/projectile/Proj)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/dynhitby(atom/movable/A)
/obj/item/mecha_parts/mecha_equipment/antiproj_armor_booster/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/critfail()
/obj/item/mecha_parts/mecha_equipment/destroy()
/obj/item/mecha_parts/mecha_equipment/detach(atom/moveto=null)
/obj/item/mecha_parts/mecha_equipment/do_after_cooldown(target=1)
/obj/item/mecha_parts/mecha_equipment/generator
/obj/item/mecha_parts/mecha_equipment/generator/New()
/obj/item/mecha_parts/mecha_equipment/generator/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/generator/action(target)
/obj/item/mecha_parts/mecha_equipment/generator/attackby(weapon,mob/user)
/obj/item/mecha_parts/mecha_equipment/generator/critfail()
/obj/item/mecha_parts/mecha_equipment/generator/detach()
/obj/item/mecha_parts/mecha_equipment/generator/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/generator/init()
/obj/item/mecha_parts/mecha_equipment/generator/load_fuel(var/obj/item/stack/sheet/P)
/obj/item/mecha_parts/mecha_equipment/generator/nuclear
/obj/item/mecha_parts/mecha_equipment/generator/nuclear/critfail()
/obj/item/mecha_parts/mecha_equipment/generator/nuclear/init()
/obj/item/mecha_parts/mecha_equipment/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/gravcatapult
/obj/item/mecha_parts/mecha_equipment/gravcatapult/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/gravcatapult/action(atom/movable/target)
/obj/item/mecha_parts/mecha_equipment/gravcatapult/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/is_melee()
/obj/item/mecha_parts/mecha_equipment/is_ranged()
/obj/item/mecha_parts/mecha_equipment/log_message(message)
/obj/item/mecha_parts/mecha_equipment/occupant_message(message)
/obj/item/mecha_parts/mecha_equipment/repair_droid
/obj/item/mecha_parts/mecha_equipment/repair_droid/New()
/obj/item/mecha_parts/mecha_equipment/repair_droid/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/repair_droid/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/repair_droid/destroy()
/obj/item/mecha_parts/mecha_equipment/repair_droid/detach()
/obj/item/mecha_parts/mecha_equipment/repair_droid/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/set_ready_state(state)
/obj/item/mecha_parts/mecha_equipment/teleporter
/obj/item/mecha_parts/mecha_equipment/teleporter/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/New()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/attach(obj/mecha/M)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/can_attach(obj/mecha/M)
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/detach()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/dyngetcharge()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tesla_energy_relay/get_power_channel(var/area/A)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/New()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/action(var/obj/item/stack/cable_coil/target)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/attach()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/can_attach(obj/mecha/working/M)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/destroy()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/detach()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/dismantleFloor(var/turf/new_turf)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/layCable(var/turf/new_turf)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/load_cable(var/obj/item/stack/cable_coil/CC)
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/reset()
/obj/item/mecha_parts/mecha_equipment/tool/cable_layer/use_cable(amount)
/obj/item/mecha_parts/mecha_equipment/tool/drill
/obj/item/mecha_parts/mecha_equipment/tool/drill/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/drill/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/drill/diamonddrill
/obj/item/mecha_parts/mecha_equipment/tool/drill/diamonddrill/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/drill/diamonddrill/can_attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/New()
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/can_attach(obj/mecha/working/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/extinguisher/on_reagent_change()
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/hydraulic_clamp/can_attach(obj/mecha/working/ripley/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/rcd
/obj/item/mecha_parts/mecha_equipment/tool/rcd/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/rcd/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/rcd/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp/attach(obj/mecha/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/safety_clamp/can_attach(obj/mecha/working/ripley/M as obj)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/Exit(atom/movable/O)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/New()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/action(var/mob/living/carbon/target)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/allow_drop()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/can_attach(obj/mecha/medical/M)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/destroy()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/detach()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_available_reagents()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_occupant_dam()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_occupant_reagents()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/get_occupant_stats()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/go_out()
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/inject_reagent(var/datum/reagent/R,var/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/SG)
/obj/item/mecha_parts/mecha_equipment/tool/sleeper/update_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/New()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/Topic(href,href_list)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/action(atom/movable/target)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/add_known_reagent(r_id,r_name)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/analyze_reagents(atom/A)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/can_attach(obj/mecha/medical/M)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/critfail()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/detach()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_current_reagents()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_reagents_form()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_reagents_list()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/get_reagents_page()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/load_syringe(obj/item/weapon/reagent_containers/syringe/S)
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/on_reagent_change()
/obj/item/mecha_parts/mecha_equipment/tool/syringe_gun/update_equip_info()
/obj/item/mecha_parts/mecha_equipment/update_chassis_page()
/obj/item/mecha_parts/mecha_equipment/update_equip_info()
/obj/item/mecha_parts/mecha_equipment/weapon
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/Topic(href, href_list)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/action_checks(atom/target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/carbine
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/lmg
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/lmg/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/banana_mortar
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/banana_mortar/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/banana_mortar/can_attach(obj/mecha/combat/honker/M as obj)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang/clusterbang
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang/clusterbang/limited/get_equip_info()
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/flashbang/clusterbang/limited/rearm()
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/mousetrap_mortar
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/mousetrap_mortar/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/missile_rack/mousetrap_mortar/can_attach(obj/mecha/combat/honker/M as obj)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/rearm()
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/scattershot
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/scattershot/action(atom/target)
/obj/item/mecha_parts/mecha_equipment/weapon/ballistic/silenced
/obj/item/mecha_parts/mecha_equipment/weapon/can_attach(var/obj/mecha/combat/M as obj)
/obj/item/mecha_parts/mecha_equipment/weapon/energy
/obj/item/mecha_parts/mecha_equipment/weapon/energy/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/energy/ion
/obj/item/mecha_parts/mecha_equipment/weapon/energy/laser
/obj/item/mecha_parts/mecha_equipment/weapon/energy/laser/heavy
/obj/item/mecha_parts/mecha_equipment/weapon/energy/pulse
/obj/item/mecha_parts/mecha_equipment/weapon/energy/taser
/obj/item/mecha_parts/mecha_equipment/weapon/honker
/obj/item/mecha_parts/mecha_equipment/weapon/honker/action(target)
/obj/item/mecha_parts/mecha_equipment/weapon/honker/can_attach(obj/mecha/combat/honker/M as obj)
/obj/item/mecha_parts/mecha_equipment/wormhole_generator
/obj/item/mecha_parts/mecha_equipment/wormhole_generator/action(atom/target)
/obj/item/mecha_parts/mecha_tracking
/obj/item/mecha_parts/mecha_tracking/emp_act()
/obj/item/mecha_parts/mecha_tracking/ex_act()
/obj/item/mecha_parts/mecha_tracking/get_mecha_info()
/obj/item/mecha_parts/mecha_tracking/get_mecha_log()
/obj/item/mecha_parts/mecha_tracking/in_mecha()
/obj/item/mecha_parts/mecha_tracking/shock()
/obj/item/mecha_parts/part/durand_armour
/obj/item/mecha_parts/part/durand_head
/obj/item/mecha_parts/part/durand_left_arm
/obj/item/mecha_parts/part/durand_left_leg
/obj/item/mecha_parts/part/durand_right_arm
/obj/item/mecha_parts/part/durand_right_leg
/obj/item/mecha_parts/part/durand_torso
/obj/item/mecha_parts/part/gygax_armour
/obj/item/mecha_parts/part/gygax_head
/obj/item/mecha_parts/part/gygax_left_arm
/obj/item/mecha_parts/part/gygax_left_leg
/obj/item/mecha_parts/part/gygax_right_arm
/obj/item/mecha_parts/part/gygax_right_leg
/obj/item/mecha_parts/part/gygax_torso
/obj/item/mecha_parts/part/honker_head
/obj/item/mecha_parts/part/honker_left_arm
/obj/item/mecha_parts/part/honker_left_leg
/obj/item/mecha_parts/part/honker_right_arm
/obj/item/mecha_parts/part/honker_right_leg
/obj/item/mecha_parts/part/honker_torso
/obj/item/mecha_parts/part/odysseus_head
/obj/item/mecha_parts/part/odysseus_left_arm
/obj/item/mecha_parts/part/odysseus_left_leg
/obj/item/mecha_parts/part/odysseus_right_arm
/obj/item/mecha_parts/part/odysseus_right_leg
/obj/item/mecha_parts/part/odysseus_torso
/obj/item/mecha_parts/part/phazon_head
/obj/item/mecha_parts/part/phazon_left_arm
/obj/item/mecha_parts/part/phazon_left_leg
/obj/item/mecha_parts/part/phazon_right_arm
/obj/item/mecha_parts/part/phazon_right_leg
/obj/item/mecha_parts/part/phazon_torso
/obj/item/mecha_parts/part/ripley_left_arm
/obj/item/mecha_parts/part/ripley_left_leg
/obj/item/mecha_parts/part/ripley_right_arm
/obj/item/mecha_parts/part/ripley_right_leg
/obj/item/mecha_parts/part/ripley_torso
/obj/item/missile
/obj/item/missile/throw_impact(atom/hit_atom)
/obj/item/mob_can_equip(M as mob, slot, disable_warning = 0)
/obj/item/mob_check_equip(M as mob, slot, disable_warning = 0)
/obj/item/moved(mob/user as mob, old_loc as turf)
/obj/item/nutrient
/obj/item/nutrient/New()
/obj/item/nutrient/ez
/obj/item/nutrient/ez/New()
/obj/item/nutrient/l4z
/obj/item/nutrient/l4z/New()
/obj/item/nutrient/rh
/obj/item/nutrient/rh/New()
/obj/item/on_enter_storage(obj/item/weapon/storage/S as obj)
/obj/item/on_exit_storage(obj/item/weapon/storage/S as obj)
/obj/item/on_found(mob/finder as mob)
/obj/item/part/computer
/obj/item/part/computer/ai_holder
/obj/item/part/computer/ai_holder/attack_hand(mob/user as mob)
/obj/item/part/computer/ai_holder/attackby(obj/I as obj,mob/user as mob)
/obj/item/part/computer/allow_attackby(var/obj/item/I as obj,var/mob/user as mob)
/obj/item/part/computer/cardslot
/obj/item/part/computer/cardslot/addfile(var/datum/file/F)
/obj/item/part/computer/cardslot/attackby(var/obj/item/I as obj, var/mob/user as mob)
/obj/item/part/computer/cardslot/authenticate()
/obj/item/part/computer/cardslot/dual
/obj/item/part/computer/cardslot/dual/insert(var/obj/item/weapon/card/card,var/slot = 0)
/obj/item/part/computer/cardslot/dual/remove(var/obj/item/weapon/card/card)
/obj/item/part/computer/cardslot/insert(var/obj/item/weapon/card/card)
/obj/item/part/computer/cardslot/remove()
/obj/item/part/computer/circuitboard
/obj/item/part/computer/init(var/obj/machinery/computer/target)
/obj/item/part/computer/networking
/obj/item/part/computer/networking/area
/obj/item/part/computer/networking/area/get_machines(var/typekey)
/obj/item/part/computer/networking/area/verify_machine(var/obj/previous)
/obj/item/part/computer/networking/cable
/obj/item/part/computer/networking/cable/get_machines(var/typekey)
/obj/item/part/computer/networking/cable/verify_machine(var/obj/previous)
/obj/item/part/computer/networking/cameras
/obj/item/part/computer/networking/cameras/get_machines(var/datum/file/camnet_key/key)
/obj/item/part/computer/networking/cameras/verify_machine(var/obj/machinery/camera/C,var/datum/file/camnet_key/key = null)
/obj/item/part/computer/networking/connect_to(var/typekey,var/atom/previous)
/obj/item/part/computer/networking/get_machines(var/typekey)
/obj/item/part/computer/networking/prox
/obj/item/part/computer/networking/prox/get_machines(var/typekey)
/obj/item/part/computer/networking/prox/verify_machine(var/obj/previous)
/obj/item/part/computer/networking/radio
/obj/item/part/computer/networking/radio/get_machines(var/typekey)
/obj/item/part/computer/networking/radio/init()
/obj/item/part/computer/networking/radio/post_signal(var/datum/signal/signal)
/obj/item/part/computer/networking/radio/receive_signal(var/datum/signal/signal)
/obj/item/part/computer/networking/radio/set_frequency(new_frequency)
/obj/item/part/computer/networking/radio/subspace
/obj/item/part/computer/networking/radio/verify_machine(var/obj/previous)
/obj/item/part/computer/networking/verify_machine(var/obj/previous)
/obj/item/part/computer/storage
/obj/item/part/computer/storage/New()
/obj/item/part/computer/storage/addfile(var/datum/file/F,var/forced = 0)
/obj/item/part/computer/storage/hdd
/obj/item/part/computer/storage/hdd/big
/obj/item/part/computer/storage/hdd/gigantic
/obj/item/part/computer/storage/init(var/obj/machinery/computer/target)
/obj/item/part/computer/storage/removable
/obj/item/part/computer/storage/removable/addfile(var/datum/file/F)
/obj/item/part/computer/storage/removable/attackby(obj/O as obj, mob/user as mob)
/obj/item/part/computer/storage/removable/eject_disk(var/forced = 0)
/obj/item/part/computer/storage/removefile(var/datum/file/F,var/forced = 0)
/obj/item/part/computer/toybox
/obj/item/part/computer/toybox/dispense()
/obj/item/pestkiller
/obj/item/pestkiller/New()
/obj/item/pestkiller/carbaryl
/obj/item/pestkiller/carbaryl/New()
/obj/item/pestkiller/lindane
/obj/item/pestkiller/lindane/New()
/obj/item/pestkiller/phosmet
/obj/item/pestkiller/phosmet/New()
/obj/item/pickup(mob/user)
/obj/item/pipe
/obj/item/pipe/Move()
/obj/item/pipe/New(var/loc, var/pipe_type as num, var/dir as num, var/obj/machinery/atmospherics/make_from = null)
/obj/item/pipe/attack_self(mob/user as mob)
/obj/item/pipe/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/item/pipe/get_hdir()
/obj/item/pipe/get_pdir()
/obj/item/pipe/get_pipe_dir()
/obj/item/pipe/update()
/obj/item/pipe/verb/rotate()
/obj/item/pipe_meter
/obj/item/pipe_meter/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/item/pizzabox
/obj/item/pizzabox/attack_hand( mob/user as mob )
/obj/item/pizzabox/attack_self( mob/user as mob )
/obj/item/pizzabox/attackby( obj/item/I as obj, mob/user as mob )
/obj/item/pizzabox/margherita/New()
/obj/item/pizzabox/meat/New()
/obj/item/pizzabox/mushroom/New()
/obj/item/pizzabox/update_icon()
/obj/item/pizzabox/vegetable/New()
/obj/item/pod_parts
/obj/item/pod_parts/core
/obj/item/powerarmor
/obj/item/powerarmor/atmoseal
/obj/item/powerarmor/atmoseal/adminbus
/obj/item/powerarmor/atmoseal/optional
/obj/item/powerarmor/atmoseal/optional/adminbus
/obj/item/powerarmor/atmoseal/optional/helmtoggle(sudden = 0, manual = 0)
/obj/item/powerarmor/atmoseal/toggle(sudden = 0)
/obj/item/powerarmor/checkpower()
/obj/item/powerarmor/power
/obj/item/powerarmor/power/nuclear
/obj/item/powerarmor/power/nuclear/checkpower()
/obj/item/powerarmor/power/nuclear/process()
/obj/item/powerarmor/power/plasma
/obj/item/powerarmor/power/plasma/checkpower()
/obj/item/powerarmor/power/plasma/process()
/obj/item/powerarmor/power/powercell
/obj/item/powerarmor/power/powercell/checkpower()
/obj/item/powerarmor/power/powercell/process()
/obj/item/powerarmor/process()
/obj/item/powerarmor/reactive
/obj/item/powerarmor/reactive/Centcom
/obj/item/powerarmor/reactive/toggle(sudden = 0)
/obj/item/powerarmor/servos
/obj/item/powerarmor/servos/toggle(sudden = 0)
/obj/item/powerarmor/toggle()
/obj/item/projectile
/obj/item/projectile/Bump(atom/A as mob|obj|turf|area)
/obj/item/projectile/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/item/projectile/Range()
/obj/item/projectile/animate
/obj/item/projectile/animate/Bump(var/atom/change)
/obj/item/projectile/beam
/obj/item/projectile/beam/captain
/obj/item/projectile/beam/cleanup(reference)
/obj/item/projectile/beam/deathlaser
/obj/item/projectile/beam/drone
/obj/item/projectile/beam/dumbfire(var/dir)
/obj/item/projectile/beam/ehf_beam
/obj/item/projectile/beam/emitter
/obj/item/projectile/beam/heavylaser
/obj/item/projectile/beam/lastertag/blue
/obj/item/projectile/beam/lastertag/blue/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/beam/lastertag/omni
/obj/item/projectile/beam/lastertag/omni/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/beam/lastertag/red
/obj/item/projectile/beam/lastertag/red/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/beam/lightning
/obj/item/projectile/beam/lightning/adjustAngle(angle)
/obj/item/projectile/beam/lightning/on_hit(atom/target, blocked = 0)
/obj/item/projectile/beam/lightning/process()
/obj/item/projectile/beam/mindflayer
/obj/item/projectile/beam/mindflayer/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/beam/practice
/obj/item/projectile/beam/process()
/obj/item/projectile/beam/pulse
/obj/item/projectile/beam/pulse/drone
/obj/item/projectile/beam/pulse/heavy
/obj/item/projectile/beam/pulse/heavy/Bump(atom/A)
/obj/item/projectile/beam/pulse/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/beam/sniper
/obj/item/projectile/beam/stun
/obj/item/projectile/beam/xray
/obj/item/projectile/bullet
/obj/item/projectile/bullet/a762
/obj/item/projectile/bullet/blank
/obj/item/projectile/bullet/buck
/obj/item/projectile/bullet/burstbullet
/obj/item/projectile/bullet/cyanideround
/obj/item/projectile/bullet/dart/metalfoam
/obj/item/projectile/bullet/dart/metalfoam/New()
/obj/item/projectile/bullet/dart/syringe
/obj/item/projectile/bullet/gyro
/obj/item/projectile/bullet/gyro/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/incendiary
/obj/item/projectile/bullet/incendiary/mech
/obj/item/projectile/bullet/incendiary/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/incendiary/shell
/obj/item/projectile/bullet/midbullet10
/obj/item/projectile/bullet/midbullet12
/obj/item/projectile/bullet/midbullet45
/obj/item/projectile/bullet/midbullet9
/obj/item/projectile/bullet/mime
/obj/item/projectile/bullet/mime/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/neurotoxin
/obj/item/projectile/bullet/neurotoxin/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/bullet/rubberbullet
/obj/item/projectile/bullet/slug
/obj/item/projectile/bullet/stunshot
/obj/item/projectile/bullet/suffocationbullet
/obj/item/projectile/bullet/weakbullet/booze
/obj/item/projectile/bullet/weakbullet/booze/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/change
/obj/item/projectile/change/if(istype(M, /mob/living) && M.stat != 2)
/obj/item/projectile/change/on_hit(var/atom/change)
/obj/item/projectile/check_fire(var/mob/living/target as mob, var/mob/living/user as mob)
/obj/item/projectile/clown
/obj/item/projectile/clown/Bump(atom/A as mob|obj|turf|area)
/obj/item/projectile/delete()
/obj/item/projectile/dumbfire(var/dir)
/obj/item/projectile/energy
/obj/item/projectile/energy/bolt
/obj/item/projectile/energy/bolt/large
/obj/item/projectile/energy/dart
/obj/item/projectile/energy/declone
/obj/item/projectile/energy/electrode
/obj/item/projectile/energy/electroderevolver
/obj/item/projectile/energy/floramut
/obj/item/projectile/energy/floramut/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/energy/florayield
/obj/item/projectile/energy/florayield/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/energy/plasma
/obj/item/projectile/energy/sonic
/obj/item/projectile/energy/sonic/split()
/obj/item/projectile/forcebolt
/obj/item/projectile/forcebolt/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/forcebolt/strong
/obj/item/projectile/hivebotbullet
/obj/item/projectile/ion
/obj/item/projectile/ion/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/jungle_spear
/obj/item/projectile/kinetic
/obj/item/projectile/kinetic/Bump(atom/A as mob|obj|turf|area)
/obj/item/projectile/kinetic/New()
/obj/item/projectile/kinetic/Range()
/obj/item/projectile/kinetic/on_hit(var/atom/target)
/obj/item/projectile/magic
/obj/item/projectile/magic/animate
/obj/item/projectile/magic/animate/Bump(var/atom/change)
/obj/item/projectile/magic/change
/obj/item/projectile/magic/change/on_hit(var/atom/change)
/obj/item/projectile/magic/death
/obj/item/projectile/magic/door
/obj/item/projectile/magic/door/on_hit(var/atom/target)
/obj/item/projectile/magic/fireball
/obj/item/projectile/magic/fireball/on_hit(var/target)
/obj/item/projectile/magic/resurrection
/obj/item/projectile/magic/resurrection/on_hit(var/mob/living/carbon/target)
/obj/item/projectile/magic/teleport
/obj/item/projectile/magic/teleport/on_hit(var/mob/target)
/obj/item/projectile/meteor
/obj/item/projectile/meteor/Bump(atom/A as mob|obj|turf|area)
/obj/item/projectile/neurotox
/obj/item/projectile/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/process()
/obj/item/projectile/temp
/obj/item/projectile/temp/basilisk
/obj/item/projectile/temp/on_hit(var/atom/target, var/blocked = 0)
/obj/item/projectile/test
/obj/item/projectile/test/Bump(atom/A as mob|obj|turf|area)
/obj/item/projectile/test/process()
/obj/item/queen_bee
/obj/item/radio/integrated
/obj/item/radio/integrated/New()
/obj/item/radio/integrated/beepsky
/obj/item/radio/integrated/beepsky/Destroy()
/obj/item/radio/integrated/beepsky/New()
/obj/item/radio/integrated/beepsky/Topic(href, href_list)
/obj/item/radio/integrated/beepsky/receive_signal(datum/signal/signal)
/obj/item/radio/integrated/generate_menu()
/obj/item/radio/integrated/mule
/obj/item/radio/integrated/mule/Destroy()
/obj/item/radio/integrated/mule/New()
/obj/item/radio/integrated/mule/Topic(href, href_list)
/obj/item/radio/integrated/mule/receive_signal(datum/signal/signal)
/obj/item/radio/integrated/post_signal(var/freq, var/key, var/value, var/key2, var/value2, var/key3, var/value3, s_filter)
/obj/item/radio/integrated/signal
/obj/item/radio/integrated/signal/New()
/obj/item/radio/integrated/signal/initialize()
/obj/item/radio/integrated/signal/send_signal(message="ACTIVATE")
/obj/item/radio/integrated/signal/set_frequency(new_frequency)
/obj/item/robot_parts
/obj/item/robot_parts/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/robot_parts/chest
/obj/item/robot_parts/chest/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/robot_parts/head
/obj/item/robot_parts/head/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/robot_parts/l_arm
/obj/item/robot_parts/l_leg
/obj/item/robot_parts/r_arm
/obj/item/robot_parts/r_leg
/obj/item/robot_parts/robot_component
/obj/item/robot_parts/robot_component/actuator
/obj/item/robot_parts/robot_component/armour
/obj/item/robot_parts/robot_component/binary_communication_device
/obj/item/robot_parts/robot_component/camera
/obj/item/robot_parts/robot_component/diagnosis_unit
/obj/item/robot_parts/robot_component/radio
/obj/item/robot_parts/robot_suit
/obj/item/robot_parts/robot_suit/New()
/obj/item/robot_parts/robot_suit/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/robot_parts/robot_suit/check_completion()
/obj/item/robot_parts/robot_suit/updateicon()
/obj/item/roller
/obj/item/roller/attack_self(mob/user)
/obj/item/rust_fuel_assembly_port_frame
/obj/item/rust_fuel_assembly_port_frame/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/rust_fuel_assembly_port_frame/try_build(turf/on_wall)
/obj/item/rust_fuel_compressor_frame
/obj/item/rust_fuel_compressor_frame/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/rust_fuel_compressor_frame/try_build(turf/on_wall)
/obj/item/sec_seg_key
/obj/item/seeds
/obj/item/seeds/amanitamycelium
/obj/item/seeds/amauri
/obj/item/seeds/ambrosiadeusseed
/obj/item/seeds/ambrosiavulgarisseed
/obj/item/seeds/angelmycelium
/obj/item/seeds/appleseed
/obj/item/seeds/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/seeds/bananaseed
/obj/item/seeds/berryseed
/obj/item/seeds/bloodtomatoseed
/obj/item/seeds/bluespacetomatoseed
/obj/item/seeds/bluetomatoseed
/obj/item/seeds/brownmold
/obj/item/seeds/cabbageseed
/obj/item/seeds/carrotseed
/obj/item/seeds/cashseed
/obj/item/seeds/chantermycelium
/obj/item/seeds/cherryseed
/obj/item/seeds/chiliseed
/obj/item/seeds/chillighost
/obj/item/seeds/cocoapodseed
/obj/item/seeds/coffee_arabica_seed
/obj/item/seeds/coffee_robusta_seed
/obj/item/seeds/cornseed
/obj/item/seeds/deathberryseed
/obj/item/seeds/deathnettleseed
/obj/item/seeds/deathnettleseed/harvest(mob/user = usr)
/obj/item/seeds/eggplantseed
/obj/item/seeds/eggyseed
/obj/item/seeds/eggyseed/harvest(mob/user = usr)
/obj/item/seeds/gelthi
/obj/item/seeds/gibtomato/harvest(mob/user = usr)
/obj/item/seeds/glowberryseed
/obj/item/seeds/glowshroom
/obj/item/seeds/goldappleseed
/obj/item/seeds/grapeseed
/obj/item/seeds/grassseed
/obj/item/seeds/grassseed/harvest(mob/user = usr)
/obj/item/seeds/greengrapeseed
/obj/item/seeds/harebell
/obj/item/seeds/harvest(mob/user = usr)
/obj/item/seeds/icepepperseed
/obj/item/seeds/jurlmah
/obj/item/seeds/killertomatoseed
/obj/item/seeds/koiseed
/obj/item/seeds/kudzuseed
/obj/item/seeds/kudzuseed/attack_self(mob/user as mob)
/obj/item/seeds/lemonseed
/obj/item/seeds/libertymycelium
/obj/item/seeds/limeseed
/obj/item/seeds/moonflowerseed
/obj/item/seeds/nettleseed
/obj/item/seeds/nettleseed/harvest(mob/user = usr)
/obj/item/seeds/novaflowerseed
/obj/item/seeds/orangeseed
/obj/item/seeds/plastiseed
/obj/item/seeds/plumpmycelium
/obj/item/seeds/poisonberryseed
/obj/item/seeds/poisonedappleseed
/obj/item/seeds/poppyseed
/obj/item/seeds/potatoseed
/obj/item/seeds/pumpkinseed
/obj/item/seeds/reishimycelium
/obj/item/seeds/replicapod
/obj/item/seeds/replicapod/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/seeds/replicapod/harvest(mob/user = usr)
/obj/item/seeds/replicapod/transfer_personality(var/client/player)
/obj/item/seeds/riceseed
/obj/item/seeds/soyaseed
/obj/item/seeds/sugarcaneseed
/obj/item/seeds/sunflowerseed
/obj/item/seeds/surik
/obj/item/seeds/tea_aspera_seed
/obj/item/seeds/tea_astra_seed
/obj/item/seeds/telriis
/obj/item/seeds/thaadra
/obj/item/seeds/tobacco_seed
/obj/item/seeds/tobacco_space_seed
/obj/item/seeds/tomatoseed
/obj/item/seeds/towermycelium
/obj/item/seeds/vale
/obj/item/seeds/walkingmushroommycelium
/obj/item/seeds/watermelonseed
/obj/item/seeds/weeds
/obj/item/seeds/wheatseed
/obj/item/seeds/whitebeetseed
/obj/item/sign
/obj/item/sign/attackby(obj/item/tool as obj, mob/user as mob)
/obj/item/slime_color
/obj/item/slime_color/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/slime_extract
/obj/item/slime_extract/New()
/obj/item/slime_extract/adamantine
/obj/item/slime_extract/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/slime_extract/black
/obj/item/slime_extract/blue
/obj/item/slime_extract/darkblue
/obj/item/slime_extract/darkpurple
/obj/item/slime_extract/gold
/obj/item/slime_extract/green
/obj/item/slime_extract/grey
/obj/item/slime_extract/lightpink
/obj/item/slime_extract/metal
/obj/item/slime_extract/oil
/obj/item/slime_extract/orange
/obj/item/slime_extract/pink
/obj/item/slime_extract/purple
/obj/item/slime_extract/red
/obj/item/slime_extract/silver
/obj/item/slime_extract/yellow
/obj/item/smallDelivery
/obj/item/smallDelivery/attack_self(mob/user as mob)
/obj/item/smallDelivery/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/solar_assembly
/obj/item/solar_assembly/attack_hand(var/mob/user)
/obj/item/solar_assembly/attackby(var/obj/item/weapon/W, var/mob/user)
/obj/item/solar_assembly/give_glass()
/obj/item/stack
/obj/item/stack/Destroy()
/obj/item/stack/New(var/loc, var/amount=null)
/obj/item/stack/Topic(href, href_list)
/obj/item/stack/add_to_stacks(mob/usr as mob)
/obj/item/stack/attack_hand(mob/user as mob)
/obj/item/stack/attack_self(mob/user as mob)
/obj/item/stack/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/stack/cable_coil
/obj/item/stack/cable_coil/New(loc, length = 30, var/param_color = null)
/obj/item/stack/cable_coil/attack(mob/M as mob, mob/user as mob)
/obj/item/stack/cable_coil/attackby(obj/item/weapon/W, mob/user)
/obj/item/stack/cable_coil/blue
/obj/item/stack/cable_coil/cable_join(obj/structure/cable/C, mob/user)
/obj/item/stack/cable_coil/cut
/obj/item/stack/cable_coil/cut/New(loc)
/obj/item/stack/cable_coil/cyan
/obj/item/stack/cable_coil/examine()
/obj/item/stack/cable_coil/give(var/extra)
/obj/item/stack/cable_coil/green
/obj/item/stack/cable_coil/heavyduty
/obj/item/stack/cable_coil/orange
/obj/item/stack/cable_coil/pink
/obj/item/stack/cable_coil/random/New()
/obj/item/stack/cable_coil/suicide_act(mob/user)
/obj/item/stack/cable_coil/turf_place(turf/simulated/floor/F, mob/user)
/obj/item/stack/cable_coil/update_icon()
/obj/item/stack/cable_coil/use(var/used)
/obj/item/stack/cable_coil/verb/make_restraint()
/obj/item/stack/cable_coil/white
/obj/item/stack/cable_coil/yellow
/obj/item/stack/copy_evidences(obj/item/stack/from as obj)
/obj/item/stack/examine()
/obj/item/stack/light_w
/obj/item/stack/light_w/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/stack/list_recipes(mob/user as mob, recipes_sublist)
/obj/item/stack/medical
/obj/item/stack/medical/advanced/bruise_pack
/obj/item/stack/medical/advanced/bruise_pack/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/stack/medical/advanced/ointment
/obj/item/stack/medical/advanced/ointment/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/stack/medical/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/stack/medical/bruise_pack
/obj/item/stack/medical/bruise_pack/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/stack/medical/bruise_pack/tajaran
/obj/item/stack/medical/ointment
/obj/item/stack/medical/ointment/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/stack/medical/ointment/tajaran
/obj/item/stack/medical/splint
/obj/item/stack/medical/splint/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/stack/medical/splint/single
/obj/item/stack/nanopaste
/obj/item/stack/nanopaste/attack(mob/living/M as mob, mob/user as mob)
/obj/item/stack/rods
/obj/item/stack/rods/attack_self(mob/user as mob)
/obj/item/stack/rods/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/stack/sheet
/obj/item/stack/sheet/animalhide/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/stack/sheet/animalhide/cat
/obj/item/stack/sheet/animalhide/corgi
/obj/item/stack/sheet/animalhide/human
/obj/item/stack/sheet/animalhide/lizard
/obj/item/stack/sheet/animalhide/monkey
/obj/item/stack/sheet/animalhide/random
/obj/item/stack/sheet/animalhide/random/New()
/obj/item/stack/sheet/animalhide/xeno
/obj/item/stack/sheet/cardboard
/obj/item/stack/sheet/cardboard/New(var/loc, var/amount=null)
/obj/item/stack/sheet/cloth
/obj/item/stack/sheet/fur
/obj/item/stack/sheet/glass
/obj/item/stack/sheet/glass/attack_self(mob/user as mob)
/obj/item/stack/sheet/glass/attackby(obj/item/W, mob/user)
/obj/item/stack/sheet/glass/construct_window(mob/user as mob)
/obj/item/stack/sheet/glass/cyborg
/obj/item/stack/sheet/glass/plasmaglass/attack_self(mob/user as mob)
/obj/item/stack/sheet/glass/plasmarglass/attack_self(mob/user as mob)
/obj/item/stack/sheet/hairlesshide
/obj/item/stack/sheet/leather
/obj/item/stack/sheet/metal
/obj/item/stack/sheet/metal/New(var/loc, var/amount=null)
/obj/item/stack/sheet/metal/cyborg
/obj/item/stack/sheet/mineral/adamantine
/obj/item/stack/sheet/mineral/clown
/obj/item/stack/sheet/mineral/clown/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/diamond
/obj/item/stack/sheet/mineral/diamond/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/enruranium
/obj/item/stack/sheet/mineral/gold
/obj/item/stack/sheet/mineral/gold/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/mythril
/obj/item/stack/sheet/mineral/plasma
/obj/item/stack/sheet/mineral/plasma/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/plastic
/obj/item/stack/sheet/mineral/plastic/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/plastic/cyborg
/obj/item/stack/sheet/mineral/sandstone
/obj/item/stack/sheet/mineral/sandstone/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/silver
/obj/item/stack/sheet/mineral/silver/New(var/loc, var/amount=null)
/obj/item/stack/sheet/mineral/uranium
/obj/item/stack/sheet/mineral/uranium/New(var/loc, var/amount=null)
/obj/item/stack/sheet/plasmaglass
/obj/item/stack/sheet/plasmaglass/attackby(obj/item/W, mob/user)
/obj/item/stack/sheet/plasmaglass/construct_window(mob/user as mob)
/obj/item/stack/sheet/plasmarglass
/obj/item/stack/sheet/plasteel
/obj/item/stack/sheet/plasteel/New(var/loc, var/amount=null)
/obj/item/stack/sheet/rglass
/obj/item/stack/sheet/rglass/attack_self(mob/user as mob)
/obj/item/stack/sheet/rglass/construct_window(mob/user as mob)
/obj/item/stack/sheet/rglass/cyborg
/obj/item/stack/sheet/wetleather
/obj/item/stack/sheet/wetleather/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/item/stack/sheet/wood
/obj/item/stack/sheet/wood/New(var/loc, var/amount=null)
/obj/item/stack/sheet/wood/cyborg
/obj/item/stack/sheet/xenochitin
/obj/item/stack/tile/carpet
/obj/item/stack/tile/grass
/obj/item/stack/tile/light
/obj/item/stack/tile/light/New(var/loc, var/amount=null)
/obj/item/stack/tile/light/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/stack/tile/plasteel
/obj/item/stack/tile/plasteel/New(var/loc, var/amount=null)
/obj/item/stack/tile/plasteel/build(turf/S as turf)
/obj/item/stack/tile/wood
/obj/item/stack/use(var/amount)
/obj/item/suicide_act(mob/user)
/obj/item/talk_into(mob/M as mob, var/text, var/channel=null)
/obj/item/tape
/obj/item/tape/Bumped(M as mob)
/obj/item/tape/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/item/tape/attack_hand(mob/user as mob)
/obj/item/tape/attack_paw(mob/user as mob)
/obj/item/tape/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/tape/breaktape(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/tape/engineering
/obj/item/tape/police
/obj/item/taperoll
/obj/item/taperoll/afterattack(var/atom/A, mob/user as mob)
/obj/item/taperoll/attack_self(mob/user as mob)
/obj/item/taperoll/engineering
/obj/item/taperoll/police
/obj/item/target
/obj/item/target/Destroy()
/obj/item/target/Move()
/obj/item/target/alien
/obj/item/target/attack_hand(mob/user as mob)
/obj/item/target/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/target/bullet_act(var/obj/item/projectile/Proj)
/obj/item/target/syndicate
/obj/item/tk_grab
/obj/item/tk_grab/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, proximity)
/obj/item/tk_grab/apply_focus_overlay()
/obj/item/tk_grab/attack(mob/living/M as mob, mob/living/user as mob, def_zone)
/obj/item/tk_grab/attack_self(mob/user as mob)
/obj/item/tk_grab/dropped(mob/user as mob)
/obj/item/tk_grab/equipped(var/mob/user, var/slot)
/obj/item/tk_grab/focus_object(var/obj/target, var/mob/living/user)
/obj/item/tk_grab/update_icon()
/obj/item/toy
/obj/item/toy/ammo/crossbow
/obj/item/toy/ammo/gun
/obj/item/toy/ammo/gun/update_icon()
/obj/item/toy/balloon
/obj/item/toy/balloon/New()
/obj/item/toy/balloon/afterattack(atom/A as mob|obj, mob/user as mob, proximity)
/obj/item/toy/balloon/attack(mob/living/carbon/human/M as mob, mob/user as mob)
/obj/item/toy/balloon/attackby(obj/O as obj, mob/user as mob)
/obj/item/toy/balloon/throw_impact(atom/hit_atom)
/obj/item/toy/balloon/update_icon()
/obj/item/toy/blink
/obj/item/toy/cards
/obj/item/toy/cards/New()
/obj/item/toy/cards/apply_card_vars(obj/item/toy/cards/newobj, obj/item/toy/cards/sourceobj)
/obj/item/toy/cards/cardhand
/obj/item/toy/cards/cardhand/Topic(href, href_list)
/obj/item/toy/cards/cardhand/apply_card_vars(obj/item/toy/cards/newobj,obj/item/toy/cards/sourceobj)
/obj/item/toy/cards/cardhand/attack_self(mob/user as mob)
/obj/item/toy/cards/cardhand/attackby(obj/item/toy/cards/singlecard/C, mob/living/user)
/obj/item/toy/cards/cardhand/interact(mob/user)
/obj/item/toy/cards/deck
/obj/item/toy/cards/deck/MouseDrop(atom/over_object)
/obj/item/toy/cards/deck/New()
/obj/item/toy/cards/deck/attack_hand(mob/user as mob)
/obj/item/toy/cards/deck/attack_self(mob/user as mob)
/obj/item/toy/cards/deck/attackby(obj/item/toy/cards/cardhand/C, mob/living/user)
/obj/item/toy/cards/deck/attackby(obj/item/toy/cards/singlecard/C, mob/living/user)
/obj/item/toy/cards/deck/black
/obj/item/toy/cards/deck/syndicate
/obj/item/toy/cards/deck/syndicate/black
/obj/item/toy/cards/singlecard
/obj/item/toy/cards/singlecard/apply_card_vars(obj/item/toy/cards/singlecard/newobj,obj/item/toy/cards/sourceobj)
/obj/item/toy/cards/singlecard/attack_self(mob/user)
/obj/item/toy/cards/singlecard/attackby(obj/item/I, mob/living/user)
/obj/item/toy/cards/singlecard/examine()
/obj/item/toy/cards/singlecard/verb/Flip()
/obj/item/toy/crayon
/obj/item/toy/crayon/afterattack(atom/target, mob/user as mob, proximity)
/obj/item/toy/crayon/attack(mob/M as mob, mob/user as mob)
/obj/item/toy/crayon/blue
/obj/item/toy/crayon/green
/obj/item/toy/crayon/mime
/obj/item/toy/crayon/mime/attack_self(mob/living/user as mob)
/obj/item/toy/crayon/orange
/obj/item/toy/crayon/purple
/obj/item/toy/crayon/rainbow
/obj/item/toy/crayon/rainbow/attack_self(mob/living/user as mob)
/obj/item/toy/crayon/red
/obj/item/toy/crayon/suicide_act(mob/user)
/obj/item/toy/crayon/yellow
/obj/item/toy/crossbow
/obj/item/toy/crossbow/afterattack(atom/target as mob|obj|turf|area, mob/user as mob, flag)
/obj/item/toy/crossbow/attack(mob/M as mob, mob/user as mob)
/obj/item/toy/crossbow/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/toy/crossbow/examine()
/obj/item/toy/crossbow/tommygun
/obj/item/toy/crossbow/tommygun/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/toy/gun
/obj/item/toy/gun/afterattack(atom/target as mob|obj|turf|area, mob/user as mob, flag)
/obj/item/toy/gun/attackby(obj/item/toy/ammo/gun/A as obj, mob/user as mob)
/obj/item/toy/gun/examine()
/obj/item/toy/katana
/obj/item/toy/nuke
/obj/item/toy/nuke/attack_self(mob/user)
/obj/item/toy/prize
/obj/item/toy/prize/attack_hand(mob/user as mob)
/obj/item/toy/prize/attack_self(mob/user as mob)
/obj/item/toy/prize/deathripley
/obj/item/toy/prize/durand
/obj/item/toy/prize/fireripley
/obj/item/toy/prize/gygax
/obj/item/toy/prize/honk
/obj/item/toy/prize/marauder
/obj/item/toy/prize/mauler
/obj/item/toy/prize/odysseus
/obj/item/toy/prize/phazon
/obj/item/toy/prize/ripley
/obj/item/toy/prize/seraph
/obj/item/toy/random
/obj/item/toy/random/New()
/obj/item/toy/snappop
/obj/item/toy/snappop/Crossed(H as mob|obj)
/obj/item/toy/snappop/throw_impact(atom/hit_atom)
/obj/item/toy/snappop/virus
/obj/item/toy/snappop/virus/throw_impact(atom/hit_atom)
/obj/item/toy/spinningtoy
/obj/item/toy/sword
/obj/item/toy/sword/attack_self(mob/user as mob)
/obj/item/toy/syndicateballoon
/obj/item/toy/tribble
/obj/item/toy/tribble/attack_self(mob/user as mob)
/obj/item/toy/tribble/attackby(var/obj/item/weapon/O as obj, var/mob/user as mob)
/obj/item/toy/tribble/dropped(mob/user as mob)
/obj/item/transfer_ai(var/choice as text, var/interaction as text, var/target, var/mob/U as mob)
/obj/item/trash
/obj/item/trash/attack(mob/M as mob, mob/living/user as mob)
/obj/item/trash/bowl
/obj/item/trash/bowl/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/trash/can
/obj/item/trash/candle
/obj/item/trash/candy
/obj/item/trash/cheesie
/obj/item/trash/chips
/obj/item/trash/liquidfood
/obj/item/trash/pistachios
/obj/item/trash/plate
/obj/item/trash/plate/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/trash/popcorn
/obj/item/trash/raisins
/obj/item/trash/semki
/obj/item/trash/snack_bowl
/obj/item/trash/sosjerky
/obj/item/trash/syndi_cakes
/obj/item/trash/tray
/obj/item/trash/waffles
/obj/item/ui_action_click()
/obj/item/updateSelfDialog()
/obj/item/verb/move_to_top()
/obj/item/verb/verb_pickup()
/obj/item/vox/armalis_amp
/obj/item/vox/armalis_armour
/obj/item/weapon
/obj/item/weapon/Bump(mob/M as mob)
/obj/item/weapon/FixOVein
/obj/item/weapon/SWF_uplink
/obj/item/weapon/SaySomething(var/word = null)
/obj/item/weapon/a_gift
/obj/item/weapon/a_gift/New()
/obj/item/weapon/a_gift/attack_self(mob/M as mob)
/obj/item/weapon/a_gift/ex_act()
/obj/item/weapon/aiModule
/obj/item/weapon/aiModule/core/freeformcore
/obj/item/weapon/aiModule/core/freeformcore/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/core/freeformcore/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/core/full/antimov
/obj/item/weapon/aiModule/core/full/asimov
/obj/item/weapon/aiModule/core/full/asimovpp
/obj/item/weapon/aiModule/core/full/corp
/obj/item/weapon/aiModule/core/full/custom
/obj/item/weapon/aiModule/core/full/custom/New()
/obj/item/weapon/aiModule/core/full/nanotrasen
/obj/item/weapon/aiModule/core/full/paladin
/obj/item/weapon/aiModule/core/full/robocop
/obj/item/weapon/aiModule/core/full/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/core/full/tyrant
/obj/item/weapon/aiModule/core/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/drone
/obj/item/weapon/aiModule/drone/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/install(var/obj/machinery/computer/C)
/obj/item/weapon/aiModule/ion/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/reset
/obj/item/weapon/aiModule/reset/purge
/obj/item/weapon/aiModule/reset/purge/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/reset/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/supplied
/obj/item/weapon/aiModule/supplied/freeform
/obj/item/weapon/aiModule/supplied/freeform/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/supplied/freeform/install(var/mob/living/silicon/S,var/mob/user)
/obj/item/weapon/aiModule/supplied/freeform/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/supplied/oxygen
/obj/item/weapon/aiModule/supplied/protectStation
/obj/item/weapon/aiModule/supplied/quarantine
/obj/item/weapon/aiModule/supplied/safeguard
/obj/item/weapon/aiModule/supplied/safeguard/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/supplied/safeguard/install(var/mob/living/silicon/S,var/mob/user)
/obj/item/weapon/aiModule/supplied/safeguard/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/supplied/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/syndicate
/obj/item/weapon/aiModule/syndicate/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/syndicate/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/aiModule/zeroth/oneHuman
/obj/item/weapon/aiModule/zeroth/oneHuman/attack_self(var/mob/user as mob)
/obj/item/weapon/aiModule/zeroth/oneHuman/install(var/mob/living/silicon/S,var/mob/user)
/obj/item/weapon/aiModule/zeroth/oneHuman/transmitInstructions(var/mob/living/silicon/target, var/mob/sender)
/obj/item/weapon/aiModule/zeroth/transmitInstructions(var/mob/living/silicon/ai/target, var/mob/sender)
/obj/item/weapon/airalarm_electronics
/obj/item/weapon/airlock_electronics
/obj/item/weapon/airlock_electronics/Topic(href, href_list)
/obj/item/weapon/airlock_electronics/attack_self(mob/user as mob)
/obj/item/weapon/airlock_electronics/toggle_access(var/acc)
/obj/item/weapon/am_containment
/obj/item/weapon/am_containment/ex_act(severity)
/obj/item/weapon/am_containment/usefuel(var/wanted)
/obj/item/weapon/anobattery
/obj/item/weapon/anobattery/New()
/obj/item/weapon/anobattery/UpdateSprite()
/obj/item/weapon/anodevice
/obj/item/weapon/anodevice/Destroy()
/obj/item/weapon/anodevice/New()
/obj/item/weapon/anodevice/Topic(href, href_list)
/obj/item/weapon/anodevice/UpdateSprite()
/obj/item/weapon/anodevice/attack_self(var/mob/user as mob)
/obj/item/weapon/anodevice/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/item/weapon/anodevice/interact(var/mob/user)
/obj/item/weapon/anodevice/process()
/obj/item/weapon/anodevice/shutdown_emission()
/obj/item/weapon/archaeological_find
/obj/item/weapon/archaeological_find/New(loc, var/new_item_type)
/obj/item/weapon/arrow
/obj/item/weapon/arrow/baguette
/obj/item/weapon/arrow/quill
/obj/item/weapon/arrow/removed()
/obj/item/weapon/arrow/rod
/obj/item/weapon/arrow/rod/removed(mob/user)
/obj/item/weapon/autopsy_scanner
/obj/item/weapon/autopsy_scanner/add_data(var/datum/organ/external/O)
/obj/item/weapon/autopsy_scanner/attack(mob/living/carbon/human/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/autopsy_scanner/verb/print_data()
/obj/item/weapon/bananapeel
/obj/item/weapon/bananapeel/Crossed(AM as mob|obj)
/obj/item/weapon/bananapeel/traitorpeel
/obj/item/weapon/bananapeel/traitorpeel/Crossed(AM as mob|obj)
/obj/item/weapon/bananapeel/traitorpeel/throw_impact(atom/hit_atom)
/obj/item/weapon/banhammer
/obj/item/weapon/banhammer/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/banhammer/suicide_act(mob/user)
/obj/item/weapon/barcodescanner
/obj/item/weapon/barcodescanner/attack_self(mob/user as mob)
/obj/item/weapon/beach_ball
/obj/item/weapon/beach_ball/dodgeball
/obj/item/weapon/beach_ball/dodgeball/throw_impact(atom/hit_atom)
/obj/item/weapon/beach_ball/holoball
/obj/item/weapon/bedsheet
/obj/item/weapon/bedsheet/attack_self(mob/user as mob)
/obj/item/weapon/bedsheet/blue
/obj/item/weapon/bedsheet/brown
/obj/item/weapon/bedsheet/captain
/obj/item/weapon/bedsheet/ce
/obj/item/weapon/bedsheet/centcom
/obj/item/weapon/bedsheet/clown
/obj/item/weapon/bedsheet/cmo
/obj/item/weapon/bedsheet/cult
/obj/item/weapon/bedsheet/green
/obj/item/weapon/bedsheet/hop
/obj/item/weapon/bedsheet/hos
/obj/item/weapon/bedsheet/medical
/obj/item/weapon/bedsheet/mime
/obj/item/weapon/bedsheet/orange
/obj/item/weapon/bedsheet/purple
/obj/item/weapon/bedsheet/qm
/obj/item/weapon/bedsheet/rainbow
/obj/item/weapon/bedsheet/rd
/obj/item/weapon/bedsheet/red
/obj/item/weapon/bedsheet/syndie
/obj/item/weapon/bedsheet/wiz
/obj/item/weapon/bedsheet/yellow
/obj/item/weapon/bee_net
/obj/item/weapon/bee_net/attack_self(mob/user as mob)
/obj/item/weapon/bee_net/verb/empty_bees()
/obj/item/weapon/bikehorn
/obj/item/weapon/bikehorn/attack_self(mob/user as mob)
/obj/item/weapon/bikehorn/rubberducky
/obj/item/weapon/bonegel
/obj/item/weapon/bonesetter
/obj/item/weapon/book
/obj/item/weapon/book/attack_self(var/mob/user as mob)
/obj/item/weapon/book/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/book/fluff/johnathan_falcian_1
/obj/item/weapon/book/manual
/obj/item/weapon/book/manual/anomaly_spectroscopy
/obj/item/weapon/book/manual/anomaly_testing
/obj/item/weapon/book/manual/atmospipes
/obj/item/weapon/book/manual/barman_recipes
/obj/item/weapon/book/manual/chef_recipes
/obj/item/weapon/book/manual/detective
/obj/item/weapon/book/manual/engineering_construction
/obj/item/weapon/book/manual/engineering_guide
/obj/item/weapon/book/manual/engineering_hacking
/obj/item/weapon/book/manual/engineering_particle_accelerator
/obj/item/weapon/book/manual/engineering_singularity_safety
/obj/item/weapon/book/manual/evaguide
/obj/item/weapon/book/manual/excavation
/obj/item/weapon/book/manual/hydroponics_beekeeping
/obj/item/weapon/book/manual/hydroponics_pod_people
/obj/item/weapon/book/manual/mass_spectrometry
/obj/item/weapon/book/manual/materials_chemistry_analysis
/obj/item/weapon/book/manual/medical_cloning
/obj/item/weapon/book/manual/nuclear
/obj/item/weapon/book/manual/research_and_development
/obj/item/weapon/book/manual/ripley_build_and_repair
/obj/item/weapon/book/manual/robotics_cyborgs
/obj/item/weapon/book/manual/security_space_law
/obj/item/weapon/book/manual/stasis
/obj/item/weapon/book/manual/supermatter_engine
/obj/item/weapon/broken_bottle
/obj/item/weapon/bucket_sensor
/obj/item/weapon/bucket_sensor/attackby(var/obj/item/W, mob/user as mob)
/obj/item/weapon/butch
/obj/item/weapon/butch/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/butch/meatcleaver
/obj/item/weapon/c_tube
/obj/item/weapon/camera_assembly
/obj/item/weapon/camera_assembly/attack_hand(mob/user as mob)
/obj/item/weapon/camera_assembly/attackby(obj/item/W as obj, mob/living/user as mob)
/obj/item/weapon/camera_assembly/update_icon()
/obj/item/weapon/camera_assembly/weld(var/obj/item/weapon/weldingtool/WT, var/mob/user)
/obj/item/weapon/camera_bug/attack_self(mob/usr as mob)
/obj/item/weapon/cane
/obj/item/weapon/cannonframe
/obj/item/weapon/cannonframe/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/cannonframe/examine()
/obj/item/weapon/cannonframe/update_icon()
/obj/item/weapon/card
/obj/item/weapon/card/data
/obj/item/weapon/card/data/clown
/obj/item/weapon/card/data/verb/label(t as text)
/obj/item/weapon/card/emag
/obj/item/weapon/card/emag/afterattack(var/obj/item/weapon/O as obj, mob/user as mob)
/obj/item/weapon/card/emag_broken
/obj/item/weapon/card/id
/obj/item/weapon/card/id/GetAccess()
/obj/item/weapon/card/id/GetID()
/obj/item/weapon/card/id/New()
/obj/item/weapon/card/id/attack_self(mob/user as mob)
/obj/item/weapon/card/id/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/card/id/captains_spare
/obj/item/weapon/card/id/captains_spare/New()
/obj/item/weapon/card/id/centcom
/obj/item/weapon/card/id/centcom/New()
/obj/item/weapon/card/id/examine()
/obj/item/weapon/card/id/fluff/asher_spock_2
/obj/item/weapon/card/id/fluff/lifetime
/obj/item/weapon/card/id/gold
/obj/item/weapon/card/id/guest
/obj/item/weapon/card/id/guest/GetAccess()
/obj/item/weapon/card/id/guest/examine()
/obj/item/weapon/card/id/guest/read()
/obj/item/weapon/card/id/prisoner
/obj/item/weapon/card/id/prisoner/attack_self(mob/user as mob)
/obj/item/weapon/card/id/prisoner/five
/obj/item/weapon/card/id/prisoner/four
/obj/item/weapon/card/id/prisoner/one
/obj/item/weapon/card/id/prisoner/seven
/obj/item/weapon/card/id/prisoner/six
/obj/item/weapon/card/id/prisoner/three
/obj/item/weapon/card/id/prisoner/two
/obj/item/weapon/card/id/salvage_captain
/obj/item/weapon/card/id/show(mob/user as mob)
/obj/item/weapon/card/id/silver
/obj/item/weapon/card/id/syndicate
/obj/item/weapon/card/id/syndicate/New(mob/user as mob)
/obj/item/weapon/card/id/syndicate/afterattack(var/obj/item/weapon/O as obj, mob/user as mob, proximity)
/obj/item/weapon/card/id/syndicate/attack_self(mob/user as mob)
/obj/item/weapon/card/id/syndicate_command
/obj/item/weapon/card/id/verb/read()
/obj/item/weapon/card/mining_point_card
/obj/item/weapon/card/mining_point_card/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/card/mining_point_card/examine()
/obj/item/weapon/cartridge
/obj/item/weapon/cartridge/Topic(href, href_list)
/obj/item/weapon/cartridge/atmos
/obj/item/weapon/cartridge/captain
/obj/item/weapon/cartridge/ce
/obj/item/weapon/cartridge/chemistry
/obj/item/weapon/cartridge/clown
/obj/item/weapon/cartridge/cmo
/obj/item/weapon/cartridge/create_NanoUI_values(mob/user as mob)
/obj/item/weapon/cartridge/detective
/obj/item/weapon/cartridge/engineering
/obj/item/weapon/cartridge/head
/obj/item/weapon/cartridge/hop
/obj/item/weapon/cartridge/hop/New()
/obj/item/weapon/cartridge/hos
/obj/item/weapon/cartridge/hos/New()
/obj/item/weapon/cartridge/janitor
/obj/item/weapon/cartridge/lawyer
/obj/item/weapon/cartridge/medical
/obj/item/weapon/cartridge/mime
/obj/item/weapon/cartridge/post_status(var/command, var/data1, var/data2)
/obj/item/weapon/cartridge/quartermaster
/obj/item/weapon/cartridge/quartermaster/New()
/obj/item/weapon/cartridge/rd
/obj/item/weapon/cartridge/rd/New()
/obj/item/weapon/cartridge/security
/obj/item/weapon/cartridge/security/New()
/obj/item/weapon/cartridge/signal
/obj/item/weapon/cartridge/signal/New()
/obj/item/weapon/cartridge/signal/toxins
/obj/item/weapon/cartridge/syndicate
/obj/item/weapon/catchMessage(var/msg, var/mob/source)
/obj/item/weapon/cautery
/obj/item/weapon/caution
/obj/item/weapon/caution/cone
/obj/item/weapon/caution/proximity_sign
/obj/item/weapon/caution/proximity_sign/HasProximity(atom/movable/AM as mob|obj)
/obj/item/weapon/caution/proximity_sign/attack_self(mob/user as mob)
/obj/item/weapon/caution/proximity_sign/dead_legs(mob/living/carbon/human/H as mob)
/obj/item/weapon/caution/proximity_sign/process()
/obj/item/weapon/cell
/obj/item/weapon/cell/New()
/obj/item/weapon/cell/attack_self(mob/user as mob)
/obj/item/weapon/cell/attackby(obj/item/W, mob/user)
/obj/item/weapon/cell/blob_act()
/obj/item/weapon/cell/corrupt()
/obj/item/weapon/cell/crap
/obj/item/weapon/cell/crap/empty/New()
/obj/item/weapon/cell/emp_act(severity)
/obj/item/weapon/cell/ex_act(severity)
/obj/item/weapon/cell/examine()
/obj/item/weapon/cell/explode()
/obj/item/weapon/cell/get_electrocute_damage()
/obj/item/weapon/cell/give(var/amount)
/obj/item/weapon/cell/high
/obj/item/weapon/cell/high/empty/New()
/obj/item/weapon/cell/hyper
/obj/item/weapon/cell/hyper/empty/New()
/obj/item/weapon/cell/infinite
/obj/item/weapon/cell/infinite/use()
/obj/item/weapon/cell/percent()
/obj/item/weapon/cell/potato
/obj/item/weapon/cell/secborg
/obj/item/weapon/cell/secborg/empty/New()
/obj/item/weapon/cell/slime
/obj/item/weapon/cell/suicide_act(mob/user)
/obj/item/weapon/cell/super
/obj/item/weapon/cell/super/empty/New()
/obj/item/weapon/cell/updateicon()
/obj/item/weapon/cell/use(var/amount)
/obj/item/weapon/cell/var/image/overlay_image
/obj/item/weapon/cigbutt
/obj/item/weapon/cigbutt/New()
/obj/item/weapon/cigbutt/cigarbutt
/obj/item/weapon/cigbutt/roach
/obj/item/weapon/cigbutt/roach/New()
/obj/item/weapon/circuitboard
/obj/item/weapon/circuitboard/HONKputer
/obj/item/weapon/circuitboard/HolodeckControl
/obj/item/weapon/circuitboard/aicore
/obj/item/weapon/circuitboard/aifixer
/obj/item/weapon/circuitboard/air_management
/obj/item/weapon/circuitboard/aiupload
/obj/item/weapon/circuitboard/arcade/battle
/obj/item/weapon/circuitboard/arcade/orion_trail
/obj/item/weapon/circuitboard/area_atmos
/obj/item/weapon/circuitboard/atmos_alert
/obj/item/weapon/circuitboard/atmoscontrol
/obj/item/weapon/circuitboard/atmospheresiphonswitch
/obj/item/weapon/circuitboard/autolathe
/obj/item/weapon/circuitboard/borgupload
/obj/item/weapon/circuitboard/card
/obj/item/weapon/circuitboard/card/centcom
/obj/item/weapon/circuitboard/circuit_imprinter
/obj/item/weapon/circuitboard/clonepod
/obj/item/weapon/circuitboard/clonescanner
/obj/item/weapon/circuitboard/cloning
/obj/item/weapon/circuitboard/comm_monitor
/obj/item/weapon/circuitboard/comm_server
/obj/item/weapon/circuitboard/comm_traffic
/obj/item/weapon/circuitboard/communications
/obj/item/weapon/circuitboard/communications/Destroy()
/obj/item/weapon/circuitboard/crew
/obj/item/weapon/circuitboard/cryopodcontrol
/obj/item/weapon/circuitboard/curefab
/obj/item/weapon/circuitboard/destructive_analyzer
/obj/item/weapon/circuitboard/drone_control
/obj/item/weapon/circuitboard/injector_control
/obj/item/weapon/circuitboard/mech_bay_power_console
/obj/item/weapon/circuitboard/mecha
/obj/item/weapon/circuitboard/mecha/durand
/obj/item/weapon/circuitboard/mecha/durand/main
/obj/item/weapon/circuitboard/mecha/durand/peripherals
/obj/item/weapon/circuitboard/mecha/durand/targeting
/obj/item/weapon/circuitboard/mecha/gygax
/obj/item/weapon/circuitboard/mecha/gygax/main
/obj/item/weapon/circuitboard/mecha/gygax/peripherals
/obj/item/weapon/circuitboard/mecha/gygax/targeting
/obj/item/weapon/circuitboard/mecha/honker
/obj/item/weapon/circuitboard/mecha/honker/main
/obj/item/weapon/circuitboard/mecha/honker/peripherals
/obj/item/weapon/circuitboard/mecha/honker/targeting
/obj/item/weapon/circuitboard/mecha/odysseus
/obj/item/weapon/circuitboard/mecha/odysseus/main
/obj/item/weapon/circuitboard/mecha/odysseus/peripherals
/obj/item/weapon/circuitboard/mecha/pod
/obj/item/weapon/circuitboard/mecha/ripley
/obj/item/weapon/circuitboard/mecha/ripley/main
/obj/item/weapon/circuitboard/mecha/ripley/peripherals
/obj/item/weapon/circuitboard/mecha_control
/obj/item/weapon/circuitboard/mechfab
/obj/item/weapon/circuitboard/med_data
/obj/item/weapon/circuitboard/merch
/obj/item/weapon/circuitboard/message_monitor
/obj/item/weapon/circuitboard/mining_shuttle
/obj/item/weapon/circuitboard/olddoor
/obj/item/weapon/circuitboard/operating
/obj/item/weapon/circuitboard/ordercomp
/obj/item/weapon/circuitboard/pacman
/obj/item/weapon/circuitboard/pacman/mrs
/obj/item/weapon/circuitboard/pacman/super
/obj/item/weapon/circuitboard/pandemic
/obj/item/weapon/circuitboard/pod
/obj/item/weapon/circuitboard/powermonitor
/obj/item/weapon/circuitboard/prison_shuttle
/obj/item/weapon/circuitboard/prisoner
/obj/item/weapon/circuitboard/programmable
/obj/item/weapon/circuitboard/programmable/New()
/obj/item/weapon/circuitboard/programmable/Topic(href, href_list)
/obj/item/weapon/circuitboard/programmable/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/circuitboard/programmable/format(var/datum/cargoprofile/P,var/level)
/obj/item/weapon/circuitboard/programmable/interact(mob/user as mob)
/obj/item/weapon/circuitboard/programmable/resetlists()
/obj/item/weapon/circuitboard/protolathe
/obj/item/weapon/circuitboard/rdconsole
/obj/item/weapon/circuitboard/rdconsole/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/circuitboard/rdserver
/obj/item/weapon/circuitboard/rdservercontrol
/obj/item/weapon/circuitboard/research_shuttle
/obj/item/weapon/circuitboard/robotics
/obj/item/weapon/circuitboard/rust_core
/obj/item/weapon/circuitboard/rust_core_control
/obj/item/weapon/circuitboard/rust_fuel_control
/obj/item/weapon/circuitboard/rust_injector
/obj/item/weapon/circuitboard/scan_consolenew
/obj/item/weapon/circuitboard/secure_data
/obj/item/weapon/circuitboard/security
/obj/item/weapon/circuitboard/security/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/circuitboard/shield_cap
/obj/item/weapon/circuitboard/shield_gen
/obj/item/weapon/circuitboard/shield_gen_ex
/obj/item/weapon/circuitboard/skills
/obj/item/weapon/circuitboard/solar_control
/obj/item/weapon/circuitboard/splicer
/obj/item/weapon/circuitboard/stationalert
/obj/item/weapon/circuitboard/supplycomp
/obj/item/weapon/circuitboard/supplycomp/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/circuitboard/swfdoor
/obj/item/weapon/circuitboard/syndicatedoor
/obj/item/weapon/circuitboard/telecomms/broadcaster
/obj/item/weapon/circuitboard/telecomms/bus
/obj/item/weapon/circuitboard/telecomms/hub
/obj/item/weapon/circuitboard/telecomms/processor
/obj/item/weapon/circuitboard/telecomms/receiver
/obj/item/weapon/circuitboard/telecomms/relay
/obj/item/weapon/circuitboard/telecomms/server
/obj/item/weapon/circuitboard/teleporter
/obj/item/weapon/circuitboard/turbine_control
/obj/item/weapon/circular_saw
/obj/item/weapon/claymore
/obj/item/weapon/claymore/IsShield()
/obj/item/weapon/claymore/suicide_act(mob/user)
/obj/item/weapon/clipboard
/obj/item/weapon/clipboard/MouseDrop(obj/over_object as obj)
/obj/item/weapon/clipboard/New()
/obj/item/weapon/clipboard/Topic(href, href_list)
/obj/item/weapon/clipboard/attack_self(mob/user as mob)
/obj/item/weapon/clipboard/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/clipboard/fluff/mcreary_journal
/obj/item/weapon/clipboard/fluff/smallnote
/obj/item/weapon/clipboard/update_icon()
/obj/item/weapon/cloaking_device
/obj/item/weapon/cloaking_device/attack_self(mob/user as mob)
/obj/item/weapon/cloaking_device/emp_act(severity)
/obj/item/weapon/coin
/obj/item/weapon/coin/New()
/obj/item/weapon/coin/adamantine
/obj/item/weapon/coin/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/coin/clown
/obj/item/weapon/coin/diamond
/obj/item/weapon/coin/gold
/obj/item/weapon/coin/iron
/obj/item/weapon/coin/mythril
/obj/item/weapon/coin/plasma
/obj/item/weapon/coin/silver
/obj/item/weapon/coin/uranium
/obj/item/weapon/contraband
/obj/item/weapon/contraband/poster
/obj/item/weapon/contraband/poster/New(turf/loc, var/given_serial = 0)
/obj/item/weapon/contract
/obj/item/weapon/contract/Topic(href, href_list)
/obj/item/weapon/contract/attack_self(mob/user as mob)
/obj/item/weapon/conversion_kit
/obj/item/weapon/conversion_kit/New()
/obj/item/weapon/conversion_kit/attack_self(mob/user as mob)
/obj/item/weapon/conversion_kit/update_icon()
/obj/item/weapon/corncob
/obj/item/weapon/corncob/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/crossbow
/obj/item/weapon/crossbow/Fire(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, params, reflex = 0)
/obj/item/weapon/crossbow/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/crossbow/attack_self(mob/living/user as mob)
/obj/item/weapon/crossbow/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/crossbow/draw(var/mob/user as mob)
/obj/item/weapon/crossbow/dropped(mob/user)
/obj/item/weapon/crossbow/french
/obj/item/weapon/crossbow/french/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/crossbow/french/increase_tension(var/mob/user as mob)
/obj/item/weapon/crossbow/increase_tension(var/mob/user as mob)
/obj/item/weapon/crossbowframe
/obj/item/weapon/crossbowframe/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/crossbowframe/examine()
/obj/item/weapon/crossbowframe/update_icon()
/obj/item/weapon/crowbar
/obj/item/weapon/crowbar/fluff/zelda_creedy_1
/obj/item/weapon/crowbar/red
/obj/item/weapon/dart_cartridge
/obj/item/weapon/dart_cartridge/update_icon()
/obj/item/weapon/dice
/obj/item/weapon/dice/New()
/obj/item/weapon/dice/attack_self(mob/user as mob)
/obj/item/weapon/dice/d20
/obj/item/weapon/diseasedisk
/obj/item/weapon/diseasedisk/premade/New()
/obj/item/weapon/disk
/obj/item/weapon/disk/data
/obj/item/weapon/disk/data/Initialize()
/obj/item/weapon/disk/data/New()
/obj/item/weapon/disk/data/attack_self(mob/user as mob)
/obj/item/weapon/disk/data/demo
/obj/item/weapon/disk/data/demo/New()
/obj/item/weapon/disk/data/examine()
/obj/item/weapon/disk/data/monkey
/obj/item/weapon/disk/data/monkey/New()
/obj/item/weapon/disk/design_disk
/obj/item/weapon/disk/design_disk/New()
/obj/item/weapon/disk/file
/obj/item/weapon/disk/file/New()
/obj/item/weapon/disk/file/aifixer
/obj/item/weapon/disk/file/arcade
/obj/item/weapon/disk/file/atmos_alert
/obj/item/weapon/disk/file/cameras
/obj/item/weapon/disk/file/card
/obj/item/weapon/disk/nuclear
/obj/item/weapon/disk/nuclear/Destroy()
/obj/item/weapon/disk/nuclear/pickup(mob/living/user as mob)
/obj/item/weapon/disk/tech_disk
/obj/item/weapon/disk/tech_disk/New()
/obj/item/weapon/dnainjector
/obj/item/weapon/dnainjector/GetRealBlock(var/selblock)
/obj/item/weapon/dnainjector/GetState(var/selblock=0)
/obj/item/weapon/dnainjector/GetValue(var/selblock=0)
/obj/item/weapon/dnainjector/New()
/obj/item/weapon/dnainjector/SetState(var/on, var/selblock=0)
/obj/item/weapon/dnainjector/SetValue(var/val,var/selblock=0)
/obj/item/weapon/dnainjector/antiblind
/obj/item/weapon/dnainjector/antiblind/New()
/obj/item/weapon/dnainjector/anticlumsy
/obj/item/weapon/dnainjector/anticlumsy/New()
/obj/item/weapon/dnainjector/anticough
/obj/item/weapon/dnainjector/anticough/New()
/obj/item/weapon/dnainjector/antideaf
/obj/item/weapon/dnainjector/antideaf/New()
/obj/item/weapon/dnainjector/antiepi
/obj/item/weapon/dnainjector/antiepi/New()
/obj/item/weapon/dnainjector/antifire
/obj/item/weapon/dnainjector/antifire/New()
/obj/item/weapon/dnainjector/antiglasses
/obj/item/weapon/dnainjector/antiglasses/New()
/obj/item/weapon/dnainjector/antihallucination
/obj/item/weapon/dnainjector/antihallucination/New()
/obj/item/weapon/dnainjector/antihulk
/obj/item/weapon/dnainjector/antihulk/New()
/obj/item/weapon/dnainjector/antiinsulation
/obj/item/weapon/dnainjector/antiinsulation/New()
/obj/item/weapon/dnainjector/antimidgit
/obj/item/weapon/dnainjector/antimidgit/New()
/obj/item/weapon/dnainjector/antimorph
/obj/item/weapon/dnainjector/antimorph/New()
/obj/item/weapon/dnainjector/antinobreath
/obj/item/weapon/dnainjector/antinobreath/New()
/obj/item/weapon/dnainjector/antinoprints
/obj/item/weapon/dnainjector/antinoprints/New()
/obj/item/weapon/dnainjector/antiregenerate
/obj/item/weapon/dnainjector/antiregenerate/New()
/obj/item/weapon/dnainjector/antiremoteview
/obj/item/weapon/dnainjector/antiremoteview/New()
/obj/item/weapon/dnainjector/antirunfast
/obj/item/weapon/dnainjector/antirunfast/New()
/obj/item/weapon/dnainjector/antistutt
/obj/item/weapon/dnainjector/antistutt/New()
/obj/item/weapon/dnainjector/antitele
/obj/item/weapon/dnainjector/antitele/New()
/obj/item/weapon/dnainjector/antitour
/obj/item/weapon/dnainjector/antitour/New()
/obj/item/weapon/dnainjector/antixray
/obj/item/weapon/dnainjector/antixray/New()
/obj/item/weapon/dnainjector/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/dnainjector/attack_paw(mob/user as mob)
/obj/item/weapon/dnainjector/blindmut
/obj/item/weapon/dnainjector/blindmut/New()
/obj/item/weapon/dnainjector/clumsymut
/obj/item/weapon/dnainjector/clumsymut/New()
/obj/item/weapon/dnainjector/coughmut
/obj/item/weapon/dnainjector/coughmut/New()
/obj/item/weapon/dnainjector/deafmut
/obj/item/weapon/dnainjector/deafmut/New()
/obj/item/weapon/dnainjector/epimut
/obj/item/weapon/dnainjector/epimut/New()
/obj/item/weapon/dnainjector/firemut
/obj/item/weapon/dnainjector/firemut/New()
/obj/item/weapon/dnainjector/glassesmut
/obj/item/weapon/dnainjector/glassesmut/New()
/obj/item/weapon/dnainjector/h2m
/obj/item/weapon/dnainjector/h2m/New()
/obj/item/weapon/dnainjector/hallucination
/obj/item/weapon/dnainjector/hallucination/New()
/obj/item/weapon/dnainjector/hulkmut
/obj/item/weapon/dnainjector/hulkmut/New()
/obj/item/weapon/dnainjector/inject(mob/M as mob, mob/user as mob)
/obj/item/weapon/dnainjector/insulation
/obj/item/weapon/dnainjector/insulation/New()
/obj/item/weapon/dnainjector/m2h
/obj/item/weapon/dnainjector/m2h/New()
/obj/item/weapon/dnainjector/midgit
/obj/item/weapon/dnainjector/midgit/New()
/obj/item/weapon/dnainjector/morph
/obj/item/weapon/dnainjector/morph/New()
/obj/item/weapon/dnainjector/nobreath
/obj/item/weapon/dnainjector/nobreath/New()
/obj/item/weapon/dnainjector/noprints
/obj/item/weapon/dnainjector/noprints/New()
/obj/item/weapon/dnainjector/regenerate
/obj/item/weapon/dnainjector/regenerate/New()
/obj/item/weapon/dnainjector/remoteview
/obj/item/weapon/dnainjector/remoteview/New()
/obj/item/weapon/dnainjector/runfast
/obj/item/weapon/dnainjector/runfast/New()
/obj/item/weapon/dnainjector/stuttmut
/obj/item/weapon/dnainjector/stuttmut/New()
/obj/item/weapon/dnainjector/telemut
/obj/item/weapon/dnainjector/telemut/New()
/obj/item/weapon/dnainjector/tourmut
/obj/item/weapon/dnainjector/tourmut/New()
/obj/item/weapon/dnainjector/xraymut
/obj/item/weapon/dnainjector/xraymut/New()
/obj/item/weapon/ectoplasm
/obj/item/weapon/ed209_assembly
/obj/item/weapon/ed209_assembly/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/evidencebag
/obj/item/weapon/evidencebag/afterattack(obj/item/I, mob/user as mob, proximity)
/obj/item/weapon/evidencebag/attack_self(mob/user as mob)
/obj/item/weapon/extinguisher
/obj/item/weapon/extinguisher/New()
/obj/item/weapon/extinguisher/afterattack(atom/target, mob/user , flag)
/obj/item/weapon/extinguisher/attack_self(mob/user as mob)
/obj/item/weapon/extinguisher/attackby(obj/item/W, mob/user)
/obj/item/weapon/extinguisher/examine()
/obj/item/weapon/extinguisher/mini
/obj/item/weapon/extinguisher/mini/nozzle
/obj/item/weapon/extinguisher/mini/nozzle/New(parent_tank)
/obj/item/weapon/extinguisher/mini/nozzle/attack_self()
/obj/item/weapon/extinguisher/mini/nozzle/dropped(mob/user as mob)
/obj/item/weapon/f_card
/obj/item/weapon/fcardholder
/obj/item/weapon/firealarm_electronics
/obj/item/weapon/firework
/obj/item/weapon/firework/attackby(obj/item/weapon/W,mob/user)
/obj/item/weapon/firstaid_arm_assembly
/obj/item/weapon/firstaid_arm_assembly/New()
/obj/item/weapon/firstaid_arm_assembly/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/flamethrower
/obj/item/weapon/flamethrower/Destroy()
/obj/item/weapon/flamethrower/Topic(href,href_list[])
/obj/item/weapon/flamethrower/afterattack(atom/target, mob/user, proximity)
/obj/item/weapon/flamethrower/attack_self(mob/user as mob)
/obj/item/weapon/flamethrower/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/flamethrower/flame_turf(turflist)
/obj/item/weapon/flamethrower/full/New(var/loc)
/obj/item/weapon/flamethrower/ignite_turf(turf/target)
/obj/item/weapon/flamethrower/process()
/obj/item/weapon/flamethrower/update_icon()
/obj/item/weapon/fluff/cado_keppel_1
/obj/item/weapon/fluff/cado_keppel_1/attack_self(mob/user)
/obj/item/weapon/fluff/hugo_cinderbacth_1
/obj/item/weapon/folder
/obj/item/weapon/folder/Topic(href, href_list)
/obj/item/weapon/folder/attack_self(mob/user as mob)
/obj/item/weapon/folder/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/folder/blue
/obj/item/weapon/folder/blue/fluff/matthew_riebhardt
/obj/item/weapon/folder/red
/obj/item/weapon/folder/update_icon()
/obj/item/weapon/folder/white
/obj/item/weapon/folder/yellow
/obj/item/weapon/fossil
/obj/item/weapon/fossil/base/New()
/obj/item/weapon/fossil/bone
/obj/item/weapon/fossil/plant
/obj/item/weapon/fossil/plant/New()
/obj/item/weapon/fossil/shell
/obj/item/weapon/fossil/skull
/obj/item/weapon/fossil/skull/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/fossil/skull/horned
/obj/item/weapon/fuel_assembly
/obj/item/weapon/fuel_assembly/New()
/obj/item/weapon/gift
/obj/item/weapon/gift/attack_self(mob/user as mob)
/obj/item/weapon/grab
/obj/item/weapon/grab/Destroy()
/obj/item/weapon/grab/New(mob/user, mob/victim)
/obj/item/weapon/grab/attack(mob/M, mob/user)
/obj/item/weapon/grab/confirm()
/obj/item/weapon/grab/dropped()
/obj/item/weapon/grab/process()
/obj/item/weapon/grab/s_click(obj/screen/S)
/obj/item/weapon/grab/synch()
/obj/item/weapon/grab/throw()
/obj/item/weapon/grenade
/obj/item/weapon/grenade/attack_hand()
/obj/item/weapon/grenade/attack_paw(mob/user as mob)
/obj/item/weapon/grenade/attack_self(mob/user as mob)
/obj/item/weapon/grenade/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/grenade/bananade
/obj/item/weapon/grenade/bananade/casing
/obj/item/weapon/grenade/bananade/casing/attackby(var/obj/item/I, mob/user as mob)
/obj/item/weapon/grenade/bananade/prime()
/obj/item/weapon/grenade/chem_grenade
/obj/item/weapon/grenade/chem_grenade/Bump()
/obj/item/weapon/grenade/chem_grenade/CreateDefaultTrigger(var/typekey)
/obj/item/weapon/grenade/chem_grenade/Crossed(atom/movable/AM)
/obj/item/weapon/grenade/chem_grenade/HasProximity(atom/movable/AM)
/obj/item/weapon/grenade/chem_grenade/Move()
/obj/item/weapon/grenade/chem_grenade/New()
/obj/item/weapon/grenade/chem_grenade/antiweed
/obj/item/weapon/grenade/chem_grenade/antiweed/New()
/obj/item/weapon/grenade/chem_grenade/attack_self(mob/user)
/obj/item/weapon/grenade/chem_grenade/attackby(obj/item/I, mob/user)
/obj/item/weapon/grenade/chem_grenade/cleaner
/obj/item/weapon/grenade/chem_grenade/cleaner/New()
/obj/item/weapon/grenade/chem_grenade/dirt
/obj/item/weapon/grenade/chem_grenade/dirt/New()
/obj/item/weapon/grenade/chem_grenade/drugs
/obj/item/weapon/grenade/chem_grenade/drugs/New()
/obj/item/weapon/grenade/chem_grenade/emp
/obj/item/weapon/grenade/chem_grenade/emp/New()
/obj/item/weapon/grenade/chem_grenade/emp/mine
/obj/item/weapon/grenade/chem_grenade/emp/mine/New()
/obj/item/weapon/grenade/chem_grenade/emp/prox
/obj/item/weapon/grenade/chem_grenade/emp/prox/New()
/obj/item/weapon/grenade/chem_grenade/emp/remote
/obj/item/weapon/grenade/chem_grenade/emp/remote/New()
/obj/item/weapon/grenade/chem_grenade/ethanol
/obj/item/weapon/grenade/chem_grenade/ethanol/New()
/obj/item/weapon/grenade/chem_grenade/examine()
/obj/item/weapon/grenade/chem_grenade/explosion
/obj/item/weapon/grenade/chem_grenade/explosion/New()
/obj/item/weapon/grenade/chem_grenade/explosion/mine
/obj/item/weapon/grenade/chem_grenade/explosion/mine/New()
/obj/item/weapon/grenade/chem_grenade/explosion/prox
/obj/item/weapon/grenade/chem_grenade/explosion/prox/New()
/obj/item/weapon/grenade/chem_grenade/explosion/remote
/obj/item/weapon/grenade/chem_grenade/explosion/remote/New()
/obj/item/weapon/grenade/chem_grenade/get_trigger()
/obj/item/weapon/grenade/chem_grenade/hear_talk(mob/living/M, msg)
/obj/item/weapon/grenade/chem_grenade/holywater
/obj/item/weapon/grenade/chem_grenade/holywater/New()
/obj/item/weapon/grenade/chem_grenade/incendiary
/obj/item/weapon/grenade/chem_grenade/incendiary/New()
/obj/item/weapon/grenade/chem_grenade/large
/obj/item/weapon/grenade/chem_grenade/large/attackby(obj/item/I, mob/user)
/obj/item/weapon/grenade/chem_grenade/large/feast
/obj/item/weapon/grenade/chem_grenade/large/feast/New()
/obj/item/weapon/grenade/chem_grenade/large/monster
/obj/item/weapon/grenade/chem_grenade/large/monster/New()
/obj/item/weapon/grenade/chem_grenade/large/monster/mine
/obj/item/weapon/grenade/chem_grenade/large/monster/mine/New()
/obj/item/weapon/grenade/chem_grenade/large/monster/prox
/obj/item/weapon/grenade/chem_grenade/large/monster/prox/New()
/obj/item/weapon/grenade/chem_grenade/large/monster/remote
/obj/item/weapon/grenade/chem_grenade/large/monster/remote/New()
/obj/item/weapon/grenade/chem_grenade/large/prime()
/obj/item/weapon/grenade/chem_grenade/lube
/obj/item/weapon/grenade/chem_grenade/lube/New()
/obj/item/weapon/grenade/chem_grenade/lube/prox
/obj/item/weapon/grenade/chem_grenade/lube/prox/New()
/obj/item/weapon/grenade/chem_grenade/lube/remote
/obj/item/weapon/grenade/chem_grenade/lube/remote/New()
/obj/item/weapon/grenade/chem_grenade/lube/tripwire
/obj/item/weapon/grenade/chem_grenade/lube/tripwire/New()
/obj/item/weapon/grenade/chem_grenade/meat
/obj/item/weapon/grenade/chem_grenade/meat/New()
/obj/item/weapon/grenade/chem_grenade/metalfoam
/obj/item/weapon/grenade/chem_grenade/metalfoam/New()
/obj/item/weapon/grenade/chem_grenade/on_found(mob/finder)
/obj/item/weapon/grenade/chem_grenade/pickup()
/obj/item/weapon/grenade/chem_grenade/prime()
/obj/item/weapon/grenade/chem_grenade/receive_signal()
/obj/item/weapon/grenade/chem_grenade/soap
/obj/item/weapon/grenade/chem_grenade/soap/New()
/obj/item/weapon/grenade/chem_grenade/teargas
/obj/item/weapon/grenade/chem_grenade/teargas/New()
/obj/item/weapon/grenade/chem_grenade/throw_impact()
/obj/item/weapon/grenade/chem_grenade/update_icon()
/obj/item/weapon/grenade/chem_grenade/update_overlays()
/obj/item/weapon/grenade/clown_check(var/mob/living/user)
/obj/item/weapon/grenade/clown_grenade
/obj/item/weapon/grenade/clown_grenade/New()
/obj/item/weapon/grenade/clown_grenade/prime()
/obj/item/weapon/grenade/clusterbuster
/obj/item/weapon/grenade/clusterbuster/apocalypse
/obj/item/weapon/grenade/clusterbuster/apocalypsefake
/obj/item/weapon/grenade/clusterbuster/aviary
/obj/item/weapon/grenade/clusterbuster/banquet
/obj/item/weapon/grenade/clusterbuster/banquet/child
/obj/item/weapon/grenade/clusterbuster/booze
/obj/item/weapon/grenade/clusterbuster/dirt
/obj/item/weapon/grenade/clusterbuster/emp
/obj/item/weapon/grenade/clusterbuster/explosion
/obj/item/weapon/grenade/clusterbuster/fluffy
/obj/item/weapon/grenade/clusterbuster/honk
/obj/item/weapon/grenade/clusterbuster/inferno
/obj/item/weapon/grenade/clusterbuster/lube
/obj/item/weapon/grenade/clusterbuster/meat
/obj/item/weapon/grenade/clusterbuster/megadirt
/obj/item/weapon/grenade/clusterbuster/monkey
/obj/item/weapon/grenade/clusterbuster/monster
/obj/item/weapon/grenade/clusterbuster/node/New(var/turf/newloc,var/T,var/N)
/obj/item/weapon/grenade/clusterbuster/prime()
/obj/item/weapon/grenade/clusterbuster/segment
/obj/item/weapon/grenade/clusterbuster/segment/New(var/turf/newloc,var/T,var/N)
/obj/item/weapon/grenade/clusterbuster/segment/prime()
/obj/item/weapon/grenade/clusterbuster/smoke
/obj/item/weapon/grenade/clusterbuster/soap
/obj/item/weapon/grenade/clusterbuster/ultima
/obj/item/weapon/grenade/clusterbuster/xmas
/obj/item/weapon/grenade/empgrenade
/obj/item/weapon/grenade/empgrenade/prime()
/obj/item/weapon/grenade/examine()
/obj/item/weapon/grenade/flashbang
/obj/item/weapon/grenade/flashbang/bang(var/turf/T , var/mob/living/carbon/M)
/obj/item/weapon/grenade/flashbang/cluster/New()
/obj/item/weapon/grenade/flashbang/clusterbang
/obj/item/weapon/grenade/flashbang/clusterbang/prime()
/obj/item/weapon/grenade/flashbang/clusterbang/segment
/obj/item/weapon/grenade/flashbang/clusterbang/segment/New()
/obj/item/weapon/grenade/flashbang/clusterbang/segment/prime()
/obj/item/weapon/grenade/flashbang/prime()
/obj/item/weapon/grenade/iedcasing
/obj/item/weapon/grenade/iedcasing/afterattack(atom/target, mob/user , flag)
/obj/item/weapon/grenade/iedcasing/attack_self(mob/user as mob)
/obj/item/weapon/grenade/iedcasing/attackby(var/obj/item/I, mob/user as mob)
/obj/item/weapon/grenade/iedcasing/examine()
/obj/item/weapon/grenade/iedcasing/prime()
/obj/item/weapon/grenade/prime()
/obj/item/weapon/grenade/smokebomb
/obj/item/weapon/grenade/smokebomb/New()
/obj/item/weapon/grenade/smokebomb/prime()
/obj/item/weapon/grenade/spawnergrenade
/obj/item/weapon/grenade/spawnergrenade/manhacks
/obj/item/weapon/grenade/spawnergrenade/prime()
/obj/item/weapon/grenade/spawnergrenade/spesscarp
/obj/item/weapon/grenade/update_mob()
/obj/item/weapon/gripper
/obj/item/weapon/gripper/afterattack(atom/target, mob/user as mob)
/obj/item/weapon/gripper/attack_self(mob/user as mob)
/obj/item/weapon/gripper/verb/drop_item()
/obj/item/weapon/grown
/obj/item/weapon/grown/New()
/obj/item/weapon/grown/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/grown/changePotency(newValue)
/obj/item/weapon/grown/deathnettle
/obj/item/weapon/grown/deathnettle/New()
/obj/item/weapon/grown/deathnettle/afterattack(atom/A as mob|obj, mob/user as mob, proximity)
/obj/item/weapon/grown/deathnettle/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/weapon/grown/deathnettle/changePotency(newValue)
/obj/item/weapon/grown/deathnettle/pickup(mob/living/carbon/human/user as mob)
/obj/item/weapon/grown/deathnettle/suicide_act(mob/user)
/obj/item/weapon/grown/log
/obj/item/weapon/grown/log/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/grown/nettle
/obj/item/weapon/grown/nettle/New()
/obj/item/weapon/grown/nettle/afterattack(atom/A as mob|obj, mob/user as mob, proximity)
/obj/item/weapon/grown/nettle/changePotency(newValue)
/obj/item/weapon/grown/nettle/pickup(mob/living/carbon/human/user as mob)
/obj/item/weapon/grown/novaflower
/obj/item/weapon/grown/novaflower/New()
/obj/item/weapon/grown/novaflower/afterattack(atom/A as mob|obj, mob/user as mob,proximity)
/obj/item/weapon/grown/novaflower/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/weapon/grown/novaflower/pickup(mob/living/carbon/human/user as mob)
/obj/item/weapon/grown/sunflower
/obj/item/weapon/grown/sunflower/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/gun
/obj/item/weapon/gun/Aim(var/mob/living/M)
/obj/item/weapon/gun/Fire(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, params, reflex = 0)
/obj/item/weapon/gun/PreFire(atom/A as mob|obj|turf|area, mob/living/user as mob|obj, params)
/obj/item/weapon/gun/TargetActed(var/mob/living/T)
/obj/item/weapon/gun/afterattack(atom/A as mob|obj|turf|area, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/gun/attack(mob/living/M as mob, mob/living/user as mob, def_zone)
/obj/item/weapon/gun/attack_self()
/obj/item/weapon/gun/can_fire()
/obj/item/weapon/gun/can_hit(var/mob/living/target as mob, var/mob/living/user as mob)
/obj/item/weapon/gun/click_empty(mob/user = null)
/obj/item/weapon/gun/dartgun
/obj/item/weapon/gun/dartgun/Fire(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, params, reflex = 0)
/obj/item/weapon/gun/dartgun/New()
/obj/item/weapon/gun/dartgun/Topic(href, href_list)
/obj/item/weapon/gun/dartgun/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/gun/dartgun/attack_self(mob/user)
/obj/item/weapon/gun/dartgun/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/gun/dartgun/can_fire()
/obj/item/weapon/gun/dartgun/can_hit(var/mob/living/target as mob, var/mob/living/user as mob)
/obj/item/weapon/gun/dartgun/check_beaker_mixing(var/obj/item/B)
/obj/item/weapon/gun/dartgun/examine()
/obj/item/weapon/gun/dartgun/fire_dart(atom/target, mob/user)
/obj/item/weapon/gun/dartgun/get_mixed_syringe()
/obj/item/weapon/gun/dartgun/has_selected_beaker_reagents()
/obj/item/weapon/gun/dartgun/remove_cartridge()
/obj/item/weapon/gun/dartgun/update_icon()
/obj/item/weapon/gun/dartgun/vox
/obj/item/weapon/gun/dartgun/vox/medical
/obj/item/weapon/gun/dartgun/vox/raider
/obj/item/weapon/gun/dropped(mob/user as mob)
/obj/item/weapon/gun/emp_act(severity)
/obj/item/weapon/gun/energy
/obj/item/weapon/gun/energy/New()
/obj/item/weapon/gun/energy/attackby(obj/item/weapon/W, mob/user)
/obj/item/weapon/gun/energy/clown
/obj/item/weapon/gun/energy/crossbow
/obj/item/weapon/gun/energy/crossbow/Destroy()
/obj/item/weapon/gun/energy/crossbow/New()
/obj/item/weapon/gun/energy/crossbow/largecrossbow
/obj/item/weapon/gun/energy/crossbow/process()
/obj/item/weapon/gun/energy/crossbow/update_icon()
/obj/item/weapon/gun/energy/decloner
/obj/item/weapon/gun/energy/emp_act(severity)
/obj/item/weapon/gun/energy/examine()
/obj/item/weapon/gun/energy/floragun
/obj/item/weapon/gun/energy/floragun/Destroy()
/obj/item/weapon/gun/energy/floragun/New()
/obj/item/weapon/gun/energy/floragun/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/floragun/process()
/obj/item/weapon/gun/energy/gun
/obj/item/weapon/gun/energy/gun/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/gun/nuclear
/obj/item/weapon/gun/energy/gun/nuclear/Destroy()
/obj/item/weapon/gun/energy/gun/nuclear/New()
/obj/item/weapon/gun/energy/gun/nuclear/emp_act(severity)
/obj/item/weapon/gun/energy/gun/nuclear/failcheck()
/obj/item/weapon/gun/energy/gun/nuclear/process()
/obj/item/weapon/gun/energy/gun/nuclear/update_charge()
/obj/item/weapon/gun/energy/gun/nuclear/update_icon()
/obj/item/weapon/gun/energy/gun/nuclear/update_mode()
/obj/item/weapon/gun/energy/gun/nuclear/update_reactor()
/obj/item/weapon/gun/energy/ionrifle
/obj/item/weapon/gun/energy/ionrifle/emp_act(severity)
/obj/item/weapon/gun/energy/kinetic_accelerator
/obj/item/weapon/gun/energy/kinetic_accelerator/attack_self(var/mob/living/user/L)
/obj/item/weapon/gun/energy/laser
/obj/item/weapon/gun/energy/laser/bluetag
/obj/item/weapon/gun/energy/laser/bluetag/Destroy()
/obj/item/weapon/gun/energy/laser/bluetag/New()
/obj/item/weapon/gun/energy/laser/bluetag/process()
/obj/item/weapon/gun/energy/laser/bluetag/special_check(var/mob/living/carbon/human/M)
/obj/item/weapon/gun/energy/laser/captain
/obj/item/weapon/gun/energy/laser/captain/Destroy()
/obj/item/weapon/gun/energy/laser/captain/New()
/obj/item/weapon/gun/energy/laser/captain/process()
/obj/item/weapon/gun/energy/laser/cyborg/emp_act()
/obj/item/weapon/gun/energy/laser/cyborg/process_chambered()
/obj/item/weapon/gun/energy/laser/practice
/obj/item/weapon/gun/energy/laser/redtag
/obj/item/weapon/gun/energy/laser/redtag/Destroy()
/obj/item/weapon/gun/energy/laser/redtag/New()
/obj/item/weapon/gun/energy/laser/redtag/process()
/obj/item/weapon/gun/energy/laser/redtag/special_check(var/mob/living/carbon/human/M)
/obj/item/weapon/gun/energy/laser/retro
/obj/item/weapon/gun/energy/lasercannon
/obj/item/weapon/gun/energy/lasercannon/cyborg/process_chambered()
/obj/item/weapon/gun/energy/lasercannon/isHandgun()
/obj/item/weapon/gun/energy/meteorgun
/obj/item/weapon/gun/energy/meteorgun/Destroy()
/obj/item/weapon/gun/energy/meteorgun/New()
/obj/item/weapon/gun/energy/meteorgun/pen
/obj/item/weapon/gun/energy/meteorgun/process()
/obj/item/weapon/gun/energy/meteorgun/update_icon()
/obj/item/weapon/gun/energy/mindflayer
/obj/item/weapon/gun/energy/noisecannon
/obj/item/weapon/gun/energy/noisecannon/attack_hand(mob/user as mob)
/obj/item/weapon/gun/energy/noisecannon/process_chambered()
/obj/item/weapon/gun/energy/noisecannon/update_icon()
/obj/item/weapon/gun/energy/process_chambered()
/obj/item/weapon/gun/energy/pulse_rifle
/obj/item/weapon/gun/energy/pulse_rifle/M1911
/obj/item/weapon/gun/energy/pulse_rifle/M1911/isHandgun()
/obj/item/weapon/gun/energy/pulse_rifle/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/pulse_rifle/cyborg/process_chambered()
/obj/item/weapon/gun/energy/pulse_rifle/destroyer
/obj/item/weapon/gun/energy/pulse_rifle/destroyer/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/pulse_rifle/isHandgun()
/obj/item/weapon/gun/energy/sniperrifle
/obj/item/weapon/gun/energy/sniperrifle/dropped(mob/user)
/obj/item/weapon/gun/energy/sniperrifle/verb/zoom()
/obj/item/weapon/gun/energy/staff/focus
/obj/item/weapon/gun/energy/stunrevolver
/obj/item/weapon/gun/energy/taser
/obj/item/weapon/gun/energy/taser/cyborg
/obj/item/weapon/gun/energy/taser/cyborg/Destroy()
/obj/item/weapon/gun/energy/taser/cyborg/New()
/obj/item/weapon/gun/energy/taser/cyborg/process()
/obj/item/weapon/gun/energy/temperature
/obj/item/weapon/gun/energy/temperature/Destroy()
/obj/item/weapon/gun/energy/temperature/New()
/obj/item/weapon/gun/energy/temperature/Topic(href, href_list)
/obj/item/weapon/gun/energy/temperature/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/energy/temperature/process()
/obj/item/weapon/gun/energy/toxgun
/obj/item/weapon/gun/energy/update_icon()
/obj/item/weapon/gun/energy/xray
/obj/item/weapon/gun/equipped(var/mob/user, var/slot)
/obj/item/weapon/gun/grenadelauncher
/obj/item/weapon/gun/grenadelauncher/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/gun/grenadelauncher/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/gun/grenadelauncher/examine()
/obj/item/weapon/gun/grenadelauncher/fire_grenade(atom/target, mob/user)
/obj/item/weapon/gun/isHandgun()
/obj/item/weapon/gun/magic
/obj/item/weapon/gun/magic/Destroy()
/obj/item/weapon/gun/magic/New()
/obj/item/weapon/gun/magic/afterattack(atom/target as mob, mob/living/user as mob, flag)
/obj/item/weapon/gun/magic/emp_act(severity)
/obj/item/weapon/gun/magic/process()
/obj/item/weapon/gun/magic/process_chambered()
/obj/item/weapon/gun/magic/shoot_with_empty_chamber(mob/living/user as mob|obj)
/obj/item/weapon/gun/magic/staff/
/obj/item/weapon/gun/magic/staff/New()
/obj/item/weapon/gun/magic/staff/animate
/obj/item/weapon/gun/magic/staff/change
/obj/item/weapon/gun/magic/staff/healing
/obj/item/weapon/gun/magic/update_icon()
/obj/item/weapon/gun/magic/wand/
/obj/item/weapon/gun/magic/wand/New()
/obj/item/weapon/gun/magic/wand/afterattack(atom/target as mob, mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/attack(atom/target as mob, mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/death
/obj/item/weapon/gun/magic/wand/death/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/door
/obj/item/weapon/gun/magic/wand/door/zap_self()
/obj/item/weapon/gun/magic/wand/examine()
/obj/item/weapon/gun/magic/wand/fireball
/obj/item/weapon/gun/magic/wand/fireball/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/polymorph
/obj/item/weapon/gun/magic/wand/polymorph/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/resurrection
/obj/item/weapon/gun/magic/wand/resurrection/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/teleport
/obj/item/weapon/gun/magic/wand/teleport/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/magic/wand/zap_self(mob/living/user as mob)
/obj/item/weapon/gun/prepare_shot(var/obj/item/projectile/proj)
/obj/item/weapon/gun/process_chambered()
/obj/item/weapon/gun/projectile
/obj/item/weapon/gun/projectile/New()
/obj/item/weapon/gun/projectile/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/projectile/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/automatic
/obj/item/weapon/gun/projectile/automatic/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/c20r
/obj/item/weapon/gun/projectile/automatic/c20r/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, flag)
/obj/item/weapon/gun/projectile/automatic/c20r/update_icon()
/obj/item/weapon/gun/projectile/automatic/deagle
/obj/item/weapon/gun/projectile/automatic/deagle/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, flag)
/obj/item/weapon/gun/projectile/automatic/deagle/camo
/obj/item/weapon/gun/projectile/automatic/deagle/gold
/obj/item/weapon/gun/projectile/automatic/deagle/update_icon()
/obj/item/weapon/gun/projectile/automatic/gyropistol
/obj/item/weapon/gun/projectile/automatic/gyropistol/New()
/obj/item/weapon/gun/projectile/automatic/gyropistol/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, flag)
/obj/item/weapon/gun/projectile/automatic/gyropistol/update_icon()
/obj/item/weapon/gun/projectile/automatic/isHandgun()
/obj/item/weapon/gun/projectile/automatic/l6_saw
/obj/item/weapon/gun/projectile/automatic/l6_saw/afterattack(atom/target as mob|obj|turf, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/gun/projectile/automatic/l6_saw/attack_hand(mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/l6_saw/attack_self(mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/l6_saw/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/l6_saw/update_icon()
/obj/item/weapon/gun/projectile/automatic/m2411
/obj/item/weapon/gun/projectile/automatic/m2411/update_icon()
/obj/item/weapon/gun/projectile/automatic/mini_uzi
/obj/item/weapon/gun/projectile/automatic/mini_uzi/isHandgun()
/obj/item/weapon/gun/projectile/automatic/pistol
/obj/item/weapon/gun/projectile/automatic/pistol/attack_hand(mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/pistol/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/automatic/pistol/update_icon()
/obj/item/weapon/gun/projectile/automatic/update_icon()
/obj/item/weapon/gun/projectile/chamber_round()
/obj/item/weapon/gun/projectile/examine()
/obj/item/weapon/gun/projectile/get_ammo(var/countchambered = 1)
/obj/item/weapon/gun/projectile/process_chambered()
/obj/item/weapon/gun/projectile/revolver
/obj/item/weapon/gun/projectile/revolver/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/projectile/revolver/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/revolver/chamber_round()
/obj/item/weapon/gun/projectile/revolver/detective
/obj/item/weapon/gun/projectile/revolver/detective/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/revolver/detective/special_check(var/mob/living/carbon/human/M)
/obj/item/weapon/gun/projectile/revolver/detective/verb/rename_gun()
/obj/item/weapon/gun/projectile/revolver/detective/verb/reskin_gun()
/obj/item/weapon/gun/projectile/revolver/doublebarrel
/obj/item/weapon/gun/projectile/revolver/doublebarrel/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/projectile/revolver/doublebarrel/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/revolver/examine()
/obj/item/weapon/gun/projectile/revolver/get_ammo(var/countchambered = 0, var/countempties = 1)
/obj/item/weapon/gun/projectile/revolver/mateba
/obj/item/weapon/gun/projectile/revolver/process_chambered()
/obj/item/weapon/gun/projectile/revolver/russian
/obj/item/weapon/gun/projectile/revolver/russian/New()
/obj/item/weapon/gun/projectile/revolver/russian/Spin()
/obj/item/weapon/gun/projectile/revolver/russian/afterattack(atom/target as mob|obj|turf, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/gun/projectile/revolver/russian/attack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj)
/obj/item/weapon/gun/projectile/revolver/russian/attack_self(mob/user as mob)
/obj/item/weapon/gun/projectile/revolver/russian/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/shotgun
/obj/item/weapon/gun/projectile/shotgun/attack_self(mob/living/user as mob)
/obj/item/weapon/gun/projectile/shotgun/attackby(var/obj/item/A as obj, mob/user as mob)
/obj/item/weapon/gun/projectile/shotgun/combat
/obj/item/weapon/gun/projectile/shotgun/examine()
/obj/item/weapon/gun/projectile/shotgun/process_chambered()
/obj/item/weapon/gun/projectile/shotgun/pump(mob/M as mob)
/obj/item/weapon/gun/ready_to_fire()
/obj/item/weapon/gun/rocketlauncher
/obj/item/weapon/gun/rocketlauncher/Fire(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, params, reflex = 0)
/obj/item/weapon/gun/rocketlauncher/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/gun/rocketlauncher/can_fire()
/obj/item/weapon/gun/rocketlauncher/examine()
/obj/item/weapon/gun/shoot_with_empty_chamber(mob/living/user as mob|obj)
/obj/item/weapon/gun/special_check(var/mob/M)
/obj/item/weapon/gun/stop_aim()
/obj/item/weapon/gun/syringe
/obj/item/weapon/gun/syringe/Fire(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, params, reflex = 0)
/obj/item/weapon/gun/syringe/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/gun/syringe/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/gun/syringe/can_fire()
/obj/item/weapon/gun/syringe/can_hit(var/mob/living/target as mob, var/mob/living/user as mob)
/obj/item/weapon/gun/syringe/examine()
/obj/item/weapon/gun/syringe/fire_syringe(atom/target, mob/user)
/obj/item/weapon/gun/syringe/rapidsyringe
/obj/item/weapon/gun/verb/lower_aim()
/obj/item/weapon/gun/verb/toggle_firerate()
/obj/item/weapon/hackbug
/obj/item/weapon/hackbug/attack(atom/target as obj|turf, mob/user as mob, flag)
/obj/item/weapon/hand_labeler
/obj/item/weapon/hand_labeler/afterattack(atom/A, mob/user as mob, proximity)
/obj/item/weapon/hand_labeler/attack_self(mob/user as mob)
/obj/item/weapon/hand_tele
/obj/item/weapon/hand_tele/attack_self(mob/user as mob)
/obj/item/weapon/handcuffs
/obj/item/weapon/handcuffs/attack(mob/living/carbon/C as mob, mob/user as mob)
/obj/item/weapon/handcuffs/cable
/obj/item/weapon/handcuffs/cable/attackby(var/obj/item/I, mob/user as mob)
/obj/item/weapon/handcuffs/cable/blue
/obj/item/weapon/handcuffs/cable/cyan
/obj/item/weapon/handcuffs/cable/green
/obj/item/weapon/handcuffs/cable/orange
/obj/item/weapon/handcuffs/cable/pink
/obj/item/weapon/handcuffs/cable/red
/obj/item/weapon/handcuffs/cable/white
/obj/item/weapon/handcuffs/cable/yellow
/obj/item/weapon/handcuffs/cyborg
/obj/item/weapon/handcuffs/pinkcuffs
/obj/item/weapon/harpoon
/obj/item/weapon/hatchet
/obj/item/weapon/hatchet/unathiknife
/obj/item/weapon/hemostat
/obj/item/weapon/holder
/obj/item/weapon/holder/Del()
/obj/item/weapon/holder/New()
/obj/item/weapon/holder/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/holder/diona
/obj/item/weapon/holder/drone
/obj/item/weapon/holder/facehugger
/obj/item/weapon/holder/process()
/obj/item/weapon/holder/show_message(var/message, var/m_type)
/obj/item/weapon/holo
/obj/item/weapon/holo/esword
/obj/item/weapon/holo/esword/IsShield()
/obj/item/weapon/holo/esword/New()
/obj/item/weapon/holo/esword/attack(target as mob, mob/user as mob)
/obj/item/weapon/holo/esword/attack_self(mob/living/user as mob)
/obj/item/weapon/holo/esword/green
/obj/item/weapon/holo/esword/green/New()
/obj/item/weapon/holo/esword/red
/obj/item/weapon/holo/esword/red/New()
/obj/item/weapon/id_wallet/fluff/reese_mackenzie
/obj/item/weapon/implant
/obj/item/weapon/implant/Destroy()
/obj/item/weapon/implant/activate()
/obj/item/weapon/implant/adrenalin
/obj/item/weapon/implant/adrenalin/get_data()
/obj/item/weapon/implant/adrenalin/implanted(mob/source)
/obj/item/weapon/implant/adrenalin/trigger(emote, mob/source as mob)
/obj/item/weapon/implant/chem
/obj/item/weapon/implant/chem/New()
/obj/item/weapon/implant/chem/activate(var/cause)
/obj/item/weapon/implant/chem/emp_act(severity)
/obj/item/weapon/implant/chem/get_data()
/obj/item/weapon/implant/chem/trigger(emote, source as mob)
/obj/item/weapon/implant/compressed
/obj/item/weapon/implant/compressed/activate()
/obj/item/weapon/implant/compressed/get_data()
/obj/item/weapon/implant/compressed/implanted(mob/source as mob)
/obj/item/weapon/implant/compressed/islegal()
/obj/item/weapon/implant/compressed/trigger(emote, mob/source as mob)
/obj/item/weapon/implant/cortical
/obj/item/weapon/implant/deadman
/obj/item/weapon/implant/deadman/activate(var/cause)
/obj/item/weapon/implant/deadman/get_data()
/obj/item/weapon/implant/deadman/implanted(mob/source as mob)
/obj/item/weapon/implant/deadman/islegal()
/obj/item/weapon/implant/deadman/trigger(emote, source as mob)
/obj/item/weapon/implant/death_alarm
/obj/item/weapon/implant/death_alarm/activate(var/cause)
/obj/item/weapon/implant/death_alarm/emp_act(severity)
/obj/item/weapon/implant/death_alarm/get_data()
/obj/item/weapon/implant/death_alarm/implanted(mob/source as mob)
/obj/item/weapon/implant/death_alarm/process()
/obj/item/weapon/implant/dexplosive
/obj/item/weapon/implant/dexplosive/activate(var/cause)
/obj/item/weapon/implant/dexplosive/get_data()
/obj/item/weapon/implant/dexplosive/islegal()
/obj/item/weapon/implant/dexplosive/trigger(emote, source as mob)
/obj/item/weapon/implant/exile
/obj/item/weapon/implant/exile/get_data()
/obj/item/weapon/implant/explosive
/obj/item/weapon/implant/explosive/activate()
/obj/item/weapon/implant/explosive/emp_act(severity)
/obj/item/weapon/implant/explosive/get_data()
/obj/item/weapon/implant/explosive/hear(var/msg)
/obj/item/weapon/implant/explosive/hear_talk(mob/M as mob, msg)
/obj/item/weapon/implant/explosive/implanted(mob/source as mob)
/obj/item/weapon/implant/explosive/islegal()
/obj/item/weapon/implant/explosive/small_boom()
/obj/item/weapon/implant/freedom
/obj/item/weapon/implant/freedom/New()
/obj/item/weapon/implant/freedom/get_data()
/obj/item/weapon/implant/freedom/implanted(mob/living/carbon/source)
/obj/item/weapon/implant/freedom/trigger(emote, mob/living/carbon/source as mob)
/obj/item/weapon/implant/get_data()
/obj/item/weapon/implant/health
/obj/item/weapon/implant/health/sensehealth()
/obj/item/weapon/implant/hear(message, source as mob)
/obj/item/weapon/implant/implanted(var/mob/source)
/obj/item/weapon/implant/islegal()
/obj/item/weapon/implant/loyalty
/obj/item/weapon/implant/loyalty/get_data()
/obj/item/weapon/implant/loyalty/implanted(mob/M)
/obj/item/weapon/implant/meltdown()
/obj/item/weapon/implant/tracking
/obj/item/weapon/implant/tracking/emp_act(severity)
/obj/item/weapon/implant/tracking/get_data()
/obj/item/weapon/implant/traitor
/obj/item/weapon/implant/traitor/get_data()
/obj/item/weapon/implant/traitor/implanted(mob/M, mob/user)
/obj/item/weapon/implant/trigger(emote, source as mob)
/obj/item/weapon/implant/uplink
/obj/item/weapon/implant/uplink/New()
/obj/item/weapon/implant/uplink/implanted(mob/source)
/obj/item/weapon/implant/uplink/trigger(emote, mob/source as mob)
/obj/item/weapon/implantcase
/obj/item/weapon/implantcase/attackby(obj/item/weapon/I as obj, mob/user as mob)
/obj/item/weapon/implantcase/chem
/obj/item/weapon/implantcase/chem/New()
/obj/item/weapon/implantcase/death_alarm
/obj/item/weapon/implantcase/death_alarm/New()
/obj/item/weapon/implantcase/dexplosive
/obj/item/weapon/implantcase/dexplosive/New()
/obj/item/weapon/implantcase/exile
/obj/item/weapon/implantcase/exile/New()
/obj/item/weapon/implantcase/explosive
/obj/item/weapon/implantcase/explosive/New()
/obj/item/weapon/implantcase/loyalty
/obj/item/weapon/implantcase/loyalty/New()
/obj/item/weapon/implantcase/tracking
/obj/item/weapon/implantcase/tracking/New()
/obj/item/weapon/implantcase/update()
/obj/item/weapon/implanter
/obj/item/weapon/implanter/adrenalin
/obj/item/weapon/implanter/adrenalin/New()
/obj/item/weapon/implanter/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/implanter/compressed
/obj/item/weapon/implanter/compressed/New()
/obj/item/weapon/implanter/compressed/afterattack(var/obj/item/I, mob/user as mob)
/obj/item/weapon/implanter/compressed/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/implanter/compressed/update()
/obj/item/weapon/implanter/deadman
/obj/item/weapon/implanter/deadman/New()
/obj/item/weapon/implanter/death_alarm
/obj/item/weapon/implanter/death_alarm/New()
/obj/item/weapon/implanter/dexplosive
/obj/item/weapon/implanter/dexplosive/New()
/obj/item/weapon/implanter/exile
/obj/item/weapon/implanter/exile/New()
/obj/item/weapon/implanter/explosive
/obj/item/weapon/implanter/explosive/New()
/obj/item/weapon/implanter/loyalty
/obj/item/weapon/implanter/loyalty/New()
/obj/item/weapon/implanter/traitor
/obj/item/weapon/implanter/traitor/New()
/obj/item/weapon/implanter/update()
/obj/item/weapon/implantpad
/obj/item/weapon/implantpad/Topic(href, href_list)
/obj/item/weapon/implantpad/attack_hand(mob/user as mob)
/obj/item/weapon/implantpad/attack_self(mob/user as mob)
/obj/item/weapon/implantpad/attackby(obj/item/weapon/implantcase/C as obj, mob/user as mob)
/obj/item/weapon/implantpad/update()
/obj/item/weapon/katana
/obj/item/weapon/katana/IsShield()
/obj/item/weapon/katana/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/katana/suicide_act(mob/user)
/obj/item/weapon/kitchen
/obj/item/weapon/kitchen/rollingpin
/obj/item/weapon/kitchen/rollingpin/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/weapon/kitchen/utensil
/obj/item/weapon/kitchen/utensil/New()
/obj/item/weapon/kitchen/utensil/fork
/obj/item/weapon/kitchen/utensil/fork/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/kitchen/utensil/knife
/obj/item/weapon/kitchen/utensil/knife/attack(target as mob, mob/living/user as mob)
/obj/item/weapon/kitchen/utensil/knife/suicide_act(mob/user)
/obj/item/weapon/kitchen/utensil/pfork
/obj/item/weapon/kitchen/utensil/pfork/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/kitchen/utensil/pknife
/obj/item/weapon/kitchen/utensil/pspoon
/obj/item/weapon/kitchen/utensil/spoon
/obj/item/weapon/kitchenknife
/obj/item/weapon/kitchenknife/ritual
/obj/item/weapon/kitchenknife/suicide_act(mob/user)
/obj/item/weapon/lazarus_injector
/obj/item/weapon/lazarus_injector/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/weapon/lazarus_injector/examine()
/obj/item/weapon/legcuffs
/obj/item/weapon/legcuffs/beartrap
/obj/item/weapon/legcuffs/beartrap/Crossed(AM as mob|obj)
/obj/item/weapon/legcuffs/beartrap/attack_self(mob/user as mob)
/obj/item/weapon/legcuffs/beartrap/suicide_act(mob/user)
/obj/item/weapon/light
/obj/item/weapon/light/New()
/obj/item/weapon/light/afterattack(atom/target, mob/user, proximity)
/obj/item/weapon/light/attackby(var/obj/item/I, var/mob/user)
/obj/item/weapon/light/bulb
/obj/item/weapon/light/bulb/fire
/obj/item/weapon/light/shatter()
/obj/item/weapon/light/throw_impact(atom/hit_atom)
/obj/item/weapon/light/tube
/obj/item/weapon/light/tube/large
/obj/item/weapon/light/update()
/obj/item/weapon/lighter
/obj/item/weapon/lighter/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/lighter/attack_self(mob/living/user)
/obj/item/weapon/lighter/dropped(mob/user)
/obj/item/weapon/lighter/pickup(mob/user)
/obj/item/weapon/lighter/process()
/obj/item/weapon/lighter/random
/obj/item/weapon/lighter/random/New()
/obj/item/weapon/lighter/zippo
/obj/item/weapon/lighter/zippo/fluff/executivekill_1
/obj/item/weapon/lighter/zippo/fluff/fay_sullivan_1
/obj/item/weapon/lighter/zippo/fluff/li_matsuda_1
/obj/item/weapon/lighter/zippo/fluff/michael_guess_1
/obj/item/weapon/lighter/zippo/fluff/naples_1
/obj/item/weapon/lighter/zippo/fluff/nt_rep
/obj/item/weapon/lighter/zippo/fluff/riley_rohtin_1
/obj/item/weapon/lightning
/obj/item/weapon/lightning/New()
/obj/item/weapon/lightning/afterattack(atom/A as mob|obj|turf|area, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/lipstick
/obj/item/weapon/lipstick/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/lipstick/attack_self(mob/user as mob)
/obj/item/weapon/lipstick/black
/obj/item/weapon/lipstick/jade
/obj/item/weapon/lipstick/purple
/obj/item/weapon/lipstick/random
/obj/item/weapon/lipstick/random/New()
/obj/item/weapon/locator
/obj/item/weapon/locator/Topic(href, href_list)
/obj/item/weapon/locator/attack_self(mob/user as mob)
/obj/item/weapon/match
/obj/item/weapon/match/dropped(mob/user as mob)
/obj/item/weapon/match/process()
/obj/item/weapon/matter_decompiler
/obj/item/weapon/matter_decompiler/afterattack(atom/target, mob/user as mob)
/obj/item/weapon/melee/baton
/obj/item/weapon/melee/baton/CheckParts()
/obj/item/weapon/melee/baton/attack(mob/M, mob/user)
/obj/item/weapon/melee/baton/attack_self(mob/user)
/obj/item/weapon/melee/baton/attackby(obj/item/weapon/W, mob/user)
/obj/item/weapon/melee/baton/cattleprod
/obj/item/weapon/melee/baton/cattleprod/update_icon()
/obj/item/weapon/melee/baton/deductcharge(var/chrgdeductamt)
/obj/item/weapon/melee/baton/emp_act(severity)
/obj/item/weapon/melee/baton/examine()
/obj/item/weapon/melee/baton/fluff/oeng_baton
/obj/item/weapon/melee/baton/loaded/New()
/obj/item/weapon/melee/baton/loaded/ntcane
/obj/item/weapon/melee/baton/suicide_act(mob/user)
/obj/item/weapon/melee/baton/throw_impact(atom/hit_atom)
/obj/item/weapon/melee/baton/update_icon()
/obj/item/weapon/melee/chainofcommand
/obj/item/weapon/melee/chainofcommand/suicide_act(mob/user)
/obj/item/weapon/melee/classic_baton
/obj/item/weapon/melee/classic_baton/attack(mob/M as mob, mob/living/user as mob)
/obj/item/weapon/melee/cultblade
/obj/item/weapon/melee/cultblade/attack(mob/living/target as mob, mob/living/carbon/human/user as mob)
/obj/item/weapon/melee/cultblade/pickup(mob/living/user as mob)
/obj/item/weapon/melee/energy
/obj/item/weapon/melee/energy/alien/claws
/obj/item/weapon/melee/energy/alien/claws/color
/obj/item/weapon/melee/energy/axe
/obj/item/weapon/melee/energy/axe/attack_self(mob/user as mob)
/obj/item/weapon/melee/energy/axe/suicide_act(mob/user)
/obj/item/weapon/melee/energy/blade
/obj/item/weapon/melee/energy/blade/New()
/obj/item/weapon/melee/energy/blade/dropped()
/obj/item/weapon/melee/energy/blade/throw()
/obj/item/weapon/melee/energy/suicide_act(mob/user)
/obj/item/weapon/melee/energy/sword
/obj/item/weapon/melee/energy/sword/IsShield()
/obj/item/weapon/melee/energy/sword/New()
/obj/item/weapon/melee/energy/sword/attack_self(mob/living/user as mob)
/obj/item/weapon/melee/energy/sword/attackby(obj/item/weapon/W, mob/living/user)
/obj/item/weapon/melee/energy/sword/color
/obj/item/weapon/melee/energy/sword/green
/obj/item/weapon/melee/energy/sword/green/New()
/obj/item/weapon/melee/energy/sword/pirate
/obj/item/weapon/melee/energy/sword/red
/obj/item/weapon/melee/energy/sword/red/New()
/obj/item/weapon/melee/icepick
/obj/item/weapon/melee/telebaton
/obj/item/weapon/melee/telebaton/attack(mob/target as mob, mob/living/user as mob)
/obj/item/weapon/melee/telebaton/attack_self(mob/user as mob)
/obj/item/weapon/minihoe
/obj/item/weapon/mining_voucher
/obj/item/weapon/modkit/tajaran
/obj/item/weapon/modkit/unathi
/obj/item/weapon/module
/obj/item/weapon/module/card_reader
/obj/item/weapon/module/cell_power
/obj/item/weapon/module/id_auth
/obj/item/weapon/module/power_control
/obj/item/weapon/module/rust_fuel_compressor
/obj/item/weapon/module/rust_fuel_port
/obj/item/weapon/moneybag
/obj/item/weapon/moneybag/Topic(href, href_list)
/obj/item/weapon/moneybag/attack_hand(user as mob)
/obj/item/weapon/moneybag/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/moneybag/vault
/obj/item/weapon/moneybag/vault/New()
/obj/item/weapon/mop
/obj/item/weapon/mop/New()
/obj/item/weapon/mop/afterattack(atom/A, mob/user, proximity)
/obj/item/weapon/mop/clean(turf/simulated/A as turf)
/obj/item/weapon/mutiny/auth_key
/obj/item/weapon/mutiny/auth_key/New()
/obj/item/weapon/mutiny/auth_key/captain
/obj/item/weapon/mutiny/auth_key/keep_alive()
/obj/item/weapon/mutiny/auth_key/secondary
/obj/item/weapon/newspaper
/obj/item/weapon/newspaper/Topic(href, href_list)
/obj/item/weapon/newspaper/attack_self(mob/user as mob)
/obj/item/weapon/newspaper/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/ninja_manuscript
/obj/item/weapon/ninja_manuscript/attack_self(var/mob/user as mob)
/obj/item/weapon/nullrod
/obj/item/weapon/nullrod/afterattack(atom/A, mob/user as mob)
/obj/item/weapon/nullrod/attack(mob/M as mob, mob/living/user as mob)
/obj/item/weapon/nullrod/suicide_act(mob/user)
/obj/item/weapon/ore
/obj/item/weapon/ore/New()
/obj/item/weapon/ore/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/ore/clown
/obj/item/weapon/ore/diamond
/obj/item/weapon/ore/ex_act()
/obj/item/weapon/ore/glass
/obj/item/weapon/ore/glass/attack_self(mob/living/user as mob)
/obj/item/weapon/ore/gold
/obj/item/weapon/ore/iron
/obj/item/weapon/ore/plasma
/obj/item/weapon/ore/silver
/obj/item/weapon/ore/slag
/obj/item/weapon/ore/strangerock
/obj/item/weapon/ore/strangerock/New(loc, var/inside_item_type = 0)
/obj/item/weapon/ore/strangerock/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/ore/uranium
/obj/item/weapon/organ
/obj/item/weapon/organ/New(loc, mob/living/carbon/human/H)
/obj/item/weapon/organ/head
/obj/item/weapon/organ/head/New(loc, mob/living/carbon/human/H)
/obj/item/weapon/organ/head/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/organ/head/posi
/obj/item/weapon/organ/head/transfer_identity(var/mob/living/carbon/human/H)
/obj/item/weapon/organ/l_arm
/obj/item/weapon/organ/l_foot
/obj/item/weapon/organ/l_hand
/obj/item/weapon/organ/l_leg
/obj/item/weapon/organ/r_arm
/obj/item/weapon/organ/r_foot
/obj/item/weapon/organ/r_hand
/obj/item/weapon/organ/r_leg
/obj/item/weapon/packageWrap
/obj/item/weapon/packageWrap/afterattack(var/obj/target as obj, mob/user as mob, proximity)
/obj/item/weapon/packageWrap/examine()
/obj/item/weapon/pai_cable
/obj/item/weapon/pai_cable/attack(obj/machinery/M as obj, mob/user as mob)
/obj/item/weapon/pai_cable/plugin(obj/machinery/M as obj, mob/user as mob)
/obj/item/weapon/paintkit
/obj/item/weapon/paintkit/fluff/butcher_royce_1
/obj/item/weapon/paintkit/fluff/sven_fjeltson_1
/obj/item/weapon/paper
/obj/item/weapon/paper/Cloning
/obj/item/weapon/paper/Court
/obj/item/weapon/paper/New()
/obj/item/weapon/paper/Topic(href, href_list)
/obj/item/weapon/paper/Toxin
/obj/item/weapon/paper/addtofield(var/id, var/text, var/links = 0)
/obj/item/weapon/paper/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/paper/attack_ai(var/mob/living/silicon/ai/user as mob)
/obj/item/weapon/paper/attack_self(mob/living/user as mob)
/obj/item/weapon/paper/attackby(obj/item/weapon/P as obj, mob/user as mob)
/obj/item/weapon/paper/burnpaper(obj/item/weapon/lighter/P, mob/user)
/obj/item/weapon/paper/carbon
/obj/item/weapon/paper/carbon/update_icon()
/obj/item/weapon/paper/carbon/verb/removecopy()
/obj/item/weapon/paper/clearpaper()
/obj/item/weapon/paper/courtroom
/obj/item/weapon/paper/crumpled
/obj/item/weapon/paper/crumpled/bloody
/obj/item/weapon/paper/crumpled/update_icon()
/obj/item/weapon/paper/customs
/obj/item/weapon/paper/djstation
/obj/item/weapon/paper/examine()
/obj/item/weapon/paper/flag
/obj/item/weapon/paper/fluff/sue_donem
/obj/item/weapon/paper/fluff/sue_donem/New()
/obj/item/weapon/paper/gravity_gen
/obj/item/weapon/paper/hydroponics
/obj/item/weapon/paper/jobs
/obj/item/weapon/paper/manifest
/obj/item/weapon/paper/monitorkey
/obj/item/weapon/paper/monitorkey/New()
/obj/item/weapon/paper/openhelp(mob/user as mob)
/obj/item/weapon/paper/pamphlet
/obj/item/weapon/paper/pamphlet/update_icon()
/obj/item/weapon/paper/parsepencode(var/t, var/obj/item/weapon/pen/P, mob/user as mob, var/iscrayon = 0)
/obj/item/weapon/paper/photograph
/obj/item/weapon/paper/recycler
/obj/item/weapon/paper/solar
/obj/item/weapon/paper/sop
/obj/item/weapon/paper/talisman
/obj/item/weapon/paper/talisman/Topic(href, href_list)
/obj/item/weapon/paper/talisman/attack(mob/living/carbon/T as mob, mob/living/user as mob)
/obj/item/weapon/paper/talisman/attack_self(mob/living/user as mob)
/obj/item/weapon/paper/talisman/examine()
/obj/item/weapon/paper/talisman/supply
/obj/item/weapon/paper/talisman/supply(var/key)
/obj/item/weapon/paper/update_icon()
/obj/item/weapon/paper/updateinfolinks()
/obj/item/weapon/paper/verb/rename()
/obj/item/weapon/paper_bin
/obj/item/weapon/paper_bin/MouseDrop(mob/user as mob)
/obj/item/weapon/paper_bin/attack_hand(mob/user as mob)
/obj/item/weapon/paper_bin/attack_paw(mob/user as mob)
/obj/item/weapon/paper_bin/attackby(obj/item/weapon/paper/i as obj, mob/user as mob)
/obj/item/weapon/paper_bin/carbon
/obj/item/weapon/paper_bin/carbon/attack_hand(mob/user as mob)
/obj/item/weapon/paper_bin/examine()
/obj/item/weapon/paper_bin/update_icon()
/obj/item/weapon/pen
/obj/item/weapon/pen/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/pen/blue
/obj/item/weapon/pen/fluff/eugene_bissegger_1
/obj/item/weapon/pen/fluff/fancypen
/obj/item/weapon/pen/fluff/fountainpen
/obj/item/weapon/pen/fluff/multi
/obj/item/weapon/pen/invisible
/obj/item/weapon/pen/paralysis/New()
/obj/item/weapon/pen/paralysis/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/pen/red
/obj/item/weapon/pen/robopen
/obj/item/weapon/pen/robopen/RenamePaper(mob/user as mob,obj/paper as obj)
/obj/item/weapon/pen/robopen/attack_self(mob/user as mob)
/obj/item/weapon/pen/sleepypen
/obj/item/weapon/pen/sleepypen/New()
/obj/item/weapon/pen/sleepypen/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/pestspray
/obj/item/weapon/pestspray/suicide_act(mob/user)
/obj/item/weapon/phone
/obj/item/weapon/photo
/obj/item/weapon/photo/attack_self(mob/user as mob)
/obj/item/weapon/photo/attackby(obj/item/weapon/P as obj, mob/user as mob)
/obj/item/weapon/photo/examine()
/obj/item/weapon/photo/show(mob/user as mob)
/obj/item/weapon/photo/verb/rename()
/obj/item/weapon/pickaxe
/obj/item/weapon/pickaxe/borgdrill
/obj/item/weapon/pickaxe/brush
/obj/item/weapon/pickaxe/diamond
/obj/item/weapon/pickaxe/diamonddrill
/obj/item/weapon/pickaxe/drill
/obj/item/weapon/pickaxe/five_pick
/obj/item/weapon/pickaxe/four_pick
/obj/item/weapon/pickaxe/gold
/obj/item/weapon/pickaxe/hammer
/obj/item/weapon/pickaxe/hand
/obj/item/weapon/pickaxe/jackhammer
/obj/item/weapon/pickaxe/one_pick
/obj/item/weapon/pickaxe/plasmacutter
/obj/item/weapon/pickaxe/robotic
/obj/item/weapon/pickaxe/robotic/attack_self(var/mob/user as mob)
/obj/item/weapon/pickaxe/silver
/obj/item/weapon/pickaxe/six_pick
/obj/item/weapon/pickaxe/three_pick
/obj/item/weapon/pickaxe/two_pick
/obj/item/weapon/pinpointer
/obj/item/weapon/pinpointer/advpinpointer
/obj/item/weapon/pinpointer/advpinpointer/attack_self()
/obj/item/weapon/pinpointer/advpinpointer/auth_key
/obj/item/weapon/pinpointer/advpinpointer/auth_key/New()
/obj/item/weapon/pinpointer/advpinpointer/auth_key/attack_self()
/obj/item/weapon/pinpointer/advpinpointer/auth_key/examine()
/obj/item/weapon/pinpointer/advpinpointer/flag
/obj/item/weapon/pinpointer/advpinpointer/flag/attack_self()
/obj/item/weapon/pinpointer/advpinpointer/flag/examine()
/obj/item/weapon/pinpointer/advpinpointer/verb/toggle_mode()
/obj/item/weapon/pinpointer/advpinpointer/worklocation()
/obj/item/weapon/pinpointer/advpinpointer/workobj()
/obj/item/weapon/pinpointer/attack_self()
/obj/item/weapon/pinpointer/examine()
/obj/item/weapon/pinpointer/nukeop
/obj/item/weapon/pinpointer/nukeop/attack_self(mob/user as mob)
/obj/item/weapon/pinpointer/nukeop/workdisk()
/obj/item/weapon/pinpointer/nukeop/worklocation()
/obj/item/weapon/pinpointer/workdisk()
/obj/item/weapon/plastique
/obj/item/weapon/plastique/New()
/obj/item/weapon/plastique/afterattack(atom/target as obj|turf, mob/user as mob, flag)
/obj/item/weapon/plastique/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/plastique/attack_self(mob/user as mob)
/obj/item/weapon/plastique/attackby(var/obj/item/I, var/mob/user)
/obj/item/weapon/plastique/explode(var/location)
/obj/item/weapon/plastique/suicide_act(var/mob/user)
/obj/item/weapon/process()
/obj/item/weapon/rack_parts
/obj/item/weapon/rack_parts/attack_self(mob/user as mob)
/obj/item/weapon/rack_parts/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/razor
/obj/item/weapon/razor/attack(mob/living/carbon/M as mob, mob/user as mob)
/obj/item/weapon/rcd
/obj/item/weapon/rcd/New()
/obj/item/weapon/rcd/activate()
/obj/item/weapon/rcd/afterattack(atom/A, mob/user, proximity)
/obj/item/weapon/rcd/attack_self(mob/user)
/obj/item/weapon/rcd/attackby(obj/item/weapon/W, mob/user)
/obj/item/weapon/rcd/borg/New()
/obj/item/weapon/rcd/borg/checkResource(var/amount, var/mob/user)
/obj/item/weapon/rcd/borg/useResource(var/amount, var/mob/user)
/obj/item/weapon/rcd/checkResource(var/amount, var/mob/user)
/obj/item/weapon/rcd/useResource(var/amount, var/mob/user)
/obj/item/weapon/rcd_ammo
/obj/item/weapon/rcs
/obj/item/weapon/rcs/Destroy()
/obj/item/weapon/rcs/New()
/obj/item/weapon/rcs/attack_self(mob/user)
/obj/item/weapon/rcs/attackby(obj/item/W, mob/user)
/obj/item/weapon/rcs/process()
/obj/item/weapon/reagent_containers
/obj/item/weapon/reagent_containers/New()
/obj/item/weapon/reagent_containers/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/reagent_containers/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/blood
/obj/item/weapon/reagent_containers/blood/AMinus
/obj/item/weapon/reagent_containers/blood/APlus
/obj/item/weapon/reagent_containers/blood/BMinus
/obj/item/weapon/reagent_containers/blood/BPlus
/obj/item/weapon/reagent_containers/blood/New()
/obj/item/weapon/reagent_containers/blood/OMinus
/obj/item/weapon/reagent_containers/blood/OPlus
/obj/item/weapon/reagent_containers/blood/empty
/obj/item/weapon/reagent_containers/blood/on_reagent_change()
/obj/item/weapon/reagent_containers/blood/update_icon()
/obj/item/weapon/reagent_containers/borghypo
/obj/item/weapon/reagent_containers/borghypo/Destroy()
/obj/item/weapon/reagent_containers/borghypo/New()
/obj/item/weapon/reagent_containers/borghypo/add_reagent(var/reagent)
/obj/item/weapon/reagent_containers/borghypo/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/borghypo/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/borghypo/examine()
/obj/item/weapon/reagent_containers/borghypo/process()
/obj/item/weapon/reagent_containers/dropper
/obj/item/weapon/reagent_containers/dropper/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/reagent_containers/food
/obj/item/weapon/reagent_containers/food/New()
/obj/item/weapon/reagent_containers/food/condiment
/obj/item/weapon/reagent_containers/food/condiment/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/food/condiment/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/condiment/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/condiment/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/condiment/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/condiment/enzyme
/obj/item/weapon/reagent_containers/food/condiment/enzyme/New()
/obj/item/weapon/reagent_containers/food/condiment/on_reagent_change()
/obj/item/weapon/reagent_containers/food/condiment/pack
/obj/item/weapon/reagent_containers/food/condiment/pack/New()
/obj/item/weapon/reagent_containers/food/condiment/pack/afterattack(obj/target, mob/user , proximity)
/obj/item/weapon/reagent_containers/food/condiment/pack/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/condiment/pack/hotsauce
/obj/item/weapon/reagent_containers/food/condiment/pack/hotsauce/New()
/obj/item/weapon/reagent_containers/food/condiment/pack/ketchup
/obj/item/weapon/reagent_containers/food/condiment/pack/ketchup/New()
/obj/item/weapon/reagent_containers/food/condiment/pack/on_reagent_change()
/obj/item/weapon/reagent_containers/food/condiment/peppermill
/obj/item/weapon/reagent_containers/food/condiment/peppermill/New()
/obj/item/weapon/reagent_containers/food/condiment/saltshaker
/obj/item/weapon/reagent_containers/food/condiment/saltshaker/New()
/obj/item/weapon/reagent_containers/food/condiment/sugar
/obj/item/weapon/reagent_containers/food/condiment/sugar/New()
/obj/item/weapon/reagent_containers/food/condiment/syndisauce
/obj/item/weapon/reagent_containers/food/condiment/syndisauce/New()
/obj/item/weapon/reagent_containers/food/drinks
/obj/item/weapon/reagent_containers/food/drinks/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/food/drinks/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/drinks/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/bottle
/obj/item/weapon/reagent_containers/food/drinks/bottle/absinthe
/obj/item/weapon/reagent_containers/food/drinks/bottle/absinthe/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/attack(mob/living/target as mob, mob/living/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/bottle/bottleofnothing
/obj/item/weapon/reagent_containers/food/drinks/bottle/bottleofnothing/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/cognac
/obj/item/weapon/reagent_containers/food/drinks/bottle/cognac/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/cream
/obj/item/weapon/reagent_containers/food/drinks/bottle/cream/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/gin
/obj/item/weapon/reagent_containers/food/drinks/bottle/gin/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/goldschlager
/obj/item/weapon/reagent_containers/food/drinks/bottle/goldschlager/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/holywater
/obj/item/weapon/reagent_containers/food/drinks/bottle/holywater/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/kahlua
/obj/item/weapon/reagent_containers/food/drinks/bottle/kahlua/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/limejuice
/obj/item/weapon/reagent_containers/food/drinks/bottle/limejuice/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/orangejuice
/obj/item/weapon/reagent_containers/food/drinks/bottle/orangejuice/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/patron
/obj/item/weapon/reagent_containers/food/drinks/bottle/patron/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/random_drink
/obj/item/weapon/reagent_containers/food/drinks/bottle/random_drink/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/random_reagent
/obj/item/weapon/reagent_containers/food/drinks/bottle/random_reagent/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/rum
/obj/item/weapon/reagent_containers/food/drinks/bottle/rum/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/smash(mob/living/target as mob, mob/living/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/bottle/tequilla
/obj/item/weapon/reagent_containers/food/drinks/bottle/tequilla/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/tomatojuice
/obj/item/weapon/reagent_containers/food/drinks/bottle/tomatojuice/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/vermouth
/obj/item/weapon/reagent_containers/food/drinks/bottle/vermouth/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/vodka
/obj/item/weapon/reagent_containers/food/drinks/bottle/vodka/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/whiskey
/obj/item/weapon/reagent_containers/food/drinks/bottle/whiskey/New()
/obj/item/weapon/reagent_containers/food/drinks/bottle/wine
/obj/item/weapon/reagent_containers/food/drinks/bottle/wine/New()
/obj/item/weapon/reagent_containers/food/drinks/britcup
/obj/item/weapon/reagent_containers/food/drinks/cans
/obj/item/weapon/reagent_containers/food/drinks/cans/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/food/drinks/cans/ale
/obj/item/weapon/reagent_containers/food/drinks/cans/ale/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/drinks/cans/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/cans/attackby(var/obj/item/I, mob/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/cans/beer
/obj/item/weapon/reagent_containers/food/drinks/cans/beer/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/cola
/obj/item/weapon/reagent_containers/food/drinks/cans/cola/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/dr_gibb
/obj/item/weapon/reagent_containers/food/drinks/cans/dr_gibb/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/grape_juice
/obj/item/weapon/reagent_containers/food/drinks/cans/grape_juice/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/iced_tea
/obj/item/weapon/reagent_containers/food/drinks/cans/iced_tea/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/lemon_lime
/obj/item/weapon/reagent_containers/food/drinks/cans/lemon_lime/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/sodawater
/obj/item/weapon/reagent_containers/food/drinks/cans/sodawater/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/space_mountain_wind
/obj/item/weapon/reagent_containers/food/drinks/cans/space_mountain_wind/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/space_up
/obj/item/weapon/reagent_containers/food/drinks/cans/space_up/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/starkist
/obj/item/weapon/reagent_containers/food/drinks/cans/starkist/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/thirteenloko
/obj/item/weapon/reagent_containers/food/drinks/cans/thirteenloko/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/tonic
/obj/item/weapon/reagent_containers/food/drinks/cans/tonic/New()
/obj/item/weapon/reagent_containers/food/drinks/cans/waterbottle
/obj/item/weapon/reagent_containers/food/drinks/cans/waterbottle/New()
/obj/item/weapon/reagent_containers/food/drinks/coffee
/obj/item/weapon/reagent_containers/food/drinks/coffee/New()
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/attack(mob/living/target as mob, mob/living/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/cola
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/cola/New()
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/devilskiss
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/devilskiss/New()
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/smash(mob/living/target as mob, mob/living/user as mob)
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/soda
/obj/item/weapon/reagent_containers/food/drinks/drinkingglass/soda/New()
/obj/item/weapon/reagent_containers/food/drinks/dry_ramen
/obj/item/weapon/reagent_containers/food/drinks/dry_ramen/New()
/obj/item/weapon/reagent_containers/food/drinks/examine()
/obj/item/weapon/reagent_containers/food/drinks/flask
/obj/item/weapon/reagent_containers/food/drinks/flask/barflask
/obj/item/weapon/reagent_containers/food/drinks/flask/detflask
/obj/item/weapon/reagent_containers/food/drinks/flask/fluff/johann_erzatz_1
/obj/item/weapon/reagent_containers/food/drinks/flask/fluff/lithiumflask
/obj/item/weapon/reagent_containers/food/drinks/flask/fluff/shinyflask
/obj/item/weapon/reagent_containers/food/drinks/flask/fluff/william_hackett
/obj/item/weapon/reagent_containers/food/drinks/golden_cup
/obj/item/weapon/reagent_containers/food/drinks/golden_cup/tournament_26_06_2011
/obj/item/weapon/reagent_containers/food/drinks/h_chocolate
/obj/item/weapon/reagent_containers/food/drinks/h_chocolate/New()
/obj/item/weapon/reagent_containers/food/drinks/ice
/obj/item/weapon/reagent_containers/food/drinks/ice/New()
/obj/item/weapon/reagent_containers/food/drinks/jar
/obj/item/weapon/reagent_containers/food/drinks/jar/New()
/obj/item/weapon/reagent_containers/food/drinks/jar/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/milk
/obj/item/weapon/reagent_containers/food/drinks/milk/New()
/obj/item/weapon/reagent_containers/food/drinks/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/shaker
/obj/item/weapon/reagent_containers/food/drinks/sillycup
/obj/item/weapon/reagent_containers/food/drinks/sillycup/New()
/obj/item/weapon/reagent_containers/food/drinks/sillycup/on_reagent_change()
/obj/item/weapon/reagent_containers/food/drinks/soymilk
/obj/item/weapon/reagent_containers/food/drinks/soymilk/New()
/obj/item/weapon/reagent_containers/food/drinks/tea
/obj/item/weapon/reagent_containers/food/drinks/tea/New()
/obj/item/weapon/reagent_containers/food/snacks
/obj/item/weapon/reagent_containers/food/snacks/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/On_Consume(var/mob/M)
/obj/item/weapon/reagent_containers/food/snacks/aesirsalad
/obj/item/weapon/reagent_containers/food/snacks/aesirsalad/New()
/obj/item/weapon/reagent_containers/food/snacks/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/food/snacks/amanita_pie
/obj/item/weapon/reagent_containers/food/snacks/amanita_pie/New()
/obj/item/weapon/reagent_containers/food/snacks/amanitajelly
/obj/item/weapon/reagent_containers/food/snacks/amanitajelly/New()
/obj/item/weapon/reagent_containers/food/snacks/appendix
/obj/item/weapon/reagent_containers/food/snacks/appendix/New()
/obj/item/weapon/reagent_containers/food/snacks/appendix/inflamed
/obj/item/weapon/reagent_containers/food/snacks/applecakeslice
/obj/item/weapon/reagent_containers/food/snacks/applepie
/obj/item/weapon/reagent_containers/food/snacks/applepie/New()
/obj/item/weapon/reagent_containers/food/snacks/appletart
/obj/item/weapon/reagent_containers/food/snacks/appletart/New()
/obj/item/weapon/reagent_containers/food/snacks/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/snacks/attack_animal(var/mob/M)
/obj/item/weapon/reagent_containers/food/snacks/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/attackby(obj/item/weapon/W, mob/user)
/obj/item/weapon/reagent_containers/food/snacks/badrecipe
/obj/item/weapon/reagent_containers/food/snacks/badrecipe/New()
/obj/item/weapon/reagent_containers/food/snacks/baguette
/obj/item/weapon/reagent_containers/food/snacks/baguette/New()
/obj/item/weapon/reagent_containers/food/snacks/bananabreadslice
/obj/item/weapon/reagent_containers/food/snacks/beans
/obj/item/weapon/reagent_containers/food/snacks/beans/New()
/obj/item/weapon/reagent_containers/food/snacks/bearmeat
/obj/item/weapon/reagent_containers/food/snacks/bearmeat/New()
/obj/item/weapon/reagent_containers/food/snacks/beetsoup
/obj/item/weapon/reagent_containers/food/snacks/beetsoup/New()
/obj/item/weapon/reagent_containers/food/snacks/benedict
/obj/item/weapon/reagent_containers/food/snacks/benedict/New()
/obj/item/weapon/reagent_containers/food/snacks/berryclafoutis
/obj/item/weapon/reagent_containers/food/snacks/berryclafoutis/New()
/obj/item/weapon/reagent_containers/food/snacks/bigbiteburger
/obj/item/weapon/reagent_containers/food/snacks/bigbiteburger/New()
/obj/item/weapon/reagent_containers/food/snacks/birthdaycakeslice
/obj/item/weapon/reagent_containers/food/snacks/bloodsoup
/obj/item/weapon/reagent_containers/food/snacks/bloodsoup/New()
/obj/item/weapon/reagent_containers/food/snacks/boiledegg
/obj/item/weapon/reagent_containers/food/snacks/boiledegg/New()
/obj/item/weapon/reagent_containers/food/snacks/boiledrice
/obj/item/weapon/reagent_containers/food/snacks/boiledrice/New()
/obj/item/weapon/reagent_containers/food/snacks/boiledslimecore
/obj/item/weapon/reagent_containers/food/snacks/boiledslimecore/New()
/obj/item/weapon/reagent_containers/food/snacks/boiledspagetti
/obj/item/weapon/reagent_containers/food/snacks/boiledspagetti/New()
/obj/item/weapon/reagent_containers/food/snacks/boiledspagetti/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/boiledspiderleg
/obj/item/weapon/reagent_containers/food/snacks/boiledspiderleg/New()
/obj/item/weapon/reagent_containers/food/snacks/brainburger
/obj/item/weapon/reagent_containers/food/snacks/brainburger/New()
/obj/item/weapon/reagent_containers/food/snacks/braincakeslice
/obj/item/weapon/reagent_containers/food/snacks/breadslice
/obj/item/weapon/reagent_containers/food/snacks/breadslice/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/bun
/obj/item/weapon/reagent_containers/food/snacks/bun/New()
/obj/item/weapon/reagent_containers/food/snacks/bun/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/candiedapple
/obj/item/weapon/reagent_containers/food/snacks/candiedapple/New()
/obj/item/weapon/reagent_containers/food/snacks/candy
/obj/item/weapon/reagent_containers/food/snacks/candy/New()
/obj/item/weapon/reagent_containers/food/snacks/candy/donor
/obj/item/weapon/reagent_containers/food/snacks/candy/donor/New()
/obj/item/weapon/reagent_containers/food/snacks/candy_corn
/obj/item/weapon/reagent_containers/food/snacks/candy_corn/New()
/obj/item/weapon/reagent_containers/food/snacks/carpmeat
/obj/item/weapon/reagent_containers/food/snacks/carpmeat/New()
/obj/item/weapon/reagent_containers/food/snacks/carrotcakeslice
/obj/item/weapon/reagent_containers/food/snacks/carrotfries
/obj/item/weapon/reagent_containers/food/snacks/carrotfries/New()
/obj/item/weapon/reagent_containers/food/snacks/cereal
/obj/item/weapon/reagent_containers/food/snacks/cereal/New()
/obj/item/weapon/reagent_containers/food/snacks/chawanmushi
/obj/item/weapon/reagent_containers/food/snacks/chawanmushi/New()
/obj/item/weapon/reagent_containers/food/snacks/cheeseburger
/obj/item/weapon/reagent_containers/food/snacks/cheeseburger/New()
/obj/item/weapon/reagent_containers/food/snacks/cheesecakeslice
/obj/item/weapon/reagent_containers/food/snacks/cheesewedge
/obj/item/weapon/reagent_containers/food/snacks/cheesiehonkers
/obj/item/weapon/reagent_containers/food/snacks/cheesiehonkers/New()
/obj/item/weapon/reagent_containers/food/snacks/cheesyfries
/obj/item/weapon/reagent_containers/food/snacks/cheesyfries/New()
/obj/item/weapon/reagent_containers/food/snacks/cherrypie
/obj/item/weapon/reagent_containers/food/snacks/cherrypie/New()
/obj/item/weapon/reagent_containers/food/snacks/chinese/chowmein
/obj/item/weapon/reagent_containers/food/snacks/chinese/chowmein/New()
/obj/item/weapon/reagent_containers/food/snacks/chinese/newdles
/obj/item/weapon/reagent_containers/food/snacks/chinese/newdles/New()
/obj/item/weapon/reagent_containers/food/snacks/chinese/rice
/obj/item/weapon/reagent_containers/food/snacks/chinese/rice/New()
/obj/item/weapon/reagent_containers/food/snacks/chinese/tao
/obj/item/weapon/reagent_containers/food/snacks/chinese/tao/New()
/obj/item/weapon/reagent_containers/food/snacks/chips
/obj/item/weapon/reagent_containers/food/snacks/chips/New()
/obj/item/weapon/reagent_containers/food/snacks/chocolatebar
/obj/item/weapon/reagent_containers/food/snacks/chocolatebar/New()
/obj/item/weapon/reagent_containers/food/snacks/chocolatecakeslice
/obj/item/weapon/reagent_containers/food/snacks/chocolateegg
/obj/item/weapon/reagent_containers/food/snacks/chocolateegg/New()
/obj/item/weapon/reagent_containers/food/snacks/clownburger
/obj/item/weapon/reagent_containers/food/snacks/clownburger/New()
/obj/item/weapon/reagent_containers/food/snacks/clownstears
/obj/item/weapon/reagent_containers/food/snacks/clownstears/New()
/obj/item/weapon/reagent_containers/food/snacks/coldchili
/obj/item/weapon/reagent_containers/food/snacks/coldchili/New()
/obj/item/weapon/reagent_containers/food/snacks/cookie
/obj/item/weapon/reagent_containers/food/snacks/cookie/New()
/obj/item/weapon/reagent_containers/food/snacks/cracker
/obj/item/weapon/reagent_containers/food/snacks/cracker/New()
/obj/item/weapon/reagent_containers/food/snacks/creamcheesebreadslice
/obj/item/weapon/reagent_containers/food/snacks/csandwich
/obj/item/weapon/reagent_containers/food/snacks/csandwich/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/csandwich/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/food/snacks/csandwich/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/csandwich/examine()
/obj/item/weapon/reagent_containers/food/snacks/csandwich/update()
/obj/item/weapon/reagent_containers/food/snacks/cubancarp
/obj/item/weapon/reagent_containers/food/snacks/cubancarp/New()
/obj/item/weapon/reagent_containers/food/snacks/customizable
/obj/item/weapon/reagent_containers/food/snacks/customizable/Del()
/obj/item/weapon/reagent_containers/food/snacks/customizable/New()
/obj/item/weapon/reagent_containers/food/snacks/customizable/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/customizable/burger
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/bar
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/candycane
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/cash
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/coin
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/cookie
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/cotton
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/donut
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/gum
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/gummybear
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/gummyworm
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/jawbreaker
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/jellybean
/obj/item/weapon/reagent_containers/food/snacks/customizable/candy/sucker
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/bread
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/cake
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/donkpocket
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/jelly
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/kebab
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/pie
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/salad
/obj/item/weapon/reagent_containers/food/snacks/customizable/cook/waffles
/obj/item/weapon/reagent_containers/food/snacks/customizable/examine()
/obj/item/weapon/reagent_containers/food/snacks/customizable/fullycustom
/obj/item/weapon/reagent_containers/food/snacks/customizable/pasta
/obj/item/weapon/reagent_containers/food/snacks/customizable/pizza
/obj/item/weapon/reagent_containers/food/snacks/customizable/soup
/obj/item/weapon/reagent_containers/food/snacks/customizable/update()
/obj/item/weapon/reagent_containers/food/snacks/cutlet
/obj/item/weapon/reagent_containers/food/snacks/cutlet/New()
/obj/item/weapon/reagent_containers/food/snacks/deepfryholder
/obj/item/weapon/reagent_containers/food/snacks/deepfryholder/New()
/obj/item/weapon/reagent_containers/food/snacks/dionaroast
/obj/item/weapon/reagent_containers/food/snacks/dionaroast/New()
/obj/item/weapon/reagent_containers/food/snacks/donkpocket
/obj/item/weapon/reagent_containers/food/snacks/donkpocket/New()
/obj/item/weapon/reagent_containers/food/snacks/donkpocket/cooltime()
/obj/item/weapon/reagent_containers/food/snacks/donut
/obj/item/weapon/reagent_containers/food/snacks/donut/chaos
/obj/item/weapon/reagent_containers/food/snacks/donut/chaos/New()
/obj/item/weapon/reagent_containers/food/snacks/donut/cherryjelly
/obj/item/weapon/reagent_containers/food/snacks/donut/cherryjelly/New()
/obj/item/weapon/reagent_containers/food/snacks/donut/jelly
/obj/item/weapon/reagent_containers/food/snacks/donut/jelly/New()
/obj/item/weapon/reagent_containers/food/snacks/donut/normal
/obj/item/weapon/reagent_containers/food/snacks/donut/normal/New()
/obj/item/weapon/reagent_containers/food/snacks/donut/slimejelly
/obj/item/weapon/reagent_containers/food/snacks/donut/slimejelly/New()
/obj/item/weapon/reagent_containers/food/snacks/dough
/obj/item/weapon/reagent_containers/food/snacks/dough/New()
/obj/item/weapon/reagent_containers/food/snacks/dough/attackby(obj/item/I, mob/user)
/obj/item/weapon/reagent_containers/food/snacks/dough_ball
/obj/item/weapon/reagent_containers/food/snacks/dough_ball/New()
/obj/item/weapon/reagent_containers/food/snacks/dough_ball/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/doughslice
/obj/item/weapon/reagent_containers/food/snacks/doughslice/New()
/obj/item/weapon/reagent_containers/food/snacks/egg
/obj/item/weapon/reagent_containers/food/snacks/egg/New()
/obj/item/weapon/reagent_containers/food/snacks/egg/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/egg/blue
/obj/item/weapon/reagent_containers/food/snacks/egg/green
/obj/item/weapon/reagent_containers/food/snacks/egg/mime
/obj/item/weapon/reagent_containers/food/snacks/egg/orange
/obj/item/weapon/reagent_containers/food/snacks/egg/process()
/obj/item/weapon/reagent_containers/food/snacks/egg/purple
/obj/item/weapon/reagent_containers/food/snacks/egg/rainbow
/obj/item/weapon/reagent_containers/food/snacks/egg/red
/obj/item/weapon/reagent_containers/food/snacks/egg/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/egg/yellow
/obj/item/weapon/reagent_containers/food/snacks/eggplantparm
/obj/item/weapon/reagent_containers/food/snacks/eggplantparm/New()
/obj/item/weapon/reagent_containers/food/snacks/enchiladas
/obj/item/weapon/reagent_containers/food/snacks/enchiladas/New()
/obj/item/weapon/reagent_containers/food/snacks/examine()
/obj/item/weapon/reagent_containers/food/snacks/farwacube
/obj/item/weapon/reagent_containers/food/snacks/farwacube/Expand()
/obj/item/weapon/reagent_containers/food/snacks/farwacube/New()
/obj/item/weapon/reagent_containers/food/snacks/farwacube/Unwrap(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/farwacube/afterattack(obj/O as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/farwacube/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/farwacube/wrapped
/obj/item/weapon/reagent_containers/food/snacks/fishandchips
/obj/item/weapon/reagent_containers/food/snacks/fishandchips/New()
/obj/item/weapon/reagent_containers/food/snacks/fishburger
/obj/item/weapon/reagent_containers/food/snacks/fishburger/New()
/obj/item/weapon/reagent_containers/food/snacks/fishfingers
/obj/item/weapon/reagent_containers/food/snacks/fishfingers/New()
/obj/item/weapon/reagent_containers/food/snacks/flatbread
/obj/item/weapon/reagent_containers/food/snacks/flatbread/New()
/obj/item/weapon/reagent_containers/food/snacks/flour
/obj/item/weapon/reagent_containers/food/snacks/flour/New()
/obj/item/weapon/reagent_containers/food/snacks/flour/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/fortunecookie
/obj/item/weapon/reagent_containers/food/snacks/fortunecookie/New()
/obj/item/weapon/reagent_containers/food/snacks/friedbanana
/obj/item/weapon/reagent_containers/food/snacks/friedbanana/New()
/obj/item/weapon/reagent_containers/food/snacks/friedegg
/obj/item/weapon/reagent_containers/food/snacks/friedegg/New()
/obj/item/weapon/reagent_containers/food/snacks/fries
/obj/item/weapon/reagent_containers/food/snacks/fries/New()
/obj/item/weapon/reagent_containers/food/snacks/ghostburger
/obj/item/weapon/reagent_containers/food/snacks/ghostburger/New()
/obj/item/weapon/reagent_containers/food/snacks/grilledcheese
/obj/item/weapon/reagent_containers/food/snacks/grilledcheese/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/
/obj/item/weapon/reagent_containers/food/snacks/grown//New(newloc,newpotency)
/obj/item/weapon/reagent_containers/food/snacks/grown/amauri
/obj/item/weapon/reagent_containers/food/snacks/grown/amauri/New(var/loc, var/potency)
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosiadeus
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosiadeus/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosiadeus/attackby(var/obj/item/W as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosiavulgaris
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosiavulgaris/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/ambrosiavulgaris/attackby(var/obj/item/W as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/apple
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/poisoned
/obj/item/weapon/reagent_containers/food/snacks/grown/apple/poisoned/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/banana
/obj/item/weapon/reagent_containers/food/snacks/grown/banana/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/berries
/obj/item/weapon/reagent_containers/food/snacks/grown/berries/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/bloodtomato
/obj/item/weapon/reagent_containers/food/snacks/grown/bloodtomato/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/bloodtomato/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/grown/bluespacetomato
/obj/item/weapon/reagent_containers/food/snacks/grown/bluespacetomato/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/bluespacetomato/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/grown/bluetomato
/obj/item/weapon/reagent_containers/food/snacks/grown/bluetomato/Crossed(AM as mob|obj)
/obj/item/weapon/reagent_containers/food/snacks/grown/bluetomato/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/bluetomato/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/grown/cabbage
/obj/item/weapon/reagent_containers/food/snacks/grown/cabbage/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/carrot
/obj/item/weapon/reagent_containers/food/snacks/grown/carrot/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/cherries
/obj/item/weapon/reagent_containers/food/snacks/grown/cherries/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/chili
/obj/item/weapon/reagent_containers/food/snacks/grown/chili/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/chili/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/cocoapod
/obj/item/weapon/reagent_containers/food/snacks/grown/cocoapod/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee_arabica
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee_arabica/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee_robusta
/obj/item/weapon/reagent_containers/food/snacks/grown/coffee_robusta/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/corn
/obj/item/weapon/reagent_containers/food/snacks/grown/corn/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/deathberries
/obj/item/weapon/reagent_containers/food/snacks/grown/deathberries/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/eggplant
/obj/item/weapon/reagent_containers/food/snacks/grown/eggplant/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/gelthi
/obj/item/weapon/reagent_containers/food/snacks/grown/gelthi/New(var/loc, var/potency)
/obj/item/weapon/reagent_containers/food/snacks/grown/ghost_chilli
/obj/item/weapon/reagent_containers/food/snacks/grown/ghost_chilli/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/glowberries
/obj/item/weapon/reagent_containers/food/snacks/grown/glowberries/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/grown/glowberries/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/glowberries/dropped(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/glowberries/pickup(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/goldapple
/obj/item/weapon/reagent_containers/food/snacks/grown/goldapple/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/grapes
/obj/item/weapon/reagent_containers/food/snacks/grown/grapes/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/greengrapes
/obj/item/weapon/reagent_containers/food/snacks/grown/greengrapes/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/harebell
/obj/item/weapon/reagent_containers/food/snacks/grown/harebell/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/icepepper
/obj/item/weapon/reagent_containers/food/snacks/grown/icepepper/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/icepepper/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/jungle_fruit
/obj/item/weapon/reagent_containers/food/snacks/grown/jurlmah
/obj/item/weapon/reagent_containers/food/snacks/grown/jurlmah/New(var/loc, var/potency)
/obj/item/weapon/reagent_containers/food/snacks/grown/killertomato
/obj/item/weapon/reagent_containers/food/snacks/grown/killertomato/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/killertomato/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/koibeans
/obj/item/weapon/reagent_containers/food/snacks/grown/koibeans/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/kudzupod
/obj/item/weapon/reagent_containers/food/snacks/grown/kudzupod/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/lemon
/obj/item/weapon/reagent_containers/food/snacks/grown/lemon/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/lime
/obj/item/weapon/reagent_containers/food/snacks/grown/lime/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/money
/obj/item/weapon/reagent_containers/food/snacks/grown/money/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/moonflower
/obj/item/weapon/reagent_containers/food/snacks/grown/moonflower/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mtear
/obj/item/weapon/reagent_containers/food/snacks/grown/mtear/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mtear/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/amanita
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/amanita/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/amanita/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/angel
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/angel/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/angel/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/chanterelle
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/chanterelle/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/Destroy()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/dropped(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/glowshroom/pickup(mob/user)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/libertycap
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/libertycap/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/libertycap/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/plumphelmet
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/plumphelmet/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/reishi
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/reishi/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/reishi/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/walkingmushroom
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/walkingmushroom/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/mushroom/walkingmushroom/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/orange
/obj/item/weapon/reagent_containers/food/snacks/grown/orange/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/plastellium
/obj/item/weapon/reagent_containers/food/snacks/grown/plastellium/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/poisonberries
/obj/item/weapon/reagent_containers/food/snacks/grown/poisonberries/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/poppy
/obj/item/weapon/reagent_containers/food/snacks/grown/poppy/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/potato
/obj/item/weapon/reagent_containers/food/snacks/grown/potato/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/potato/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/pumpkin
/obj/item/weapon/reagent_containers/food/snacks/grown/pumpkin/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/pumpkin/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/ricestalk
/obj/item/weapon/reagent_containers/food/snacks/grown/ricestalk/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/shand
/obj/item/weapon/reagent_containers/food/snacks/grown/shand/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/shand/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/soybeans
/obj/item/weapon/reagent_containers/food/snacks/grown/soybeans/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/sugarcane
/obj/item/weapon/reagent_containers/food/snacks/grown/sugarcane/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/surik
/obj/item/weapon/reagent_containers/food/snacks/grown/surik/New(var/loc, var/potency)
/obj/item/weapon/reagent_containers/food/snacks/grown/tea_aspera
/obj/item/weapon/reagent_containers/food/snacks/grown/tea_aspera/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/tea_astra
/obj/item/weapon/reagent_containers/food/snacks/grown/tea_astra/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/telriis_clump
/obj/item/weapon/reagent_containers/food/snacks/grown/telriis_clump/New(var/loc, var/potency)
/obj/item/weapon/reagent_containers/food/snacks/grown/thaadrabloom
/obj/item/weapon/reagent_containers/food/snacks/grown/thaadrabloom/New(var/loc, var/potency)
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco/attackby(var/obj/item/W as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco_space
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco_space/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/tobacco_space/attackby(var/obj/item/W as obj, var/mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/tomato/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/grown/vale
/obj/item/weapon/reagent_containers/food/snacks/grown/vale/New(var/loc, var/potency)
/obj/item/weapon/reagent_containers/food/snacks/grown/watermelon
/obj/item/weapon/reagent_containers/food/snacks/grown/watermelon/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/wheat
/obj/item/weapon/reagent_containers/food/snacks/grown/wheat/New()
/obj/item/weapon/reagent_containers/food/snacks/grown/whitebeet
/obj/item/weapon/reagent_containers/food/snacks/grown/whitebeet/New()
/obj/item/weapon/reagent_containers/food/snacks/herbsalad
/obj/item/weapon/reagent_containers/food/snacks/herbsalad/New()
/obj/item/weapon/reagent_containers/food/snacks/honeycomb
/obj/item/weapon/reagent_containers/food/snacks/honeycomb/New()
/obj/item/weapon/reagent_containers/food/snacks/hotchili
/obj/item/weapon/reagent_containers/food/snacks/hotchili/New()
/obj/item/weapon/reagent_containers/food/snacks/hotdog
/obj/item/weapon/reagent_containers/food/snacks/hotdog/New()
/obj/item/weapon/reagent_containers/food/snacks/hugemushroomslice
/obj/item/weapon/reagent_containers/food/snacks/hugemushroomslice/New()
/obj/item/weapon/reagent_containers/food/snacks/human
/obj/item/weapon/reagent_containers/food/snacks/human/burger
/obj/item/weapon/reagent_containers/food/snacks/human/burger/New()
/obj/item/weapon/reagent_containers/food/snacks/human/kabob
/obj/item/weapon/reagent_containers/food/snacks/human/kabob/New()
/obj/item/weapon/reagent_containers/food/snacks/icecream
/obj/item/weapon/reagent_containers/food/snacks/icecream/New()
/obj/item/weapon/reagent_containers/food/snacks/icecream/add_ice_cream(var/flavour)
/obj/item/weapon/reagent_containers/food/snacks/icecream/icecreamcone
/obj/item/weapon/reagent_containers/food/snacks/icecream/icecreamcup
/obj/item/weapon/reagent_containers/food/snacks/icecreamsandwich
/obj/item/weapon/reagent_containers/food/snacks/icecreamsandwich/New()
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast/New()
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast/cherry
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast/cherry/New()
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast/slime
/obj/item/weapon/reagent_containers/food/snacks/jelliedtoast/slime/New()
/obj/item/weapon/reagent_containers/food/snacks/jellyburger
/obj/item/weapon/reagent_containers/food/snacks/jellyburger/New()
/obj/item/weapon/reagent_containers/food/snacks/jellyburger/cherry
/obj/item/weapon/reagent_containers/food/snacks/jellyburger/cherry/New()
/obj/item/weapon/reagent_containers/food/snacks/jellyburger/slime
/obj/item/weapon/reagent_containers/food/snacks/jellyburger/slime/New()
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich/New()
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich/cherry
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich/cherry/New()
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich/slime
/obj/item/weapon/reagent_containers/food/snacks/jellysandwich/slime/New()
/obj/item/weapon/reagent_containers/food/snacks/lemoncakeslice
/obj/item/weapon/reagent_containers/food/snacks/limecakeslice
/obj/item/weapon/reagent_containers/food/snacks/loadedbakedpotato
/obj/item/weapon/reagent_containers/food/snacks/loadedbakedpotato/New()
/obj/item/weapon/reagent_containers/food/snacks/margheritaslice
/obj/item/weapon/reagent_containers/food/snacks/meat
/obj/item/weapon/reagent_containers/food/snacks/meat/New()
/obj/item/weapon/reagent_containers/food/snacks/meat/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/meat/corgi
/obj/item/weapon/reagent_containers/food/snacks/meat/human
/obj/item/weapon/reagent_containers/food/snacks/meat/monkey
/obj/item/weapon/reagent_containers/food/snacks/meat/syntiflesh
/obj/item/weapon/reagent_containers/food/snacks/meatball
/obj/item/weapon/reagent_containers/food/snacks/meatball/New()
/obj/item/weapon/reagent_containers/food/snacks/meatballsoup
/obj/item/weapon/reagent_containers/food/snacks/meatballsoup/New()
/obj/item/weapon/reagent_containers/food/snacks/meatballspagetti
/obj/item/weapon/reagent_containers/food/snacks/meatballspagetti/New()
/obj/item/weapon/reagent_containers/food/snacks/meatbreadslice
/obj/item/weapon/reagent_containers/food/snacks/meatbun
/obj/item/weapon/reagent_containers/food/snacks/meatbun/New()
/obj/item/weapon/reagent_containers/food/snacks/meatpie
/obj/item/weapon/reagent_containers/food/snacks/meatpie/New()
/obj/item/weapon/reagent_containers/food/snacks/meatpizzaslice
/obj/item/weapon/reagent_containers/food/snacks/meatsteak
/obj/item/weapon/reagent_containers/food/snacks/meatsteak/New()
/obj/item/weapon/reagent_containers/food/snacks/milosoup
/obj/item/weapon/reagent_containers/food/snacks/milosoup/New()
/obj/item/weapon/reagent_containers/food/snacks/mimeburger
/obj/item/weapon/reagent_containers/food/snacks/mimeburger/New()
/obj/item/weapon/reagent_containers/food/snacks/mint
/obj/item/weapon/reagent_containers/food/snacks/mint/New()
/obj/item/weapon/reagent_containers/food/snacks/monkeyburger
/obj/item/weapon/reagent_containers/food/snacks/monkeyburger/New()
/obj/item/weapon/reagent_containers/food/snacks/monkeycube
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/Expand()
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/New()
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/Unwrap(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/afterattack(obj/O as obj, mob/user as mob, proximity)
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/monkeycube/wrapped
/obj/item/weapon/reagent_containers/food/snacks/monkeykabob
/obj/item/weapon/reagent_containers/food/snacks/monkeykabob/New()
/obj/item/weapon/reagent_containers/food/snacks/monkeysdelight
/obj/item/weapon/reagent_containers/food/snacks/monkeysdelight/New()
/obj/item/weapon/reagent_containers/food/snacks/muffin
/obj/item/weapon/reagent_containers/food/snacks/muffin/New()
/obj/item/weapon/reagent_containers/food/snacks/mushroompizzaslice
/obj/item/weapon/reagent_containers/food/snacks/mushroomsoup
/obj/item/weapon/reagent_containers/food/snacks/mushroomsoup/New()
/obj/item/weapon/reagent_containers/food/snacks/mysterysoup
/obj/item/weapon/reagent_containers/food/snacks/mysterysoup/New()
/obj/item/weapon/reagent_containers/food/snacks/neaeracube
/obj/item/weapon/reagent_containers/food/snacks/neaeracube/Expand()
/obj/item/weapon/reagent_containers/food/snacks/neaeracube/New()
/obj/item/weapon/reagent_containers/food/snacks/neaeracube/Unwrap(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/neaeracube/afterattack(obj/O as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/neaeracube/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/neaeracube/wrapped
/obj/item/weapon/reagent_containers/food/snacks/nettlesoup
/obj/item/weapon/reagent_containers/food/snacks/nettlesoup/New()
/obj/item/weapon/reagent_containers/food/snacks/no_raisin
/obj/item/weapon/reagent_containers/food/snacks/no_raisin/New()
/obj/item/weapon/reagent_containers/food/snacks/notasandwich
/obj/item/weapon/reagent_containers/food/snacks/notasandwich/New()
/obj/item/weapon/reagent_containers/food/snacks/omelette
/obj/item/weapon/reagent_containers/food/snacks/omelette/New()
/obj/item/weapon/reagent_containers/food/snacks/omelette/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/orangecakeslice
/obj/item/weapon/reagent_containers/food/snacks/pastatomato
/obj/item/weapon/reagent_containers/food/snacks/pastatomato/New()
/obj/item/weapon/reagent_containers/food/snacks/pie
/obj/item/weapon/reagent_containers/food/snacks/pie/New()
/obj/item/weapon/reagent_containers/food/snacks/pie/throw_impact(atom/hit_atom)
/obj/item/weapon/reagent_containers/food/snacks/plaincakeslice
/obj/item/weapon/reagent_containers/food/snacks/plump_pie
/obj/item/weapon/reagent_containers/food/snacks/plump_pie/New()
/obj/item/weapon/reagent_containers/food/snacks/plumphelmetbiscuit
/obj/item/weapon/reagent_containers/food/snacks/plumphelmetbiscuit/New()
/obj/item/weapon/reagent_containers/food/snacks/popcorn
/obj/item/weapon/reagent_containers/food/snacks/popcorn/New()
/obj/item/weapon/reagent_containers/food/snacks/popcorn/On_Consume()
/obj/item/weapon/reagent_containers/food/snacks/poppypretzel
/obj/item/weapon/reagent_containers/food/snacks/poppypretzel/New()
/obj/item/weapon/reagent_containers/food/snacks/pumpkinpieslice
/obj/item/weapon/reagent_containers/food/snacks/rawcutlet
/obj/item/weapon/reagent_containers/food/snacks/rawcutlet/New()
/obj/item/weapon/reagent_containers/food/snacks/rawmeatball
/obj/item/weapon/reagent_containers/food/snacks/rawmeatball/New()
/obj/item/weapon/reagent_containers/food/snacks/rawsticks
/obj/item/weapon/reagent_containers/food/snacks/rawsticks/New()
/obj/item/weapon/reagent_containers/food/snacks/ricepudding
/obj/item/weapon/reagent_containers/food/snacks/ricepudding/New()
/obj/item/weapon/reagent_containers/food/snacks/roburger
/obj/item/weapon/reagent_containers/food/snacks/roburger/New()
/obj/item/weapon/reagent_containers/food/snacks/roburgerbig
/obj/item/weapon/reagent_containers/food/snacks/roburgerbig/New()
/obj/item/weapon/reagent_containers/food/snacks/rofflewaffles
/obj/item/weapon/reagent_containers/food/snacks/rofflewaffles/New()
/obj/item/weapon/reagent_containers/food/snacks/sandwich
/obj/item/weapon/reagent_containers/food/snacks/sandwich/New()
/obj/item/weapon/reagent_containers/food/snacks/sashimi
/obj/item/weapon/reagent_containers/food/snacks/sashimi/New()
/obj/item/weapon/reagent_containers/food/snacks/sausage
/obj/item/weapon/reagent_containers/food/snacks/sausage/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/applecake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/applecake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/bananabread
/obj/item/weapon/reagent_containers/food/snacks/sliceable/bananabread/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/birthdaycake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/birthdaycake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/braincake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/braincake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/bread
/obj/item/weapon/reagent_containers/food/snacks/sliceable/bread/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/carrotcake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/carrotcake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/cheesecake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/cheesecake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/cheesewheel
/obj/item/weapon/reagent_containers/food/snacks/sliceable/cheesewheel/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/chocolatecake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/chocolatecake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/creamcheesebread
/obj/item/weapon/reagent_containers/food/snacks/sliceable/creamcheesebread/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/flatdough
/obj/item/weapon/reagent_containers/food/snacks/sliceable/flatdough/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/flatdough/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/sliceable/lemoncake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/lemoncake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/limecake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/limecake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/meatbread
/obj/item/weapon/reagent_containers/food/snacks/sliceable/meatbread/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/orangecake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/orangecake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/margherita
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/margherita/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/meatpizza
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/meatpizza/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/mushroompizza
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/mushroompizza/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/vegetablepizza
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pizza/vegetablepizza/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/plaincake
/obj/item/weapon/reagent_containers/food/snacks/sliceable/plaincake/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pumpkinpie
/obj/item/weapon/reagent_containers/food/snacks/sliceable/pumpkinpie/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/spidermeatbread
/obj/item/weapon/reagent_containers/food/snacks/sliceable/spidermeatbread/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/tofubread
/obj/item/weapon/reagent_containers/food/snacks/sliceable/tofubread/New()
/obj/item/weapon/reagent_containers/food/snacks/sliceable/xenomeatbread
/obj/item/weapon/reagent_containers/food/snacks/sliceable/xenomeatbread/New()
/obj/item/weapon/reagent_containers/food/snacks/slimesoup
/obj/item/weapon/reagent_containers/food/snacks/slimesoup/New()
/obj/item/weapon/reagent_containers/food/snacks/sosjerky
/obj/item/weapon/reagent_containers/food/snacks/sosjerky/New()
/obj/item/weapon/reagent_containers/food/snacks/soydope
/obj/item/weapon/reagent_containers/food/snacks/soydope/New()
/obj/item/weapon/reagent_containers/food/snacks/soylentgreen
/obj/item/weapon/reagent_containers/food/snacks/soylentgreen/New()
/obj/item/weapon/reagent_containers/food/snacks/soylenviridians
/obj/item/weapon/reagent_containers/food/snacks/soylenviridians/New()
/obj/item/weapon/reagent_containers/food/snacks/spacetwinkie
/obj/item/weapon/reagent_containers/food/snacks/spacetwinkie/New()
/obj/item/weapon/reagent_containers/food/snacks/spacylibertyduff
/obj/item/weapon/reagent_containers/food/snacks/spacylibertyduff/New()
/obj/item/weapon/reagent_containers/food/snacks/spagetti
/obj/item/weapon/reagent_containers/food/snacks/spagetti/New()
/obj/item/weapon/reagent_containers/food/snacks/spellburger
/obj/item/weapon/reagent_containers/food/snacks/spellburger/New()
/obj/item/weapon/reagent_containers/food/snacks/spesslaw
/obj/item/weapon/reagent_containers/food/snacks/spesslaw/New()
/obj/item/weapon/reagent_containers/food/snacks/spidereggs
/obj/item/weapon/reagent_containers/food/snacks/spidereggs/New()
/obj/item/weapon/reagent_containers/food/snacks/spidereggsham
/obj/item/weapon/reagent_containers/food/snacks/spidereggsham/New()
/obj/item/weapon/reagent_containers/food/snacks/spiderleg
/obj/item/weapon/reagent_containers/food/snacks/spiderleg/New()
/obj/item/weapon/reagent_containers/food/snacks/spidermeat
/obj/item/weapon/reagent_containers/food/snacks/spidermeat/New()
/obj/item/weapon/reagent_containers/food/snacks/spidermeatbreadslice
/obj/item/weapon/reagent_containers/food/snacks/spidermeatbreadslice/New()
/obj/item/weapon/reagent_containers/food/snacks/stew
/obj/item/weapon/reagent_containers/food/snacks/stew/New()
/obj/item/weapon/reagent_containers/food/snacks/stewedsoymeat
/obj/item/weapon/reagent_containers/food/snacks/stewedsoymeat/New()
/obj/item/weapon/reagent_containers/food/snacks/stokcube
/obj/item/weapon/reagent_containers/food/snacks/stokcube/Expand()
/obj/item/weapon/reagent_containers/food/snacks/stokcube/New()
/obj/item/weapon/reagent_containers/food/snacks/stokcube/Unwrap(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/stokcube/afterattack(obj/O as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/stokcube/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/food/snacks/stokcube/wrapped
/obj/item/weapon/reagent_containers/food/snacks/stuffing
/obj/item/weapon/reagent_containers/food/snacks/stuffing/New()
/obj/item/weapon/reagent_containers/food/snacks/sugarcookie
/obj/item/weapon/reagent_containers/food/snacks/sugarcookie/New()
/obj/item/weapon/reagent_containers/food/snacks/superbiteburger
/obj/item/weapon/reagent_containers/food/snacks/superbiteburger/New()
/obj/item/weapon/reagent_containers/food/snacks/syndicake
/obj/item/weapon/reagent_containers/food/snacks/syndicake/New()
/obj/item/weapon/reagent_containers/food/snacks/taco
/obj/item/weapon/reagent_containers/food/snacks/taco/New()
/obj/item/weapon/reagent_containers/food/snacks/telebacon
/obj/item/weapon/reagent_containers/food/snacks/telebacon/New()
/obj/item/weapon/reagent_containers/food/snacks/telebacon/On_Consume()
/obj/item/weapon/reagent_containers/food/snacks/toastedsandwich
/obj/item/weapon/reagent_containers/food/snacks/toastedsandwich/New()
/obj/item/weapon/reagent_containers/food/snacks/tofu
/obj/item/weapon/reagent_containers/food/snacks/tofu/New()
/obj/item/weapon/reagent_containers/food/snacks/tofubreadslice
/obj/item/weapon/reagent_containers/food/snacks/tofuburger
/obj/item/weapon/reagent_containers/food/snacks/tofuburger/New()
/obj/item/weapon/reagent_containers/food/snacks/tofukabob
/obj/item/weapon/reagent_containers/food/snacks/tofukabob/New()
/obj/item/weapon/reagent_containers/food/snacks/tofupie
/obj/item/weapon/reagent_containers/food/snacks/tofupie/New()
/obj/item/weapon/reagent_containers/food/snacks/tofurkey
/obj/item/weapon/reagent_containers/food/snacks/tofurkey/New()
/obj/item/weapon/reagent_containers/food/snacks/tomatomeat
/obj/item/weapon/reagent_containers/food/snacks/tomatomeat/New()
/obj/item/weapon/reagent_containers/food/snacks/tomatosoup
/obj/item/weapon/reagent_containers/food/snacks/tomatosoup/New()
/obj/item/weapon/reagent_containers/food/snacks/twobread
/obj/item/weapon/reagent_containers/food/snacks/twobread/New()
/obj/item/weapon/reagent_containers/food/snacks/validsalad
/obj/item/weapon/reagent_containers/food/snacks/validsalad/New()
/obj/item/weapon/reagent_containers/food/snacks/vegetablepizzaslice
/obj/item/weapon/reagent_containers/food/snacks/vegetablesoup
/obj/item/weapon/reagent_containers/food/snacks/vegetablesoup/New()
/obj/item/weapon/reagent_containers/food/snacks/waffles
/obj/item/weapon/reagent_containers/food/snacks/waffles/New()
/obj/item/weapon/reagent_containers/food/snacks/watermelonslice
/obj/item/weapon/reagent_containers/food/snacks/wingfangchu
/obj/item/weapon/reagent_containers/food/snacks/wingfangchu/New()
/obj/item/weapon/reagent_containers/food/snacks/wishsoup
/obj/item/weapon/reagent_containers/food/snacks/wishsoup/New()
/obj/item/weapon/reagent_containers/food/snacks/wrap
/obj/item/weapon/reagent_containers/food/snacks/wrap/New()
/obj/item/weapon/reagent_containers/food/snacks/xemeatpie
/obj/item/weapon/reagent_containers/food/snacks/xemeatpie/New()
/obj/item/weapon/reagent_containers/food/snacks/xenoburger
/obj/item/weapon/reagent_containers/food/snacks/xenoburger/New()
/obj/item/weapon/reagent_containers/food/snacks/xenomeat
/obj/item/weapon/reagent_containers/food/snacks/xenomeat/New()
/obj/item/weapon/reagent_containers/food/snacks/xenomeatbreadslice
/obj/item/weapon/reagent_containers/glass
/obj/item/weapon/reagent_containers/glass/New()
/obj/item/weapon/reagent_containers/glass/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/glass/attack_self()
/obj/item/weapon/reagent_containers/glass/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/glass/beaker
/obj/item/weapon/reagent_containers/glass/beaker/attack_hand()
/obj/item/weapon/reagent_containers/glass/beaker/bluespace
/obj/item/weapon/reagent_containers/glass/beaker/cryoxadone
/obj/item/weapon/reagent_containers/glass/beaker/cryoxadone/New()
/obj/item/weapon/reagent_containers/glass/beaker/dropped(mob/user)
/obj/item/weapon/reagent_containers/glass/beaker/fluff/eleanor_stone
/obj/item/weapon/reagent_containers/glass/beaker/fuel
/obj/item/weapon/reagent_containers/glass/beaker/fuel/New()
/obj/item/weapon/reagent_containers/glass/beaker/large
/obj/item/weapon/reagent_containers/glass/beaker/large/fluff/nashida_bishara_1
/obj/item/weapon/reagent_containers/glass/beaker/lithium
/obj/item/weapon/reagent_containers/glass/beaker/lithium/New()
/obj/item/weapon/reagent_containers/glass/beaker/noreact
/obj/item/weapon/reagent_containers/glass/beaker/on_reagent_change()
/obj/item/weapon/reagent_containers/glass/beaker/oxygen
/obj/item/weapon/reagent_containers/glass/beaker/oxygen/New()
/obj/item/weapon/reagent_containers/glass/beaker/pickup(mob/user)
/obj/item/weapon/reagent_containers/glass/beaker/slime
/obj/item/weapon/reagent_containers/glass/beaker/slime/New()
/obj/item/weapon/reagent_containers/glass/beaker/sodium
/obj/item/weapon/reagent_containers/glass/beaker/sodium/New()
/obj/item/weapon/reagent_containers/glass/beaker/sulphuric
/obj/item/weapon/reagent_containers/glass/beaker/sulphuric/New()
/obj/item/weapon/reagent_containers/glass/beaker/tungsten
/obj/item/weapon/reagent_containers/glass/beaker/tungsten/New()
/obj/item/weapon/reagent_containers/glass/beaker/update_icon()
/obj/item/weapon/reagent_containers/glass/beaker/vial
/obj/item/weapon/reagent_containers/glass/beaker/water
/obj/item/weapon/reagent_containers/glass/beaker/water/New()
/obj/item/weapon/reagent_containers/glass/bottle
/obj/item/weapon/reagent_containers/glass/bottle/New()
/obj/item/weapon/reagent_containers/glass/bottle/adminordrazine
/obj/item/weapon/reagent_containers/glass/bottle/adminordrazine/New()
/obj/item/weapon/reagent_containers/glass/bottle/ammonia
/obj/item/weapon/reagent_containers/glass/bottle/ammonia/New()
/obj/item/weapon/reagent_containers/glass/bottle/antitoxin
/obj/item/weapon/reagent_containers/glass/bottle/antitoxin/New()
/obj/item/weapon/reagent_containers/glass/bottle/attack_hand()
/obj/item/weapon/reagent_containers/glass/bottle/brainrot
/obj/item/weapon/reagent_containers/glass/bottle/brainrot/New()
/obj/item/weapon/reagent_containers/glass/bottle/capsaicin
/obj/item/weapon/reagent_containers/glass/bottle/capsaicin/New()
/obj/item/weapon/reagent_containers/glass/bottle/chloralhydrate
/obj/item/weapon/reagent_containers/glass/bottle/chloralhydrate/New()
/obj/item/weapon/reagent_containers/glass/bottle/cold
/obj/item/weapon/reagent_containers/glass/bottle/cold/New()
/obj/item/weapon/reagent_containers/glass/bottle/cyanide
/obj/item/weapon/reagent_containers/glass/bottle/cyanide/New()
/obj/item/weapon/reagent_containers/glass/bottle/diethylamine
/obj/item/weapon/reagent_containers/glass/bottle/diethylamine/New()
/obj/item/weapon/reagent_containers/glass/bottle/dropped(mob/user)
/obj/item/weapon/reagent_containers/glass/bottle/epiglottis_virion
/obj/item/weapon/reagent_containers/glass/bottle/epiglottis_virion/New()
/obj/item/weapon/reagent_containers/glass/bottle/fake_gbs
/obj/item/weapon/reagent_containers/glass/bottle/fake_gbs/New()
/obj/item/weapon/reagent_containers/glass/bottle/flu_virion
/obj/item/weapon/reagent_containers/glass/bottle/flu_virion/New()
/obj/item/weapon/reagent_containers/glass/bottle/frostoil
/obj/item/weapon/reagent_containers/glass/bottle/frostoil/New()
/obj/item/weapon/reagent_containers/glass/bottle/gbs
/obj/item/weapon/reagent_containers/glass/bottle/gbs/New()
/obj/item/weapon/reagent_containers/glass/bottle/hullucigen_virion
/obj/item/weapon/reagent_containers/glass/bottle/hullucigen_virion/New()
/obj/item/weapon/reagent_containers/glass/bottle/hyperzine
/obj/item/weapon/reagent_containers/glass/bottle/hyperzine/New()
/obj/item/weapon/reagent_containers/glass/bottle/inaprovaline
/obj/item/weapon/reagent_containers/glass/bottle/inaprovaline/New()
/obj/item/weapon/reagent_containers/glass/bottle/liver_enhance_virion
/obj/item/weapon/reagent_containers/glass/bottle/liver_enhance_virion/New()
/obj/item/weapon/reagent_containers/glass/bottle/magnitis
/obj/item/weapon/reagent_containers/glass/bottle/magnitis/New()
/obj/item/weapon/reagent_containers/glass/bottle/mutagen
/obj/item/weapon/reagent_containers/glass/bottle/mutagen/New()
/obj/item/weapon/reagent_containers/glass/bottle/on_reagent_change()
/obj/item/weapon/reagent_containers/glass/bottle/pacid
/obj/item/weapon/reagent_containers/glass/bottle/pacid/New()
/obj/item/weapon/reagent_containers/glass/bottle/pickup(mob/user)
/obj/item/weapon/reagent_containers/glass/bottle/pierrot_throat
/obj/item/weapon/reagent_containers/glass/bottle/pierrot_throat/New()
/obj/item/weapon/reagent_containers/glass/bottle/random
/obj/item/weapon/reagent_containers/glass/bottle/random/New()
/obj/item/weapon/reagent_containers/glass/bottle/random_base_chem
/obj/item/weapon/reagent_containers/glass/bottle/random_base_chem/New()
/obj/item/weapon/reagent_containers/glass/bottle/random_chem
/obj/item/weapon/reagent_containers/glass/bottle/random_chem/New()
/obj/item/weapon/reagent_containers/glass/bottle/random_reagent
/obj/item/weapon/reagent_containers/glass/bottle/random_reagent/New()
/obj/item/weapon/reagent_containers/glass/bottle/retrovirus
/obj/item/weapon/reagent_containers/glass/bottle/retrovirus/New()
/obj/item/weapon/reagent_containers/glass/bottle/robot
/obj/item/weapon/reagent_containers/glass/bottle/robot/antitoxin
/obj/item/weapon/reagent_containers/glass/bottle/robot/antitoxin/New()
/obj/item/weapon/reagent_containers/glass/bottle/robot/inaprovaline
/obj/item/weapon/reagent_containers/glass/bottle/robot/inaprovaline/New()
/obj/item/weapon/reagent_containers/glass/bottle/stoxin
/obj/item/weapon/reagent_containers/glass/bottle/stoxin/New()
/obj/item/weapon/reagent_containers/glass/bottle/toxin
/obj/item/weapon/reagent_containers/glass/bottle/toxin/New()
/obj/item/weapon/reagent_containers/glass/bottle/update_icon()
/obj/item/weapon/reagent_containers/glass/bottle/wizarditis
/obj/item/weapon/reagent_containers/glass/bottle/wizarditis/New()
/obj/item/weapon/reagent_containers/glass/bucket
/obj/item/weapon/reagent_containers/glass/bucket/attackby(var/obj/D, mob/user as mob)
/obj/item/weapon/reagent_containers/glass/examine()
/obj/item/weapon/reagent_containers/glass/paint
/obj/item/weapon/reagent_containers/glass/paint/New()
/obj/item/weapon/reagent_containers/glass/paint/afterattack(turf/simulated/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/glass/paint/black
/obj/item/weapon/reagent_containers/glass/paint/blue
/obj/item/weapon/reagent_containers/glass/paint/green
/obj/item/weapon/reagent_containers/glass/paint/red
/obj/item/weapon/reagent_containers/glass/paint/remover
/obj/item/weapon/reagent_containers/glass/paint/violet
/obj/item/weapon/reagent_containers/glass/paint/white
/obj/item/weapon/reagent_containers/glass/paint/yellow
/obj/item/weapon/reagent_containers/glass/rag
/obj/item/weapon/reagent_containers/glass/rag/afterattack(atom/A as obj|turf|area, mob/user as mob, proximity)
/obj/item/weapon/reagent_containers/glass/rag/attack(atom/target as obj|turf|area, mob/user as mob , flag)
/obj/item/weapon/reagent_containers/glass/rag/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/glass/rag/examine()
/obj/item/weapon/reagent_containers/glass/solution_tray
/obj/item/weapon/reagent_containers/glass/solution_tray/attackby(obj/item/weapon/W as obj, mob/living/user as mob)
/obj/item/weapon/reagent_containers/glass/update_name_label()
/obj/item/weapon/reagent_containers/hypospray
/obj/item/weapon/reagent_containers/hypospray/New()
/obj/item/weapon/reagent_containers/hypospray/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/hypospray/attack_paw(mob/user as mob)
/obj/item/weapon/reagent_containers/hypospray/autoinjector
/obj/item/weapon/reagent_containers/hypospray/autoinjector/New()
/obj/item/weapon/reagent_containers/hypospray/autoinjector/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/hypospray/autoinjector/examine()
/obj/item/weapon/reagent_containers/hypospray/autoinjector/update_icon()
/obj/item/weapon/reagent_containers/hypospray/fluff/asher_spock_1
/obj/item/weapon/reagent_containers/hypospray/fluff/asher_spock_1/New()
/obj/item/weapon/reagent_containers/hypospray/fluff/asher_spock_1/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/hypospray/fluff/asher_spock_1/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/hypospray/fluff/asher_spock_1/examine(mob/user as mob)
/obj/item/weapon/reagent_containers/hypospray/hyperzine
/obj/item/weapon/reagent_containers/hypospray/hyperzine/New()
/obj/item/weapon/reagent_containers/hypospray/hyperzine/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/reagent_containers/ld50_syringe
/obj/item/weapon/reagent_containers/ld50_syringe/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/reagent_containers/ld50_syringe/attack_hand()
/obj/item/weapon/reagent_containers/ld50_syringe/attack_paw()
/obj/item/weapon/reagent_containers/ld50_syringe/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/ld50_syringe/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/ld50_syringe/choral
/obj/item/weapon/reagent_containers/ld50_syringe/choral/New()
/obj/item/weapon/reagent_containers/ld50_syringe/dropped(mob/user)
/obj/item/weapon/reagent_containers/ld50_syringe/on_reagent_change()
/obj/item/weapon/reagent_containers/ld50_syringe/pickup(mob/user)
/obj/item/weapon/reagent_containers/ld50_syringe/update_icon()
/obj/item/weapon/reagent_containers/pill
/obj/item/weapon/reagent_containers/pill/New()
/obj/item/weapon/reagent_containers/pill/adminordrazine
/obj/item/weapon/reagent_containers/pill/adminordrazine/New()
/obj/item/weapon/reagent_containers/pill/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/pill/antitox
/obj/item/weapon/reagent_containers/pill/antitox/New()
/obj/item/weapon/reagent_containers/pill/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/reagent_containers/pill/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/pill/bicaridine
/obj/item/weapon/reagent_containers/pill/bicaridine/New()
/obj/item/weapon/reagent_containers/pill/citalopram
/obj/item/weapon/reagent_containers/pill/citalopram/New()
/obj/item/weapon/reagent_containers/pill/cyanide
/obj/item/weapon/reagent_containers/pill/cyanide/New()
/obj/item/weapon/reagent_containers/pill/dexalin
/obj/item/weapon/reagent_containers/pill/dexalin/New()
/obj/item/weapon/reagent_containers/pill/fluff/listermed
/obj/item/weapon/reagent_containers/pill/fluff/listermed/New()
/obj/item/weapon/reagent_containers/pill/happy
/obj/item/weapon/reagent_containers/pill/happy/New()
/obj/item/weapon/reagent_containers/pill/inaprovaline
/obj/item/weapon/reagent_containers/pill/inaprovaline/New()
/obj/item/weapon/reagent_containers/pill/kelotane
/obj/item/weapon/reagent_containers/pill/kelotane/New()
/obj/item/weapon/reagent_containers/pill/methylphenidate
/obj/item/weapon/reagent_containers/pill/methylphenidate/New()
/obj/item/weapon/reagent_containers/pill/random_drugs
/obj/item/weapon/reagent_containers/pill/random_drugs/New()
/obj/item/weapon/reagent_containers/pill/stox
/obj/item/weapon/reagent_containers/pill/stox/New()
/obj/item/weapon/reagent_containers/pill/tox
/obj/item/weapon/reagent_containers/pill/tox/New()
/obj/item/weapon/reagent_containers/pill/tramadol
/obj/item/weapon/reagent_containers/pill/tramadol/New()
/obj/item/weapon/reagent_containers/pill/zoom
/obj/item/weapon/reagent_containers/pill/zoom/New()
/obj/item/weapon/reagent_containers/reagentlist(var/obj/item/weapon/reagent_containers/snack)
/obj/item/weapon/reagent_containers/robodropper
/obj/item/weapon/reagent_containers/robodropper/afterattack(obj/target, mob/user , flag)
/obj/item/weapon/reagent_containers/spray
/obj/item/weapon/reagent_containers/spray/afterattack(atom/A as mob|obj, mob/user as mob)
/obj/item/weapon/reagent_containers/spray/alien
/obj/item/weapon/reagent_containers/spray/alien/acid
/obj/item/weapon/reagent_containers/spray/alien/smoke
/obj/item/weapon/reagent_containers/spray/alien/smoke/afterattack(atom/A as mob|obj, mob/user as mob)
/obj/item/weapon/reagent_containers/spray/alien/stun
/obj/item/weapon/reagent_containers/spray/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/spray/chemsprayer
/obj/item/weapon/reagent_containers/spray/chemsprayer/afterattack(atom/A as mob|obj, mob/user as mob)
/obj/item/weapon/reagent_containers/spray/cleaner
/obj/item/weapon/reagent_containers/spray/cleaner/New()
/obj/item/weapon/reagent_containers/spray/examine()
/obj/item/weapon/reagent_containers/spray/mister
/obj/item/weapon/reagent_containers/spray/mister/New(parent_tank)
/obj/item/weapon/reagent_containers/spray/mister/attack_self()
/obj/item/weapon/reagent_containers/spray/mister/dropped(mob/user as mob)
/obj/item/weapon/reagent_containers/spray/mister/janitor
/obj/item/weapon/reagent_containers/spray/mister/janitor/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/spray/pepper
/obj/item/weapon/reagent_containers/spray/pepper/New()
/obj/item/weapon/reagent_containers/spray/plantbgone
/obj/item/weapon/reagent_containers/spray/plantbgone/New()
/obj/item/weapon/reagent_containers/spray/plantbgone/afterattack(atom/A as mob|obj, mob/user as mob, proximity)
/obj/item/weapon/reagent_containers/spray/verb/empty()
/obj/item/weapon/reagent_containers/spray/waterflower
/obj/item/weapon/reagent_containers/spray/waterflower/New()
/obj/item/weapon/reagent_containers/spray/waterflower/attack_self(var/mob/user)
/obj/item/weapon/reagent_containers/syringe
/obj/item/weapon/reagent_containers/syringe/afterattack(obj/target, mob/user, proximity)
/obj/item/weapon/reagent_containers/syringe/antitoxin
/obj/item/weapon/reagent_containers/syringe/antitoxin/New()
/obj/item/weapon/reagent_containers/syringe/antiviral
/obj/item/weapon/reagent_containers/syringe/antiviral/New()
/obj/item/weapon/reagent_containers/syringe/attack_hand()
/obj/item/weapon/reagent_containers/syringe/attack_paw()
/obj/item/weapon/reagent_containers/syringe/attack_self(mob/user as mob)
/obj/item/weapon/reagent_containers/syringe/attackby(obj/item/I as obj, mob/user as mob)
/obj/item/weapon/reagent_containers/syringe/dropped(mob/user)
/obj/item/weapon/reagent_containers/syringe/inaprovaline
/obj/item/weapon/reagent_containers/syringe/inaprovaline/New()
/obj/item/weapon/reagent_containers/syringe/on_reagent_change()
/obj/item/weapon/reagent_containers/syringe/pickup(mob/user)
/obj/item/weapon/reagent_containers/syringe/robot/antitoxin
/obj/item/weapon/reagent_containers/syringe/robot/antitoxin/New()
/obj/item/weapon/reagent_containers/syringe/robot/inoprovaline
/obj/item/weapon/reagent_containers/syringe/robot/inoprovaline/New()
/obj/item/weapon/reagent_containers/syringe/robot/mixed
/obj/item/weapon/reagent_containers/syringe/robot/mixed/New()
/obj/item/weapon/reagent_containers/syringe/update_icon()
/obj/item/weapon/reagent_containers/syringe/update_icon()/if(!iscarbon(user))
/obj/item/weapon/reagent_containers/syringe/update_icon()/if(istype(target, /mob/living/carbon/human))
/obj/item/weapon/reagent_containers/syringe/update_icon()/if(istype(target, /mob/living/carbon/human))/for(var/mob/O in viewers(world.view, user))
/obj/item/weapon/reagent_containers/syringe/update_icon()/if(target.ckey)
/obj/item/weapon/reagent_containers/verb/set_APTFT()
/obj/item/weapon/research
/obj/item/weapon/resonator
/obj/item/weapon/resonator/CreateResonance(var/target, var/creator)
/obj/item/weapon/resonator/afterattack(atom/target, mob/user, proximity_flag)
/obj/item/weapon/resonator/attack_self(mob/user as mob)
/obj/item/weapon/retractor
/obj/item/weapon/robot_module
/obj/item/weapon/robot_module/New()
/obj/item/weapon/robot_module/alien/hunter
/obj/item/weapon/robot_module/alien/hunter/New()
/obj/item/weapon/robot_module/butler
/obj/item/weapon/robot_module/butler/New()
/obj/item/weapon/robot_module/combat
/obj/item/weapon/robot_module/combat/New()
/obj/item/weapon/robot_module/drone
/obj/item/weapon/robot_module/drone/New()
/obj/item/weapon/robot_module/drone/respawn_consumable(var/mob/living/silicon/robot/R)
/obj/item/weapon/robot_module/emp_act(severity)
/obj/item/weapon/robot_module/engineering
/obj/item/weapon/robot_module/engineering/New()
/obj/item/weapon/robot_module/engineering/respawn_consumable(var/mob/living/silicon/robot/R)
/obj/item/weapon/robot_module/janitor
/obj/item/weapon/robot_module/janitor/New()
/obj/item/weapon/robot_module/medical
/obj/item/weapon/robot_module/medical/New()
/obj/item/weapon/robot_module/miner
/obj/item/weapon/robot_module/miner/New()
/obj/item/weapon/robot_module/rebuild()
/obj/item/weapon/robot_module/respawn_consumable(var/mob/living/silicon/robot/R)
/obj/item/weapon/robot_module/security
/obj/item/weapon/robot_module/security/New()
/obj/item/weapon/robot_module/standard
/obj/item/weapon/robot_module/standard/New()
/obj/item/weapon/robot_module/syndicate
/obj/item/weapon/robot_module/syndicate/New()
/obj/item/weapon/rocksliver
/obj/item/weapon/rocksliver/New()
/obj/item/weapon/rollingpaper
/obj/item/weapon/rollingpaperpack
/obj/item/weapon/rollingpaperpack/MouseDrop(atom/over_object)
/obj/item/weapon/rollingpaperpack/attack_self(mob/user)
/obj/item/weapon/rollingpaperpack/examine()
/obj/item/weapon/rsf
/obj/item/weapon/rsf/New()
/obj/item/weapon/rsf/afterattack(atom/A, mob/user as mob, proximity)
/obj/item/weapon/rsf/attack_self(mob/user as mob)
/obj/item/weapon/rsf/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/rsp
/obj/item/weapon/ruinedvirusdish
/obj/item/weapon/ruinedvirusdish/attackby(var/obj/item/weapon/W as obj,var/mob/living/carbon/user as mob)
/obj/item/weapon/scalpel
/obj/item/weapon/scalpel/suicide_act(mob/user)
/obj/item/weapon/screwdriver
/obj/item/weapon/screwdriver/New()
/obj/item/weapon/screwdriver/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/screwdriver/suicide_act(mob/user)
/obj/item/weapon/scrying
/obj/item/weapon/scrying/attack_self(mob/user as mob)
/obj/item/weapon/scythe
/obj/item/weapon/scythe/afterattack(atom/A, mob/user as mob, proximity)
/obj/item/weapon/secbot_assembly
/obj/item/weapon/secbot_assembly/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/shard
/obj/item/weapon/shard/Bump()
/obj/item/weapon/shard/Crossed(AM as mob|obj)
/obj/item/weapon/shard/New()
/obj/item/weapon/shard/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/shard/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/shard/plasma
/obj/item/weapon/shard/plasma/New()
/obj/item/weapon/shard/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/shard/resetVariables()
/obj/item/weapon/shard/shrapnel
/obj/item/weapon/shard/shrapnel/New()
/obj/item/weapon/shard/suicide_act(mob/user)
/obj/item/weapon/shield
/obj/item/weapon/shield/energy
/obj/item/weapon/shield/energy/IsShield()
/obj/item/weapon/shield/energy/attack_self(mob/living/user as mob)
/obj/item/weapon/shield/riot
/obj/item/weapon/shield/riot/IsShield()
/obj/item/weapon/shield/riot/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/shield/riot/roman
/obj/item/weapon/shovel
/obj/item/weapon/shovel/spade
/obj/item/weapon/silencer
/obj/item/weapon/skeleton
/obj/item/weapon/skeleton/head
/obj/item/weapon/skeleton/l_arm
/obj/item/weapon/skeleton/l_foot
/obj/item/weapon/skeleton/l_hand
/obj/item/weapon/skeleton/l_leg
/obj/item/weapon/skeleton/r_arm
/obj/item/weapon/skeleton/r_foot
/obj/item/weapon/skeleton/r_hand
/obj/item/weapon/skeleton/r_leg
/obj/item/weapon/slimepotion
/obj/item/weapon/slimepotion/attack(mob/living/carbon/slime/M as mob, mob/user as mob)
/obj/item/weapon/slimepotion2
/obj/item/weapon/slimepotion2/attack(mob/living/carbon/slime/adult/M as mob, mob/user as mob)
/obj/item/weapon/slimesteroid
/obj/item/weapon/slimesteroid/attack(mob/living/carbon/slime/M as mob, mob/user as mob)
/obj/item/weapon/soap
/obj/item/weapon/soap/Crossed(AM as mob|obj)
/obj/item/weapon/soap/afterattack(atom/target, mob/user as mob, proximity)
/obj/item/weapon/soap/attack(mob/target as mob, mob/user as mob)
/obj/item/weapon/soap/deluxe
/obj/item/weapon/soap/fluff/azare_siraj_1
/obj/item/weapon/soap/nanotrasen
/obj/item/weapon/soap/syndie
/obj/item/weapon/sord
/obj/item/weapon/sord/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/sord/suicide_act(mob/user)
/obj/item/weapon/spacecash
/obj/item/weapon/spacecash/New(var/new_loc,var/new_amount=1)
/obj/item/weapon/spacecash/c10
/obj/item/weapon/spacecash/c100
/obj/item/weapon/spacecash/c1000
/obj/item/weapon/spacecash/c500
/obj/item/weapon/spacecash/examine()
/obj/item/weapon/spacecash/update_icon()
/obj/item/weapon/sparkler
/obj/item/weapon/sparkler/attackby(obj/item/weapon/W,mob/user)
/obj/item/weapon/spellbook
/obj/item/weapon/spellbook/Topic(href, href_list)
/obj/item/weapon/spellbook/attack_self(mob/user as mob)
/obj/item/weapon/spellbook/attackby(obj/item/O as obj, mob/user as mob)
/obj/item/weapon/spellbook/oneuse
/obj/item/weapon/spellbook/oneuse/New()
/obj/item/weapon/spellbook/oneuse/attack_self(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/attackby()
/obj/item/weapon/spellbook/oneuse/blind
/obj/item/weapon/spellbook/oneuse/blind/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/charge
/obj/item/weapon/spellbook/oneuse/charge/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/fireball
/obj/item/weapon/spellbook/oneuse/fireball/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/forcewall
/obj/item/weapon/spellbook/oneuse/forcewall/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/horsemask
/obj/item/weapon/spellbook/oneuse/horsemask/recoil(mob/living/carbon/user as mob)
/obj/item/weapon/spellbook/oneuse/knock
/obj/item/weapon/spellbook/oneuse/knock/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/mindswap
/obj/item/weapon/spellbook/oneuse/mindswap/onlearned()
/obj/item/weapon/spellbook/oneuse/mindswap/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/onlearned(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/recoil(mob/user as mob)
/obj/item/weapon/spellbook/oneuse/smoke
/obj/item/weapon/spellbook/oneuse/smoke/recoil(mob/user as mob)
/obj/item/weapon/spike
/obj/item/weapon/spikethrower
/obj/item/weapon/spikethrower/Del()
/obj/item/weapon/spikethrower/Fire(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, params, reflex = 0)
/obj/item/weapon/spikethrower/New()
/obj/item/weapon/spikethrower/afterattack(atom/A as mob|obj|turf|area, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/spikethrower/attack(mob/living/M as mob, mob/living/user as mob, def_zone)
/obj/item/weapon/spikethrower/examine()
/obj/item/weapon/spikethrower/process()
/obj/item/weapon/spikethrower/update_icon()
/obj/item/weapon/staff
/obj/item/weapon/staff/broom
/obj/item/weapon/staff/stick
/obj/item/weapon/stamp
/obj/item/weapon/stamp/attack_paw(mob/user as mob)
/obj/item/weapon/stamp/captain
/obj/item/weapon/stamp/ce
/obj/item/weapon/stamp/centcom
/obj/item/weapon/stamp/clown
/obj/item/weapon/stamp/cmo
/obj/item/weapon/stamp/denied
/obj/item/weapon/stamp/hop
/obj/item/weapon/stamp/hos
/obj/item/weapon/stamp/law
/obj/item/weapon/stamp/qm
/obj/item/weapon/stamp/rd
/obj/item/weapon/stock_parts
/obj/item/weapon/stock_parts/New()
/obj/item/weapon/stock_parts/capacitor
/obj/item/weapon/stock_parts/capacitor/adv
/obj/item/weapon/stock_parts/capacitor/super
/obj/item/weapon/stock_parts/console_screen
/obj/item/weapon/stock_parts/manipulator
/obj/item/weapon/stock_parts/manipulator/nano
/obj/item/weapon/stock_parts/manipulator/pico
/obj/item/weapon/stock_parts/matter_bin
/obj/item/weapon/stock_parts/matter_bin/adv
/obj/item/weapon/stock_parts/matter_bin/super
/obj/item/weapon/stock_parts/micro_laser
/obj/item/weapon/stock_parts/micro_laser/high
/obj/item/weapon/stock_parts/micro_laser/ultra
/obj/item/weapon/stock_parts/scanning_module
/obj/item/weapon/stock_parts/scanning_module/adv
/obj/item/weapon/stock_parts/scanning_module/phasic
/obj/item/weapon/stock_parts/subspace/amplifier
/obj/item/weapon/stock_parts/subspace/analyzer
/obj/item/weapon/stock_parts/subspace/ansible
/obj/item/weapon/stock_parts/subspace/crystal
/obj/item/weapon/stock_parts/subspace/filter
/obj/item/weapon/stock_parts/subspace/transmitter
/obj/item/weapon/stock_parts/subspace/treatment
/obj/item/weapon/stool
/obj/item/weapon/stool/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/stool/attack_self(mob/user as mob)
/obj/item/weapon/storage
/obj/item/weapon/storage/MouseDrop(obj/over_object as obj)
/obj/item/weapon/storage/New()
/obj/item/weapon/storage/attack_hand(mob/user as mob)
/obj/item/weapon/storage/attack_self(mob/user as mob)
/obj/item/weapon/storage/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/storage/backpack
/obj/item/weapon/storage/backpack/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/storage/backpack/captain
/obj/item/weapon/storage/backpack/clown
/obj/item/weapon/storage/backpack/cultpack
/obj/item/weapon/storage/backpack/holding
/obj/item/weapon/storage/backpack/holding/New()
/obj/item/weapon/storage/backpack/holding/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/storage/backpack/holding/failcheck(mob/user as mob)
/obj/item/weapon/storage/backpack/industrial
/obj/item/weapon/storage/backpack/medic
/obj/item/weapon/storage/backpack/santabag
/obj/item/weapon/storage/backpack/satchel
/obj/item/weapon/storage/backpack/satchel/withwallet
/obj/item/weapon/storage/backpack/satchel/withwallet/New()
/obj/item/weapon/storage/backpack/satchel_cap
/obj/item/weapon/storage/backpack/satchel_chem
/obj/item/weapon/storage/backpack/satchel_eng
/obj/item/weapon/storage/backpack/satchel_gen
/obj/item/weapon/storage/backpack/satchel_hyd
/obj/item/weapon/storage/backpack/satchel_med
/obj/item/weapon/storage/backpack/satchel_norm
/obj/item/weapon/storage/backpack/satchel_sec
/obj/item/weapon/storage/backpack/satchel_tox
/obj/item/weapon/storage/backpack/satchel_vir
/obj/item/weapon/storage/backpack/satcheldeluxe
/obj/item/weapon/storage/backpack/security
/obj/item/weapon/storage/bag
/obj/item/weapon/storage/bag/cash
/obj/item/weapon/storage/bag/fossils
/obj/item/weapon/storage/bag/ore
/obj/item/weapon/storage/bag/plants
/obj/item/weapon/storage/bag/plants/portaseeder
/obj/item/weapon/storage/bag/plants/portaseeder/verb/dissolve_contents()
/obj/item/weapon/storage/bag/plasticbag
/obj/item/weapon/storage/bag/sheetsnatcher
/obj/item/weapon/storage/bag/sheetsnatcher/New()
/obj/item/weapon/storage/bag/sheetsnatcher/borg
/obj/item/weapon/storage/bag/sheetsnatcher/can_be_inserted(obj/item/W as obj, stop_messages = 0)
/obj/item/weapon/storage/bag/sheetsnatcher/handle_item_insertion(obj/item/W as obj, prevent_warning = 0)
/obj/item/weapon/storage/bag/sheetsnatcher/orient2hud(mob/user as mob)
/obj/item/weapon/storage/bag/sheetsnatcher/quick_empty()
/obj/item/weapon/storage/bag/sheetsnatcher/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/bag/trash
/obj/item/weapon/storage/bag/trash/update_icon()
/obj/item/weapon/storage/belt
/obj/item/weapon/storage/belt/MouseDrop(obj/over_object as obj, src_location, over_location)
/obj/item/weapon/storage/belt/archaeology
/obj/item/weapon/storage/belt/bluespace
/obj/item/weapon/storage/belt/bluespace/New()
/obj/item/weapon/storage/belt/bluespace/admin
/obj/item/weapon/storage/belt/bluespace/admin/New()
/obj/item/weapon/storage/belt/bluespace/attack(mob/M as mob, mob/user as mob, def_zone)
/obj/item/weapon/storage/belt/bluespace/failcheck(mob/user as mob)
/obj/item/weapon/storage/belt/bluespace/owlman
/obj/item/weapon/storage/belt/bluespace/owlman/New()
/obj/item/weapon/storage/belt/bluespace/owlman/afterattack(atom/target as obj|turf, mob/user as mob, flag)
/obj/item/weapon/storage/belt/bluespace/sandbox
/obj/item/weapon/storage/belt/bluespace/sandbox/New()
/obj/item/weapon/storage/belt/can_use()
/obj/item/weapon/storage/belt/champion
/obj/item/weapon/storage/belt/medical
/obj/item/weapon/storage/belt/security
/obj/item/weapon/storage/belt/soulstone
/obj/item/weapon/storage/belt/soulstone/full/New()
/obj/item/weapon/storage/belt/utility
/obj/item/weapon/storage/belt/utility/atmostech/New()
/obj/item/weapon/storage/belt/utility/full/New()
/obj/item/weapon/storage/bible
/obj/item/weapon/storage/bible/afterattack(atom/A, mob/user as mob, proximity)
/obj/item/weapon/storage/bible/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/weapon/storage/bible/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/storage/bible/bless(mob/living/carbon/M as mob)
/obj/item/weapon/storage/bible/booze
/obj/item/weapon/storage/bible/booze/New()
/obj/item/weapon/storage/box
/obj/item/weapon/storage/box/PDAs
/obj/item/weapon/storage/box/PDAs/New()
/obj/item/weapon/storage/box/autoinjectors
/obj/item/weapon/storage/box/autoinjectors/New()
/obj/item/weapon/storage/box/beakers
/obj/item/weapon/storage/box/beakers/New()
/obj/item/weapon/storage/box/blanks
/obj/item/weapon/storage/box/blanks/New()
/obj/item/weapon/storage/box/bodybags
/obj/item/weapon/storage/box/bodybags/New()
/obj/item/weapon/storage/box/cdeathalarm_kit
/obj/item/weapon/storage/box/cdeathalarm_kit/New()
/obj/item/weapon/storage/box/chemimp
/obj/item/weapon/storage/box/chemimp/New()
/obj/item/weapon/storage/box/condimentbottles
/obj/item/weapon/storage/box/condimentbottles/New()
/obj/item/weapon/storage/box/cups
/obj/item/weapon/storage/box/cups/New()
/obj/item/weapon/storage/box/deathimp
/obj/item/weapon/storage/box/deathimp/New()
/obj/item/weapon/storage/box/disks
/obj/item/weapon/storage/box/disks/New()
/obj/item/weapon/storage/box/donkpockets
/obj/item/weapon/storage/box/donkpockets/New()
/obj/item/weapon/storage/box/drinkingglasses
/obj/item/weapon/storage/box/drinkingglasses/New()
/obj/item/weapon/storage/box/emps
/obj/item/weapon/storage/box/emps/New()
/obj/item/weapon/storage/box/engineer/
/obj/item/weapon/storage/box/engineer//New()
/obj/item/weapon/storage/box/evidence
/obj/item/weapon/storage/box/evidence/New()
/obj/item/weapon/storage/box/excavation
/obj/item/weapon/storage/box/excavation/New()
/obj/item/weapon/storage/box/farwacubes
/obj/item/weapon/storage/box/farwacubes/New()
/obj/item/weapon/storage/box/flashbangs
/obj/item/weapon/storage/box/flashbangs/New()
/obj/item/weapon/storage/box/gloves
/obj/item/weapon/storage/box/gloves/New()
/obj/item/weapon/storage/box/grenades
/obj/item/weapon/storage/box/grenades/New()
/obj/item/weapon/storage/box/handcuffs
/obj/item/weapon/storage/box/handcuffs/New()
/obj/item/weapon/storage/box/holobadge
/obj/item/weapon/storage/box/holobadge/New()
/obj/item/weapon/storage/box/ids
/obj/item/weapon/storage/box/ids/New()
/obj/item/weapon/storage/box/injectors
/obj/item/weapon/storage/box/injectors/New()
/obj/item/weapon/storage/box/large
/obj/item/weapon/storage/box/lights
/obj/item/weapon/storage/box/lights/bulbs/New()
/obj/item/weapon/storage/box/lights/mixed
/obj/item/weapon/storage/box/lights/mixed/New()
/obj/item/weapon/storage/box/lights/tubes
/obj/item/weapon/storage/box/lights/tubes/New()
/obj/item/weapon/storage/box/masks
/obj/item/weapon/storage/box/masks/New()
/obj/item/weapon/storage/box/matches
/obj/item/weapon/storage/box/matches/New()
/obj/item/weapon/storage/box/matches/attackby(obj/item/weapon/match/W as obj, mob/user as mob)
/obj/item/weapon/storage/box/mechabeacons
/obj/item/weapon/storage/box/mechabeacons/New()
/obj/item/weapon/storage/box/monkeycubes
/obj/item/weapon/storage/box/monkeycubes/New()
/obj/item/weapon/storage/box/mousetraps
/obj/item/weapon/storage/box/mousetraps/New()
/obj/item/weapon/storage/box/neaeracubes
/obj/item/weapon/storage/box/neaeracubes/New()
/obj/item/weapon/storage/box/pillbottles
/obj/item/weapon/storage/box/pillbottles/New()
/obj/item/weapon/storage/box/prisoner
/obj/item/weapon/storage/box/prisoner/New()
/obj/item/weapon/storage/box/rxglasses
/obj/item/weapon/storage/box/rxglasses/New()
/obj/item/weapon/storage/box/samplebags
/obj/item/weapon/storage/box/samplebags/New()
/obj/item/weapon/storage/box/seccarts
/obj/item/weapon/storage/box/seccarts/New()
/obj/item/weapon/storage/box/snappops
/obj/item/weapon/storage/box/snappops/New()
/obj/item/weapon/storage/box/solution_trays
/obj/item/weapon/storage/box/solution_trays/New()
/obj/item/weapon/storage/box/stokcubes
/obj/item/weapon/storage/box/stokcubes/New()
/obj/item/weapon/storage/box/surveillance/
/obj/item/weapon/storage/box/surveillance//New()
/obj/item/weapon/storage/box/survival/
/obj/item/weapon/storage/box/survival//New()
/obj/item/weapon/storage/box/syndicate/
/obj/item/weapon/storage/box/syndicate//New()
/obj/item/weapon/storage/box/syndie_kit
/obj/item/weapon/storage/box/syndie_kit/boolets
/obj/item/weapon/storage/box/syndie_kit/boolets/New()
/obj/item/weapon/storage/box/syndie_kit/conversion
/obj/item/weapon/storage/box/syndie_kit/conversion/New()
/obj/item/weapon/storage/box/syndie_kit/greytide
/obj/item/weapon/storage/box/syndie_kit/greytide/New()
/obj/item/weapon/storage/box/syndie_kit/imp_compress
/obj/item/weapon/storage/box/syndie_kit/imp_compress/New()
/obj/item/weapon/storage/box/syndie_kit/imp_explosive
/obj/item/weapon/storage/box/syndie_kit/imp_explosive/New()
/obj/item/weapon/storage/box/syndie_kit/imp_freedom
/obj/item/weapon/storage/box/syndie_kit/imp_freedom/New()
/obj/item/weapon/storage/box/syndie_kit/imp_uplink
/obj/item/weapon/storage/box/syndie_kit/imp_uplink/New()
/obj/item/weapon/storage/box/syndie_kit/remoteemp
/obj/item/weapon/storage/box/syndie_kit/remoteemp/New()
/obj/item/weapon/storage/box/syndie_kit/remotegrenade
/obj/item/weapon/storage/box/syndie_kit/remotegrenade/New()
/obj/item/weapon/storage/box/syndie_kit/remotelube
/obj/item/weapon/storage/box/syndie_kit/remotelube/New()
/obj/item/weapon/storage/box/syndie_kit/space
/obj/item/weapon/storage/box/syndie_kit/space/New()
/obj/item/weapon/storage/box/syndie_kit/surveillance
/obj/item/weapon/storage/box/syndie_kit/surveillance/New()
/obj/item/weapon/storage/box/syringes
/obj/item/weapon/storage/box/syringes/New()
/obj/item/weapon/storage/box/testing_disks
/obj/item/weapon/storage/box/testing_disks/New()
/obj/item/weapon/storage/box/trackimp
/obj/item/weapon/storage/box/trackimp/New()
/obj/item/weapon/storage/briefcase
/obj/item/weapon/storage/briefcase/New()
/obj/item/weapon/storage/briefcase/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/weapon/storage/briefcase/inflatable
/obj/item/weapon/storage/briefcase/inflatable/New()
/obj/item/weapon/storage/can_be_inserted(obj/item/W as obj, stop_messages = 0)
/obj/item/weapon/storage/close(mob/user as mob)
/obj/item/weapon/storage/dropped(mob/user as mob)
/obj/item/weapon/storage/emp_act(severity)
/obj/item/weapon/storage/fancy/
/obj/item/weapon/storage/fancy/candle_box
/obj/item/weapon/storage/fancy/candle_box/New()
/obj/item/weapon/storage/fancy/cigarettes
/obj/item/weapon/storage/fancy/cigarettes/Destroy()
/obj/item/weapon/storage/fancy/cigarettes/New()
/obj/item/weapon/storage/fancy/cigarettes/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/storage/fancy/cigarettes/dromedaryco
/obj/item/weapon/storage/fancy/cigarettes/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/fancy/cigarettes/update_icon()
/obj/item/weapon/storage/fancy/crayons
/obj/item/weapon/storage/fancy/crayons/New()
/obj/item/weapon/storage/fancy/crayons/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/storage/fancy/crayons/update_icon()
/obj/item/weapon/storage/fancy/donut_box
/obj/item/weapon/storage/fancy/donut_box/New()
/obj/item/weapon/storage/fancy/egg_box
/obj/item/weapon/storage/fancy/egg_box/New()
/obj/item/weapon/storage/fancy/examine()
/obj/item/weapon/storage/fancy/update_icon(var/itemremoved = 0)
/obj/item/weapon/storage/fancy/vials
/obj/item/weapon/storage/fancy/vials/New()
/obj/item/weapon/storage/firstaid
/obj/item/weapon/storage/firstaid/adv
/obj/item/weapon/storage/firstaid/adv/New()
/obj/item/weapon/storage/firstaid/attackby(var/obj/item/robot_parts/S, mob/user as mob)
/obj/item/weapon/storage/firstaid/fire
/obj/item/weapon/storage/firstaid/fire/New()
/obj/item/weapon/storage/firstaid/fluff/asus_rose
/obj/item/weapon/storage/firstaid/o2
/obj/item/weapon/storage/firstaid/o2/New()
/obj/item/weapon/storage/firstaid/regular
/obj/item/weapon/storage/firstaid/regular/New()
/obj/item/weapon/storage/firstaid/toxin
/obj/item/weapon/storage/firstaid/toxin/New()
/obj/item/weapon/storage/fluff/maye_daye_1
/obj/item/weapon/storage/handle_item_insertion(obj/item/W as obj, prevent_warning = 0)
/obj/item/weapon/storage/hide_from(mob/user as mob)
/obj/item/weapon/storage/lockbox
/obj/item/weapon/storage/lockbox/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/storage/lockbox/clusterbang
/obj/item/weapon/storage/lockbox/clusterbang/New()
/obj/item/weapon/storage/lockbox/loyalty
/obj/item/weapon/storage/lockbox/loyalty/New()
/obj/item/weapon/storage/lockbox/medal
/obj/item/weapon/storage/lockbox/medal/New()
/obj/item/weapon/storage/lockbox/show_to(mob/user as mob)
/obj/item/weapon/storage/lockbox/vials
/obj/item/weapon/storage/lockbox/vials/New()
/obj/item/weapon/storage/lockbox/vials/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/storage/lockbox/vials/update_icon(var/itemremoved = 0)
/obj/item/weapon/storage/orient2hud(mob/user as mob)
/obj/item/weapon/storage/orient_objs(tx, ty, mx, my)
/obj/item/weapon/storage/photo_album
/obj/item/weapon/storage/photo_album/MouseDrop(obj/over_object as obj)
/obj/item/weapon/storage/pill_bottle
/obj/item/weapon/storage/pill_bottle/MouseDrop(obj/over_object as obj)
/obj/item/weapon/storage/pill_bottle/antitox
/obj/item/weapon/storage/pill_bottle/antitox/New()
/obj/item/weapon/storage/pill_bottle/dice
/obj/item/weapon/storage/pill_bottle/dice/New()
/obj/item/weapon/storage/pill_bottle/fluff/listermedbottle
/obj/item/weapon/storage/pill_bottle/fluff/listermedbottle/New()
/obj/item/weapon/storage/pill_bottle/happy
/obj/item/weapon/storage/pill_bottle/happy/New()
/obj/item/weapon/storage/pill_bottle/inaprovaline
/obj/item/weapon/storage/pill_bottle/inaprovaline/New()
/obj/item/weapon/storage/pill_bottle/kelotane
/obj/item/weapon/storage/pill_bottle/kelotane/New()
/obj/item/weapon/storage/pill_bottle/random_drug_bottle
/obj/item/weapon/storage/pill_bottle/random_drug_bottle/New()
/obj/item/weapon/storage/pill_bottle/random_meds
/obj/item/weapon/storage/pill_bottle/random_meds/New()
/obj/item/weapon/storage/pill_bottle/zoom
/obj/item/weapon/storage/pill_bottle/zoom/New()
/obj/item/weapon/storage/pneumatic
/obj/item/weapon/storage/pneumatic/Fire(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, params, reflex = 0)
/obj/item/weapon/storage/pneumatic/New()
/obj/item/weapon/storage/pneumatic/afterattack(atom/target as mob|obj|turf|area, mob/living/user as mob|obj, flag, params)
/obj/item/weapon/storage/pneumatic/attack(mob/living/M as mob, mob/living/user as mob, def_zone)
/obj/item/weapon/storage/pneumatic/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/storage/pneumatic/examine()
/obj/item/weapon/storage/pneumatic/verb/eject_tank()
/obj/item/weapon/storage/pneumatic/verb/set_pressure()
/obj/item/weapon/storage/pockets
/obj/item/weapon/storage/pockets/close(mob/user as mob)
/obj/item/weapon/storage/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/return_inv()
/obj/item/weapon/storage/secure
/obj/item/weapon/storage/secure/MouseDrop(over_object, src_location, over_location)
/obj/item/weapon/storage/secure/Topic(href, href_list)
/obj/item/weapon/storage/secure/attack_self(mob/user as mob)
/obj/item/weapon/storage/secure/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/storage/secure/briefcase
/obj/item/weapon/storage/secure/briefcase/New()
/obj/item/weapon/storage/secure/briefcase/attack_hand(mob/user as mob)
/obj/item/weapon/storage/secure/examine()
/obj/item/weapon/storage/secure/safe
/obj/item/weapon/storage/secure/safe/HoS/New()
/obj/item/weapon/storage/secure/safe/New()
/obj/item/weapon/storage/secure/safe/attack_hand(mob/user as mob)
/obj/item/weapon/storage/secure/safe/clown
/obj/item/weapon/storage/secure/safe/clown/New()
/obj/item/weapon/storage/show_to(mob/user as mob)
/obj/item/weapon/storage/standard_orient_objs(var/rows, var/cols, var/list/obj/item/display_contents)
/obj/item/weapon/storage/toolbox
/obj/item/weapon/storage/toolbox/New()
/obj/item/weapon/storage/toolbox/electrical
/obj/item/weapon/storage/toolbox/electrical/New()
/obj/item/weapon/storage/toolbox/emergency
/obj/item/weapon/storage/toolbox/emergency/New()
/obj/item/weapon/storage/toolbox/mechanical
/obj/item/weapon/storage/toolbox/mechanical/New()
/obj/item/weapon/storage/toolbox/mechanical/attackby(var/obj/item/stack/tile/plasteel/T, mob/user as mob)
/obj/item/weapon/storage/toolbox/syndicate
/obj/item/weapon/storage/toolbox/syndicate/New()
/obj/item/weapon/storage/verb/quick_empty()
/obj/item/weapon/storage/verb/toggle_gathering_mode()
/obj/item/weapon/storage/wallet
/obj/item/weapon/storage/wallet/GetAccess()
/obj/item/weapon/storage/wallet/GetID()
/obj/item/weapon/storage/wallet/handle_item_insertion(obj/item/W as obj, prevent_warning = 0)
/obj/item/weapon/storage/wallet/random/New()
/obj/item/weapon/storage/wallet/remove_from_storage(obj/item/W as obj, atom/new_location)
/obj/item/weapon/storage/wallet/update_icon()
/obj/item/weapon/surgicaldrill
/obj/item/weapon/surgicaldrill/suicide_act(mob/user)
/obj/item/weapon/syntiflesh
/obj/item/weapon/table_parts
/obj/item/weapon/table_parts/attack_self(mob/user as mob)
/obj/item/weapon/table_parts/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/table_parts/reinforced
/obj/item/weapon/table_parts/reinforced/attack_self(mob/user as mob)
/obj/item/weapon/table_parts/reinforced/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/table_parts/wood
/obj/item/weapon/table_parts/wood/attack_self(mob/user as mob)
/obj/item/weapon/table_parts/wood/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/tank
/obj/item/weapon/tank/Destroy()
/obj/item/weapon/tank/New()
/obj/item/weapon/tank/Topic(href, href_list)
/obj/item/weapon/tank/air
/obj/item/weapon/tank/air/New()
/obj/item/weapon/tank/air/examine()
/obj/item/weapon/tank/anesthetic
/obj/item/weapon/tank/anesthetic/New()
/obj/item/weapon/tank/assume_air(datum/gas_mixture/giver)
/obj/item/weapon/tank/attack_self(mob/user as mob)
/obj/item/weapon/tank/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/tank/blob_act()
/obj/item/weapon/tank/bomb_assemble(W,user)
/obj/item/weapon/tank/check_status()
/obj/item/weapon/tank/emergency_oxygen
/obj/item/weapon/tank/emergency_oxygen/New()
/obj/item/weapon/tank/emergency_oxygen/double
/obj/item/weapon/tank/emergency_oxygen/engi
/obj/item/weapon/tank/emergency_oxygen/examine()
/obj/item/weapon/tank/examine()
/obj/item/weapon/tank/ignite()
/obj/item/weapon/tank/jetpack
/obj/item/weapon/tank/jetpack/New()
/obj/item/weapon/tank/jetpack/allow_thrust(num, mob/living/user as mob)
/obj/item/weapon/tank/jetpack/carbondioxide
/obj/item/weapon/tank/jetpack/carbondioxide/New()
/obj/item/weapon/tank/jetpack/carbondioxide/examine()
/obj/item/weapon/tank/jetpack/examine()
/obj/item/weapon/tank/jetpack/oxygen
/obj/item/weapon/tank/jetpack/oxygen/New()
/obj/item/weapon/tank/jetpack/oxygenblack
/obj/item/weapon/tank/jetpack/oxygenblack/New()
/obj/item/weapon/tank/jetpack/ui_action_click()
/obj/item/weapon/tank/jetpack/verb/toggle()
/obj/item/weapon/tank/jetpack/verb/toggle_rockets()
/obj/item/weapon/tank/jetpack/void
/obj/item/weapon/tank/jetpack/void/New()
/obj/item/weapon/tank/nitrogen
/obj/item/weapon/tank/nitrogen/New()
/obj/item/weapon/tank/nitrogen/examine()
/obj/item/weapon/tank/oxygen
/obj/item/weapon/tank/oxygen/New()
/obj/item/weapon/tank/oxygen/examine()
/obj/item/weapon/tank/oxygen/red
/obj/item/weapon/tank/oxygen/yellow
/obj/item/weapon/tank/plasma
/obj/item/weapon/tank/plasma/New()
/obj/item/weapon/tank/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/tank/process()
/obj/item/weapon/tank/release()
/obj/item/weapon/tank/remove_air(amount)
/obj/item/weapon/tank/remove_air_volume(volume_to_return)
/obj/item/weapon/tank/return_air()
/obj/item/weapon/tank/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/item/weapon/teleportation_scroll
/obj/item/weapon/teleportation_scroll/Topic(href, href_list)
/obj/item/weapon/teleportation_scroll/apprentice
/obj/item/weapon/teleportation_scroll/attack_self(mob/user as mob)
/obj/item/weapon/teleportation_scroll/teleportscroll(var/mob/user)
/obj/item/weapon/toddler
/obj/item/weapon/tome
/obj/item/weapon/tome/Topic(href,href_list[])
/obj/item/weapon/tome/attack(mob/living/M as mob, mob/living/user as mob)
/obj/item/weapon/tome/attack_self(mob/living/user as mob)
/obj/item/weapon/tome/attackby(obj/item/weapon/tome/T as obj, mob/living/user as mob)
/obj/item/weapon/tome/examine()
/obj/item/weapon/tome/imbued
/obj/item/weapon/tome/imbued/attack_self(mob/user as mob)
/obj/item/weapon/toolbox_tiles
/obj/item/weapon/toolbox_tiles/attackby(var/obj/item/W, mob/user as mob)
/obj/item/weapon/toolbox_tiles_sensor
/obj/item/weapon/toolbox_tiles_sensor/attackby(var/obj/item/W, mob/user as mob)
/obj/item/weapon/toy/xmas_cracker
/obj/item/weapon/toy/xmas_cracker/New()
/obj/item/weapon/toy/xmas_cracker/attack(mob/target, mob/user)
/obj/item/weapon/tracker_electronics
/obj/item/weapon/tray
/obj/item/weapon/tray/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/tray/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/tray/calc_carry()
/obj/item/weapon/tray/dropped(mob/user)
/obj/item/weapon/tray/pickup(mob/user)
/obj/item/weapon/tray/robotray
/obj/item/weapon/tray/robotray/afterattack(atom/target, mob/user as mob)
/obj/item/weapon/twohanded
/obj/item/weapon/twohanded/
/obj/item/weapon/twohanded/attack_self(mob/user as mob)
/obj/item/weapon/twohanded/dropped(mob/user as mob)
/obj/item/weapon/twohanded/dualsaber
/obj/item/weapon/twohanded/dualsaber/IsShield()
/obj/item/weapon/twohanded/dualsaber/attack(target as mob, mob/living/user as mob)
/obj/item/weapon/twohanded/dualsaber/green
/obj/item/weapon/twohanded/dualsaber/green/New()
/obj/item/weapon/twohanded/dualsaber/red
/obj/item/weapon/twohanded/dualsaber/red/New()
/obj/item/weapon/twohanded/dualsaber/update_icon()
/obj/item/weapon/twohanded/fireaxe
/obj/item/weapon/twohanded/fireaxe/afterattack(atom/A as mob|obj|turf|area, mob/user as mob, proximity)
/obj/item/weapon/twohanded/fireaxe/update_icon()
/obj/item/weapon/twohanded/mob_can_equip(M as mob, slot)
/obj/item/weapon/twohanded/offhand
/obj/item/weapon/twohanded/offhand/IsShield()
/obj/item/weapon/twohanded/offhand/unwield()
/obj/item/weapon/twohanded/offhand/wield()
/obj/item/weapon/twohanded/pickup(mob/user)
/obj/item/weapon/twohanded/required/
/obj/item/weapon/twohanded/required/attack_hand(mob/user)
/obj/item/weapon/twohanded/required/attack_self()
/obj/item/weapon/twohanded/required/gibtonite
/obj/item/weapon/twohanded/required/gibtonite/GibtoniteReaction(mob/user, triggered_by_explosive = 0)
/obj/item/weapon/twohanded/required/gibtonite/attackby(obj/item/I, mob/user)
/obj/item/weapon/twohanded/required/gibtonite/bullet_act(var/obj/item/projectile/P)
/obj/item/weapon/twohanded/required/gibtonite/ex_act()
/obj/item/weapon/twohanded/required/mob_can_equip(M as mob, slot)
/obj/item/weapon/twohanded/spear
/obj/item/weapon/twohanded/spear/attack(mob/living/carbon/M as mob, mob/living/carbon/user as mob)
/obj/item/weapon/twohanded/spear/update_icon()
/obj/item/weapon/twohanded/unwield()
/obj/item/weapon/twohanded/update_icon()
/obj/item/weapon/twohanded/wield()
/obj/item/weapon/veilrender
/obj/item/weapon/veilrender/attack_self(mob/user as mob)
/obj/item/weapon/veilrender/vealrender
/obj/item/weapon/veilrender/vealrender/attack_self(mob/user as mob)
/obj/item/weapon/vending_refill
/obj/item/weapon/vending_refill/New()
/obj/item/weapon/vending_refill/autodrobe
/obj/item/weapon/vending_refill/boozeomat
/obj/item/weapon/vending_refill/cigarette
/obj/item/weapon/vending_refill/coffee
/obj/item/weapon/vending_refill/cola
/obj/item/weapon/vending_refill/examine()
/obj/item/weapon/vending_refill/snack
/obj/item/weapon/virusdish
/obj/item/weapon/virusdish/attackby(var/obj/item/weapon/W as obj,var/mob/living/carbon/user as mob)
/obj/item/weapon/virusdish/examine()
/obj/item/weapon/virusdish/random
/obj/item/weapon/virusdish/random/New()
/obj/item/weapon/watertank
/obj/item/weapon/watertank/Destroy()
/obj/item/weapon/watertank/New()
/obj/item/weapon/watertank/atmos
/obj/item/weapon/watertank/atmos/make_noz()
/obj/item/weapon/watertank/equipped(mob/user, slot)
/obj/item/weapon/watertank/examine()
/obj/item/weapon/watertank/janitor
/obj/item/weapon/watertank/janitor/New()
/obj/item/weapon/watertank/janitor/make_noz()
/obj/item/weapon/watertank/make_noz()
/obj/item/weapon/watertank/remove_noz(mob/user)
/obj/item/weapon/watertank/ui_action_click()
/obj/item/weapon/watertank/verb/toggle_mister()
/obj/item/weapon/weedspray
/obj/item/weapon/weedspray/suicide_act(mob/user)
/obj/item/weapon/weldingtool
/obj/item/weapon/weldingtool/New()
/obj/item/weapon/weldingtool/afterattack(obj/O as obj, mob/user as mob, proximity)
/obj/item/weapon/weldingtool/attack(mob/M as mob, mob/user as mob)
/obj/item/weapon/weldingtool/attack_self(mob/user as mob)
/obj/item/weapon/weldingtool/attackby(obj/item/W as obj, mob/user as mob)
/obj/item/weapon/weldingtool/check_fuel()
/obj/item/weapon/weldingtool/examine()
/obj/item/weapon/weldingtool/experimental
/obj/item/weapon/weldingtool/experimental/fuel_gen()
/obj/item/weapon/weldingtool/eyecheck(mob/user as mob)
/obj/item/weapon/weldingtool/get_fuel()
/obj/item/weapon/weldingtool/hugetank
/obj/item/weapon/weldingtool/isOn()
/obj/item/weapon/weldingtool/largetank
/obj/item/weapon/weldingtool/process()
/obj/item/weapon/weldingtool/remove_fuel(var/amount = 1, var/mob/M = null)
/obj/item/weapon/weldingtool/setWelding(var/temp_welding)
/obj/item/weapon/weldingtool/toggle(var/message = 0)
/obj/item/weapon/wire
/obj/item/weapon/wire/attack_self(mob/user as mob)
/obj/item/weapon/wire/suicide_act(mob/user)
/obj/item/weapon/wire/update()
/obj/item/weapon/wirecutters
/obj/item/weapon/wirecutters/New()
/obj/item/weapon/wirecutters/attack(mob/living/carbon/C as mob, mob/user as mob)
/obj/item/weapon/wirerod
/obj/item/weapon/wirerod/attackby(var/obj/item/I, mob/user as mob)
/obj/item/weapon/wrapping_paper
/obj/item/weapon/wrapping_paper/attack(mob/target as mob, mob/user as mob)
/obj/item/weapon/wrapping_paper/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/item/weapon/wrapping_paper/examine()
/obj/item/weapon/wrench
/obj/item/weed_extract
/obj/item/weedkiller
/obj/item/weedkiller/D24
/obj/item/weedkiller/lindane
/obj/item/weedkiller/triclopyr
/obj/item/xenos_claw
/obj/liquid_pass()
/obj/machinery
/obj/machinery/CheckParts()
/obj/machinery/Destroy()
/obj/machinery/New()
/obj/machinery/RefreshParts()
/obj/machinery/Topic(href, href_list)
/obj/machinery/access_button
/obj/machinery/access_button/New()
/obj/machinery/access_button/attack_hand(mob/user)
/obj/machinery/access_button/initialize()
/obj/machinery/access_button/set_frequency(new_frequency)
/obj/machinery/access_button/update_icon()
/obj/machinery/account_database
/obj/machinery/account_database/New()
/obj/machinery/account_database/Topic(href, href_list)
/obj/machinery/account_database/accounting_letterhead(report_name)
/obj/machinery/account_database/attack_hand(mob/user as mob)
/obj/machinery/account_database/attackby(obj/O, mob/user)
/obj/machinery/account_database/attempt_account_access(var/attempt_account_number, var/attempt_pin_number, var/security_level_passed = 0,var/pin_needed=1)
/obj/machinery/account_database/charge_to_account(var/attempt_account_number, var/source_name, var/purpose, var/terminal_id, var/amount)
/obj/machinery/account_database/create_transation(target, reason, amount)
/obj/machinery/account_database/get_access_level()
/obj/machinery/account_database/get_account(var/account_number)
/obj/machinery/account_database/ui_interact(mob/user, ui_key="main", datum/nanoui/ui=null)
/obj/machinery/addAtProcessing()
/obj/machinery/ai_powersupply
/obj/machinery/ai_powersupply/New(var/mob/living/silicon/ai/ai=null)
/obj/machinery/ai_powersupply/process()
/obj/machinery/ai_slipper
/obj/machinery/ai_slipper/Topic(href, href_list)
/obj/machinery/ai_slipper/attack_ai(mob/user as mob)
/obj/machinery/ai_slipper/attack_hand(mob/user as mob)
/obj/machinery/ai_slipper/attackby(obj/item/weapon/W, mob/user)
/obj/machinery/ai_slipper/power_change()
/obj/machinery/ai_slipper/setState(var/enabled, var/uses)
/obj/machinery/ai_slipper/slip_process()
/obj/machinery/ai_status_display
/obj/machinery/ai_status_display/emp_act(severity)
/obj/machinery/ai_status_display/process()
/obj/machinery/ai_status_display/set_picture(var/state)
/obj/machinery/ai_status_display/update()
/obj/machinery/air_sensor
/obj/machinery/air_sensor/New()
/obj/machinery/air_sensor/initialize()
/obj/machinery/air_sensor/process()
/obj/machinery/air_sensor/set_frequency(new_frequency)
/obj/machinery/air_sensor/update_icon()
/obj/machinery/airlock_sensor
/obj/machinery/airlock_sensor/New()
/obj/machinery/airlock_sensor/attack_hand(mob/user)
/obj/machinery/airlock_sensor/initialize()
/obj/machinery/airlock_sensor/process()
/obj/machinery/airlock_sensor/set_frequency(new_frequency)
/obj/machinery/airlock_sensor/update_icon()
/obj/machinery/alarm
/obj/machinery/alarm/New(var/loc, var/dir, var/building = 0)
/obj/machinery/alarm/Topic(href, href_list)
/obj/machinery/alarm/air_doors_close(manual)
/obj/machinery/alarm/air_doors_open(manual)
/obj/machinery/alarm/apply_mode()
/obj/machinery/alarm/apply_preset(var/no_cycle_after=0)
/obj/machinery/alarm/attack_ai(mob/user)
/obj/machinery/alarm/attack_hand(mob/user)
/obj/machinery/alarm/attack_robot(mob/user)
/obj/machinery/alarm/attackby(obj/item/W as obj, mob/user as mob)
/obj/machinery/alarm/calculate_local_danger_level()
/obj/machinery/alarm/elect_master()
/obj/machinery/alarm/examine()
/obj/machinery/alarm/first_run()
/obj/machinery/alarm/get_danger_level(var/current_value, var/list/danger_levels)
/obj/machinery/alarm/get_nano_data(mob/user, fromAtmosConsole=0)
/obj/machinery/alarm/initialize()
/obj/machinery/alarm/interact(mob/user)
/obj/machinery/alarm/isolation
/obj/machinery/alarm/master_is_operating()
/obj/machinery/alarm/post_alert(alert_level)
/obj/machinery/alarm/power_change()
/obj/machinery/alarm/process()
/obj/machinery/alarm/receive_signal(datum/signal/signal)
/obj/machinery/alarm/refresh_all()
/obj/machinery/alarm/register_env_machine(var/m_id, var/device_type)
/obj/machinery/alarm/send_signal(var/target, var/list/command)
/obj/machinery/alarm/server
/obj/machinery/alarm/setDangerLevel(var/new_danger_level)
/obj/machinery/alarm/set_frequency(new_frequency)
/obj/machinery/alarm/shock(mob/user, prb)
/obj/machinery/alarm/ui_air_status()
/obj/machinery/alarm/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/alarm/update_icon()
/obj/machinery/alarm/vox
/obj/machinery/am_shielding
/obj/machinery/am_shielding/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/am_shielding/Destroy()
/obj/machinery/am_shielding/New(loc)
/obj/machinery/am_shielding/attackby(obj/item/W, mob/user)
/obj/machinery/am_shielding/blob_act()
/obj/machinery/am_shielding/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/am_shielding/check_stability(var/injecting_fuel = 0)
/obj/machinery/am_shielding/controllerscan(var/priorscan = 0)
/obj/machinery/am_shielding/core_check()
/obj/machinery/am_shielding/emp_act()
/obj/machinery/am_shielding/ex_act(severity)
/obj/machinery/am_shielding/link_control(var/obj/machinery/power/am_control_unit/AMC)
/obj/machinery/am_shielding/process()
/obj/machinery/am_shielding/recalc_efficiency(var/new_efficiency)
/obj/machinery/am_shielding/setup_core()
/obj/machinery/am_shielding/shutdown_core()
/obj/machinery/am_shielding/update_icon()
/obj/machinery/apiary
/obj/machinery/apiary/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/apiary/New()
/obj/machinery/apiary/angry_swarm(var/mob/M)
/obj/machinery/apiary/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/apiary/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/apiary/die()
/obj/machinery/apiary/process()
/obj/machinery/apiary/verb/harvest_honeycomb()
/obj/machinery/artifact
/obj/machinery/artifact/Bumped(M as mob|obj)
/obj/machinery/artifact/Move()
/obj/machinery/artifact/New()
/obj/machinery/artifact/attack_hand(var/mob/user as mob)
/obj/machinery/artifact/attackby(obj/item/weapon/W as obj, mob/living/user as mob)
/obj/machinery/artifact/bullet_act(var/obj/item/projectile/P)
/obj/machinery/artifact/ex_act(severity)
/obj/machinery/artifact/process()
/obj/machinery/artifact_analyser
/obj/machinery/artifact_analyser/New()
/obj/machinery/artifact_analyser/Topic(href, href_list)
/obj/machinery/artifact_analyser/attack_hand(var/mob/user as mob)
/obj/machinery/artifact_analyser/get_scan_info(var/obj/scanned_obj)
/obj/machinery/artifact_analyser/interact(mob/user)
/obj/machinery/artifact_analyser/process()
/obj/machinery/artifact_analyser/reconnect_scanner()
/obj/machinery/artifact_harvester
/obj/machinery/artifact_harvester/New()
/obj/machinery/artifact_harvester/Topic(href, href_list)
/obj/machinery/artifact_harvester/attack_hand(var/mob/user as mob)
/obj/machinery/artifact_harvester/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/machinery/artifact_harvester/interact(var/mob/user as mob)
/obj/machinery/artifact_harvester/process()
/obj/machinery/artifact_scanpad
/obj/machinery/artillerycontrol
/obj/machinery/artillerycontrol/Topic(href, href_list)
/obj/machinery/artillerycontrol/attack_hand(mob/user as mob)
/obj/machinery/artillerycontrol/process()
/obj/machinery/assign_uid()
/obj/machinery/atm
/obj/machinery/atm/New()
/obj/machinery/atm/Topic(var/href, var/href_list)
/obj/machinery/atm/attack_hand(mob/user as mob)
/obj/machinery/atm/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/atm/initialize()
/obj/machinery/atm/process()
/obj/machinery/atm/reconnect_database()
/obj/machinery/atm/scan_user(mob/living/carbon/human/human_user as mob)
/obj/machinery/atm/withdraw_arbitrary_sum(var/arbitrary_sum)
/obj/machinery/atmospherics
/obj/machinery/atmospherics/binary
/obj/machinery/atmospherics/binary/Destroy()
/obj/machinery/atmospherics/binary/New()
/obj/machinery/atmospherics/binary/build_network()
/obj/machinery/atmospherics/binary/circulator
/obj/machinery/atmospherics/binary/circulator/New()
/obj/machinery/atmospherics/binary/circulator/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/atmospherics/binary/circulator/process()
/obj/machinery/atmospherics/binary/circulator/return_transfer_air()
/obj/machinery/atmospherics/binary/circulator/update_icon()
/obj/machinery/atmospherics/binary/circulator/verb/rotate_anticlockwise()
/obj/machinery/atmospherics/binary/circulator/verb/rotate_clockwise()
/obj/machinery/atmospherics/binary/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/binary/dp_vent_pump
/obj/machinery/atmospherics/binary/dp_vent_pump/broadcast_status()
/obj/machinery/atmospherics/binary/dp_vent_pump/hide(var/i)
/obj/machinery/atmospherics/binary/dp_vent_pump/high_volume
/obj/machinery/atmospherics/binary/dp_vent_pump/high_volume/New()
/obj/machinery/atmospherics/binary/dp_vent_pump/initialize()
/obj/machinery/atmospherics/binary/dp_vent_pump/proc/broadcast_status()
/obj/machinery/atmospherics/binary/dp_vent_pump/process()
/obj/machinery/atmospherics/binary/dp_vent_pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/dp_vent_pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/dp_vent_pump/update_icon()
/obj/machinery/atmospherics/binary/initialize()
/obj/machinery/atmospherics/binary/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/binary/passive_gate
/obj/machinery/atmospherics/binary/passive_gate/Topic(href,href_list)
/obj/machinery/atmospherics/binary/passive_gate/attack_hand(user as mob)
/obj/machinery/atmospherics/binary/passive_gate/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/binary/passive_gate/broadcast_status()
/obj/machinery/atmospherics/binary/passive_gate/initialize()
/obj/machinery/atmospherics/binary/passive_gate/interact(mob/user as mob)
/obj/machinery/atmospherics/binary/passive_gate/power_change()
/obj/machinery/atmospherics/binary/passive_gate/process()
/obj/machinery/atmospherics/binary/passive_gate/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/passive_gate/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/passive_gate/update_icon()
/obj/machinery/atmospherics/binary/pump
/obj/machinery/atmospherics/binary/pump/Topic(href,href_list)
/obj/machinery/atmospherics/binary/pump/attack_hand(user as mob)
/obj/machinery/atmospherics/binary/pump/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/binary/pump/broadcast_status()
/obj/machinery/atmospherics/binary/pump/highcap
/obj/machinery/atmospherics/binary/pump/initialize()
/obj/machinery/atmospherics/binary/pump/interact(mob/user as mob)
/obj/machinery/atmospherics/binary/pump/on
/obj/machinery/atmospherics/binary/pump/power_change()
/obj/machinery/atmospherics/binary/pump/process()
/obj/machinery/atmospherics/binary/pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/pump/update_icon()
/obj/machinery/atmospherics/binary/reassign_network(datum/pipe_network/old_network, datum/pipe_network/new_network)
/obj/machinery/atmospherics/binary/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/binary/return_network_air(datum/pipe_network/reference)
/obj/machinery/atmospherics/binary/volume_pump
/obj/machinery/atmospherics/binary/volume_pump/Topic(href,href_list)
/obj/machinery/atmospherics/binary/volume_pump/attack_hand(user as mob)
/obj/machinery/atmospherics/binary/volume_pump/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/binary/volume_pump/broadcast_status()
/obj/machinery/atmospherics/binary/volume_pump/initialize()
/obj/machinery/atmospherics/binary/volume_pump/interact(mob/user as mob)
/obj/machinery/atmospherics/binary/volume_pump/on
/obj/machinery/atmospherics/binary/volume_pump/power_change()
/obj/machinery/atmospherics/binary/volume_pump/process()
/obj/machinery/atmospherics/binary/volume_pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/binary/volume_pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/binary/volume_pump/update_icon()
/obj/machinery/atmospherics/build_network()
/obj/machinery/atmospherics/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/pipe
/obj/machinery/atmospherics/pipe/Destroy()
/obj/machinery/atmospherics/pipe/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/pipe/build_network()
/obj/machinery/atmospherics/pipe/cap
/obj/machinery/atmospherics/pipe/cap/Destroy()
/obj/machinery/atmospherics/pipe/cap/New()
/obj/machinery/atmospherics/pipe/cap/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/cap/hidden
/obj/machinery/atmospherics/pipe/cap/hide(var/i)
/obj/machinery/atmospherics/pipe/cap/initialize()
/obj/machinery/atmospherics/pipe/cap/pipeline_expansion()
/obj/machinery/atmospherics/pipe/cap/process()
/obj/machinery/atmospherics/pipe/cap/update_icon()
/obj/machinery/atmospherics/pipe/cap/visible
/obj/machinery/atmospherics/pipe/check_pressure(pressure)
/obj/machinery/atmospherics/pipe/manifold
/obj/machinery/atmospherics/pipe/manifold/Destroy()
/obj/machinery/atmospherics/pipe/manifold/New()
/obj/machinery/atmospherics/pipe/manifold/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/manifold/filtering
/obj/machinery/atmospherics/pipe/manifold/filtering/hidden
/obj/machinery/atmospherics/pipe/manifold/filtering/visible
/obj/machinery/atmospherics/pipe/manifold/general
/obj/machinery/atmospherics/pipe/manifold/general/hidden
/obj/machinery/atmospherics/pipe/manifold/general/visible
/obj/machinery/atmospherics/pipe/manifold/hide(var/i)
/obj/machinery/atmospherics/pipe/manifold/initialize()
/obj/machinery/atmospherics/pipe/manifold/insulated
/obj/machinery/atmospherics/pipe/manifold/insulated/hidden
/obj/machinery/atmospherics/pipe/manifold/insulated/visible
/obj/machinery/atmospherics/pipe/manifold/pipeline_expansion()
/obj/machinery/atmospherics/pipe/manifold/process()
/obj/machinery/atmospherics/pipe/manifold/scrubbers
/obj/machinery/atmospherics/pipe/manifold/scrubbers/hidden
/obj/machinery/atmospherics/pipe/manifold/scrubbers/visible
/obj/machinery/atmospherics/pipe/manifold/supply
/obj/machinery/atmospherics/pipe/manifold/supply/hidden
/obj/machinery/atmospherics/pipe/manifold/supply/visible
/obj/machinery/atmospherics/pipe/manifold/supplymain
/obj/machinery/atmospherics/pipe/manifold/supplymain/hidden
/obj/machinery/atmospherics/pipe/manifold/supplymain/visible
/obj/machinery/atmospherics/pipe/manifold/update_icon()
/obj/machinery/atmospherics/pipe/manifold/yellow
/obj/machinery/atmospherics/pipe/manifold/yellow/hidden
/obj/machinery/atmospherics/pipe/manifold/yellow/visible
/obj/machinery/atmospherics/pipe/manifold4w
/obj/machinery/atmospherics/pipe/manifold4w/Destroy()
/obj/machinery/atmospherics/pipe/manifold4w/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/manifold4w/general
/obj/machinery/atmospherics/pipe/manifold4w/general/hidden
/obj/machinery/atmospherics/pipe/manifold4w/general/visible
/obj/machinery/atmospherics/pipe/manifold4w/hide(var/i)
/obj/machinery/atmospherics/pipe/manifold4w/initialize()
/obj/machinery/atmospherics/pipe/manifold4w/insulated
/obj/machinery/atmospherics/pipe/manifold4w/insulated/hidden
/obj/machinery/atmospherics/pipe/manifold4w/pipeline_expansion()
/obj/machinery/atmospherics/pipe/manifold4w/process()
/obj/machinery/atmospherics/pipe/manifold4w/scrubbers
/obj/machinery/atmospherics/pipe/manifold4w/scrubbers/hidden
/obj/machinery/atmospherics/pipe/manifold4w/scrubbers/visible
/obj/machinery/atmospherics/pipe/manifold4w/supply
/obj/machinery/atmospherics/pipe/manifold4w/supply/hidden
/obj/machinery/atmospherics/pipe/manifold4w/supply/visible
/obj/machinery/atmospherics/pipe/manifold4w/supplymain
/obj/machinery/atmospherics/pipe/manifold4w/supplymain/hidden
/obj/machinery/atmospherics/pipe/manifold4w/supplymain/visible
/obj/machinery/atmospherics/pipe/manifold4w/update_icon()
/obj/machinery/atmospherics/pipe/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/pipe/pipeline_expansion()
/obj/machinery/atmospherics/pipe/return_air()
/obj/machinery/atmospherics/pipe/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/simple
/obj/machinery/atmospherics/pipe/simple/Destroy()
/obj/machinery/atmospherics/pipe/simple/New()
/obj/machinery/atmospherics/pipe/simple/burst()
/obj/machinery/atmospherics/pipe/simple/check_pressure(pressure)
/obj/machinery/atmospherics/pipe/simple/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/simple/filtering
/obj/machinery/atmospherics/pipe/simple/filtering/hidden
/obj/machinery/atmospherics/pipe/simple/filtering/visible
/obj/machinery/atmospherics/pipe/simple/general
/obj/machinery/atmospherics/pipe/simple/general/hidden
/obj/machinery/atmospherics/pipe/simple/general/visible
/obj/machinery/atmospherics/pipe/simple/heat_exchanging
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/New()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/hidden
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/initialize()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction/New()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction/hidden
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction/initialize()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/junction/update_icon()
/obj/machinery/atmospherics/pipe/simple/heat_exchanging/process()
/obj/machinery/atmospherics/pipe/simple/hide(var/i)
/obj/machinery/atmospherics/pipe/simple/initialize()
/obj/machinery/atmospherics/pipe/simple/insulated
/obj/machinery/atmospherics/pipe/simple/insulated/hidden
/obj/machinery/atmospherics/pipe/simple/normalize_dir()
/obj/machinery/atmospherics/pipe/simple/pipeline_expansion()
/obj/machinery/atmospherics/pipe/simple/process()
/obj/machinery/atmospherics/pipe/simple/scrubbers
/obj/machinery/atmospherics/pipe/simple/scrubbers/hidden
/obj/machinery/atmospherics/pipe/simple/scrubbers/visible
/obj/machinery/atmospherics/pipe/simple/supply
/obj/machinery/atmospherics/pipe/simple/supply/hidden
/obj/machinery/atmospherics/pipe/simple/supply/visible
/obj/machinery/atmospherics/pipe/simple/supplymain
/obj/machinery/atmospherics/pipe/simple/supplymain/hidden
/obj/machinery/atmospherics/pipe/simple/supplymain/visible
/obj/machinery/atmospherics/pipe/simple/update_icon()
/obj/machinery/atmospherics/pipe/simple/yellow
/obj/machinery/atmospherics/pipe/simple/yellow/hidden
/obj/machinery/atmospherics/pipe/simple/yellow/visible
/obj/machinery/atmospherics/pipe/tank
/obj/machinery/atmospherics/pipe/tank/Destroy()
/obj/machinery/atmospherics/pipe/tank/New()
/obj/machinery/atmospherics/pipe/tank/air
/obj/machinery/atmospherics/pipe/tank/air/New()
/obj/machinery/atmospherics/pipe/tank/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/pipe/tank/carbon_dioxide
/obj/machinery/atmospherics/pipe/tank/carbon_dioxide/New()
/obj/machinery/atmospherics/pipe/tank/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/tank/initialize()
/obj/machinery/atmospherics/pipe/tank/nitrogen
/obj/machinery/atmospherics/pipe/tank/nitrogen/New()
/obj/machinery/atmospherics/pipe/tank/oxygen
/obj/machinery/atmospherics/pipe/tank/oxygen/New()
/obj/machinery/atmospherics/pipe/tank/oxygen_agent_b
/obj/machinery/atmospherics/pipe/tank/oxygen_agent_b/New()
/obj/machinery/atmospherics/pipe/tank/pipeline_expansion()
/obj/machinery/atmospherics/pipe/tank/process()
/obj/machinery/atmospherics/pipe/tank/toxins
/obj/machinery/atmospherics/pipe/tank/toxins/New()
/obj/machinery/atmospherics/pipe/tank/update_icon()
/obj/machinery/atmospherics/pipe/vent
/obj/machinery/atmospherics/pipe/vent/Destroy()
/obj/machinery/atmospherics/pipe/vent/New()
/obj/machinery/atmospherics/pipe/vent/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/pipe/vent/hide(var/i)
/obj/machinery/atmospherics/pipe/vent/high_volume
/obj/machinery/atmospherics/pipe/vent/initialize()
/obj/machinery/atmospherics/pipe/vent/pipeline_expansion()
/obj/machinery/atmospherics/pipe/vent/process()
/obj/machinery/atmospherics/pipe/vent/update_icon()
/obj/machinery/atmospherics/portables_connector
/obj/machinery/atmospherics/portables_connector/Destroy()
/obj/machinery/atmospherics/portables_connector/New()
/obj/machinery/atmospherics/portables_connector/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/portables_connector/build_network()
/obj/machinery/atmospherics/portables_connector/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/portables_connector/hide(var/i)
/obj/machinery/atmospherics/portables_connector/initialize()
/obj/machinery/atmospherics/portables_connector/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/portables_connector/process()
/obj/machinery/atmospherics/portables_connector/reassign_network(datum/pipe_network/old_network, datum/pipe_network/new_network)
/obj/machinery/atmospherics/portables_connector/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/portables_connector/return_network_air(datum/pipe_network/reference)
/obj/machinery/atmospherics/portables_connector/update_icon()
/obj/machinery/atmospherics/process()
/obj/machinery/atmospherics/reassign_network(datum/pipe_network/old_network, datum/pipe_network/new_network)
/obj/machinery/atmospherics/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/return_network_air(datum/network/reference)
/obj/machinery/atmospherics/trinary
/obj/machinery/atmospherics/trinary/Destroy()
/obj/machinery/atmospherics/trinary/New()
/obj/machinery/atmospherics/trinary/build_network()
/obj/machinery/atmospherics/trinary/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/trinary/filter
/obj/machinery/atmospherics/trinary/filter/New()
/obj/machinery/atmospherics/trinary/filter/Topic(href, href_list)
/obj/machinery/atmospherics/trinary/filter/attack_hand(user as mob)
/obj/machinery/atmospherics/trinary/filter/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/trinary/filter/initialize()
/obj/machinery/atmospherics/trinary/filter/power_change()
/obj/machinery/atmospherics/trinary/filter/process()
/obj/machinery/atmospherics/trinary/filter/set_frequency(new_frequency)
/obj/machinery/atmospherics/trinary/filter/update_icon()
/obj/machinery/atmospherics/trinary/initialize()
/obj/machinery/atmospherics/trinary/mixer
/obj/machinery/atmospherics/trinary/mixer/New()
/obj/machinery/atmospherics/trinary/mixer/Topic(href,href_list)
/obj/machinery/atmospherics/trinary/mixer/attack_hand(user as mob)
/obj/machinery/atmospherics/trinary/mixer/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/trinary/mixer/power_change()
/obj/machinery/atmospherics/trinary/mixer/process()
/obj/machinery/atmospherics/trinary/mixer/update_icon()
/obj/machinery/atmospherics/trinary/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/trinary/reassign_network(datum/pipe_network/old_network, datum/pipe_network/new_network)
/obj/machinery/atmospherics/trinary/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/trinary/return_network_air(datum/pipe_network/reference)
/obj/machinery/atmospherics/tvalve
/obj/machinery/atmospherics/tvalve/Destroy()
/obj/machinery/atmospherics/tvalve/New()
/obj/machinery/atmospherics/tvalve/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/tvalve/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/tvalve/attack_paw(mob/user as mob)
/obj/machinery/atmospherics/tvalve/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/tvalve/build_network()
/obj/machinery/atmospherics/tvalve/digital
/obj/machinery/atmospherics/tvalve/digital/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/tvalve/digital/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/tvalve/digital/initialize()
/obj/machinery/atmospherics/tvalve/digital/proc/set_frequency(new_frequency)
/obj/machinery/atmospherics/tvalve/digital/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/tvalve/digital/set_frequency(new_frequency)
/obj/machinery/atmospherics/tvalve/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/tvalve/go_straight()
/obj/machinery/atmospherics/tvalve/go_to_side()
/obj/machinery/atmospherics/tvalve/initialize()
/obj/machinery/atmospherics/tvalve/initialize_directions()
/obj/machinery/atmospherics/tvalve/mirrored
/obj/machinery/atmospherics/tvalve/mirrored/digital
/obj/machinery/atmospherics/tvalve/mirrored/digital/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/tvalve/mirrored/digital/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/tvalve/mirrored/digital/initialize()
/obj/machinery/atmospherics/tvalve/mirrored/digital/proc/set_frequency(new_frequency)
/obj/machinery/atmospherics/tvalve/mirrored/digital/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/tvalve/mirrored/digital/set_frequency(new_frequency)
/obj/machinery/atmospherics/tvalve/mirrored/initialize()
/obj/machinery/atmospherics/tvalve/mirrored/initialize_directions()
/obj/machinery/atmospherics/tvalve/mirrored/update_icon(animation)
/obj/machinery/atmospherics/tvalve/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/tvalve/process()
/obj/machinery/atmospherics/tvalve/reassign_network(datum/pipe_network/old_network, datum/pipe_network/new_network)
/obj/machinery/atmospherics/tvalve/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/tvalve/return_network_air(datum/network/reference)
/obj/machinery/atmospherics/tvalve/update_icon(animation)
/obj/machinery/atmospherics/unary
/obj/machinery/atmospherics/unary/Destroy()
/obj/machinery/atmospherics/unary/New()
/obj/machinery/atmospherics/unary/build_network()
/obj/machinery/atmospherics/unary/cold_sink
/obj/machinery/atmospherics/unary/cold_sink/freezer
/obj/machinery/atmospherics/unary/cold_sink/freezer/New()
/obj/machinery/atmospherics/unary/cold_sink/freezer/Topic(href, href_list)
/obj/machinery/atmospherics/unary/cold_sink/freezer/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/unary/cold_sink/freezer/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/unary/cold_sink/freezer/attack_paw(mob/user as mob)
/obj/machinery/atmospherics/unary/cold_sink/freezer/initialize()
/obj/machinery/atmospherics/unary/cold_sink/freezer/process()
/obj/machinery/atmospherics/unary/cold_sink/freezer/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/atmospherics/unary/cold_sink/freezer/update_icon()
/obj/machinery/atmospherics/unary/cold_sink/process()
/obj/machinery/atmospherics/unary/cold_sink/update_icon()
/obj/machinery/atmospherics/unary/cryo_cell
/obj/machinery/atmospherics/unary/cryo_cell/Destroy()
/obj/machinery/atmospherics/unary/cryo_cell/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/machinery/atmospherics/unary/cryo_cell/New()
/obj/machinery/atmospherics/unary/cryo_cell/Topic(href, href_list)
/obj/machinery/atmospherics/unary/cryo_cell/allow_drop()
/obj/machinery/atmospherics/unary/cryo_cell/attack_hand(mob/user)
/obj/machinery/atmospherics/unary/cryo_cell/attackby(var/obj/item/weapon/G as obj, var/mob/user as mob)
/obj/machinery/atmospherics/unary/cryo_cell/expel_gas()
/obj/machinery/atmospherics/unary/cryo_cell/go_out()
/obj/machinery/atmospherics/unary/cryo_cell/heat_gas_contents()
/obj/machinery/atmospherics/unary/cryo_cell/initialize()
/obj/machinery/atmospherics/unary/cryo_cell/process()
/obj/machinery/atmospherics/unary/cryo_cell/process_occupant()
/obj/machinery/atmospherics/unary/cryo_cell/put_mob(mob/living/carbon/M as mob)
/obj/machinery/atmospherics/unary/cryo_cell/relaymove(mob/user as mob)
/obj/machinery/atmospherics/unary/cryo_cell/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/atmospherics/unary/cryo_cell/update_icon()
/obj/machinery/atmospherics/unary/cryo_cell/verb/move_eject()
/obj/machinery/atmospherics/unary/cryo_cell/verb/move_inside()
/obj/machinery/atmospherics/unary/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/unary/generator_input
/obj/machinery/atmospherics/unary/generator_input/return_exchange_air()
/obj/machinery/atmospherics/unary/generator_input/update_icon()
/obj/machinery/atmospherics/unary/heat_exchanger
/obj/machinery/atmospherics/unary/heat_exchanger/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/unary/heat_exchanger/initialize()
/obj/machinery/atmospherics/unary/heat_exchanger/process()
/obj/machinery/atmospherics/unary/heat_exchanger/update_icon()
/obj/machinery/atmospherics/unary/heat_reservoir
/obj/machinery/atmospherics/unary/heat_reservoir/heater
/obj/machinery/atmospherics/unary/heat_reservoir/heater/New()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/Topic(href, href_list)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/attack_paw(mob/user as mob)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/initialize()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/process()
/obj/machinery/atmospherics/unary/heat_reservoir/heater/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/atmospherics/unary/heat_reservoir/heater/update_icon()
/obj/machinery/atmospherics/unary/heat_reservoir/process()
/obj/machinery/atmospherics/unary/heat_reservoir/update_icon()
/obj/machinery/atmospherics/unary/initialize()
/obj/machinery/atmospherics/unary/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/unary/outlet_injector
/obj/machinery/atmospherics/unary/outlet_injector/broadcast_status()
/obj/machinery/atmospherics/unary/outlet_injector/hide(var/i)
/obj/machinery/atmospherics/unary/outlet_injector/initialize()
/obj/machinery/atmospherics/unary/outlet_injector/inject()
/obj/machinery/atmospherics/unary/outlet_injector/power_change()
/obj/machinery/atmospherics/unary/outlet_injector/process()
/obj/machinery/atmospherics/unary/outlet_injector/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/unary/outlet_injector/set_frequency(new_frequency)
/obj/machinery/atmospherics/unary/outlet_injector/update_icon()
/obj/machinery/atmospherics/unary/oxygen_generator
/obj/machinery/atmospherics/unary/oxygen_generator/New()
/obj/machinery/atmospherics/unary/oxygen_generator/process()
/obj/machinery/atmospherics/unary/oxygen_generator/update_icon()
/obj/machinery/atmospherics/unary/reassign_network(datum/pipe_network/old_network, datum/pipe_network/new_network)
/obj/machinery/atmospherics/unary/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/unary/return_network_air(datum/pipe_network/reference)
/obj/machinery/atmospherics/unary/thermal_plate
/obj/machinery/atmospherics/unary/thermal_plate/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/unary/thermal_plate/hide(var/i)
/obj/machinery/atmospherics/unary/thermal_plate/process()
/obj/machinery/atmospherics/unary/thermal_plate/radiate()
/obj/machinery/atmospherics/unary/thermal_plate/update_icon()
/obj/machinery/atmospherics/unary/vent_pump
/obj/machinery/atmospherics/unary/vent_pump/Destroy()
/obj/machinery/atmospherics/unary/vent_pump/New()
/obj/machinery/atmospherics/unary/vent_pump/attackby(obj/item/W, mob/user)
/obj/machinery/atmospherics/unary/vent_pump/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/unary/vent_pump/broadcast_status()
/obj/machinery/atmospherics/unary/vent_pump/examine()
/obj/machinery/atmospherics/unary/vent_pump/hide(var/i)
/obj/machinery/atmospherics/unary/vent_pump/high_volume
/obj/machinery/atmospherics/unary/vent_pump/high_volume/New()
/obj/machinery/atmospherics/unary/vent_pump/initialize()
/obj/machinery/atmospherics/unary/vent_pump/on
/obj/machinery/atmospherics/unary/vent_pump/power_change()
/obj/machinery/atmospherics/unary/vent_pump/process()
/obj/machinery/atmospherics/unary/vent_pump/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/unary/vent_pump/set_frequency(new_frequency)
/obj/machinery/atmospherics/unary/vent_pump/siphon
/obj/machinery/atmospherics/unary/vent_pump/siphon/on
/obj/machinery/atmospherics/unary/vent_pump/update_icon()
/obj/machinery/atmospherics/unary/vent_scrubber
/obj/machinery/atmospherics/unary/vent_scrubber/Destroy()
/obj/machinery/atmospherics/unary/vent_scrubber/New()
/obj/machinery/atmospherics/unary/vent_scrubber/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/unary/vent_scrubber/broadcast_status()
/obj/machinery/atmospherics/unary/vent_scrubber/initialize()
/obj/machinery/atmospherics/unary/vent_scrubber/power_change()
/obj/machinery/atmospherics/unary/vent_scrubber/process()
/obj/machinery/atmospherics/unary/vent_scrubber/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/unary/vent_scrubber/set_frequency(new_frequency)
/obj/machinery/atmospherics/unary/vent_scrubber/update_icon()
/obj/machinery/atmospherics/update_icon()
/obj/machinery/atmospherics/valve
/obj/machinery/atmospherics/valve/Destroy()
/obj/machinery/atmospherics/valve/New()
/obj/machinery/atmospherics/valve/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/valve/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/valve/attack_paw(mob/user as mob)
/obj/machinery/atmospherics/valve/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/atmospherics/valve/build_network()
/obj/machinery/atmospherics/valve/close()
/obj/machinery/atmospherics/valve/digital
/obj/machinery/atmospherics/valve/digital/attack_ai(mob/user as mob)
/obj/machinery/atmospherics/valve/digital/attack_hand(mob/user as mob)
/obj/machinery/atmospherics/valve/digital/initialize()
/obj/machinery/atmospherics/valve/digital/proc/set_frequency(new_frequency)
/obj/machinery/atmospherics/valve/digital/receive_signal(datum/signal/signal)
/obj/machinery/atmospherics/valve/digital/set_frequency(new_frequency)
/obj/machinery/atmospherics/valve/disconnect(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/valve/initialize()
/obj/machinery/atmospherics/valve/network_expand(datum/pipe_network/new_network, obj/machinery/atmospherics/pipe/reference)
/obj/machinery/atmospherics/valve/normalize_dir()
/obj/machinery/atmospherics/valve/open
/obj/machinery/atmospherics/valve/open()
/obj/machinery/atmospherics/valve/process()
/obj/machinery/atmospherics/valve/reassign_network(datum/pipe_network/old_network, datum/pipe_network/new_network)
/obj/machinery/atmospherics/valve/return_network(obj/machinery/atmospherics/reference)
/obj/machinery/atmospherics/valve/return_network_air(datum/network/reference)
/obj/machinery/atmospherics/valve/update_icon(animation)
/obj/machinery/atmospherics/var/_color
/obj/machinery/attack_ai(var/mob/user as mob)
/obj/machinery/attack_hand(mob/user as mob)
/obj/machinery/attack_paw(mob/user as mob)
/obj/machinery/auto_cloner
/obj/machinery/auto_cloner/New()
/obj/machinery/auto_cloner/process()
/obj/machinery/auto_use_power()
/obj/machinery/autolathe
/obj/machinery/autolathe/New()
/obj/machinery/autolathe/RefreshParts()
/obj/machinery/autolathe/Topic(href, href_list)
/obj/machinery/autolathe/attack_hand(mob/user as mob)
/obj/machinery/autolathe/attack_paw(mob/user as mob)
/obj/machinery/autolathe/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/autolathe/interact(mob/user as mob)
/obj/machinery/autolathe/regular_win(mob/user as mob)
/obj/machinery/autolathe/shock(mob/user, prb)
/obj/machinery/autolathe/wires_win(mob/user as mob)
/obj/machinery/biogenerator
/obj/machinery/biogenerator/New()
/obj/machinery/biogenerator/Topic(href, href_list)
/obj/machinery/biogenerator/activate()
/obj/machinery/biogenerator/attack_hand(mob/user as mob)
/obj/machinery/biogenerator/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/biogenerator/create_product(var/item,var/cost)
/obj/machinery/biogenerator/interact(mob/user as mob)
/obj/machinery/biogenerator/on_reagent_change()
/obj/machinery/biogenerator/update_icon()
/obj/machinery/blackbox_recorder
/obj/machinery/blackbox_recorder/Destroy()
/obj/machinery/blackbox_recorder/New()
/obj/machinery/blackbox_recorder/find_feedback_datum(var/variable)
/obj/machinery/blackbox_recorder/get_round_feedback()
/obj/machinery/blackbox_recorder/round_end_data_gathering()
/obj/machinery/blackbox_recorder/save_all_data_to_sql()
/obj/machinery/blob_act()
/obj/machinery/bluespace_beacon
/obj/machinery/bluespace_beacon/Destroy()
/obj/machinery/bluespace_beacon/New()
/obj/machinery/bluespace_beacon/hide(var/intact)
/obj/machinery/bluespace_beacon/process()
/obj/machinery/bluespace_beacon/updateicon()
/obj/machinery/body_scanconsole
/obj/machinery/body_scanconsole/New()
/obj/machinery/body_scanconsole/attack_ai(user as mob)
/obj/machinery/body_scanconsole/attack_hand(user as mob)
/obj/machinery/body_scanconsole/attack_paw(user as mob)
/obj/machinery/body_scanconsole/blob_act()
/obj/machinery/body_scanconsole/ex_act(severity)
/obj/machinery/body_scanconsole/power_change()
/obj/machinery/bodyscanner
/obj/machinery/bodyscanner/attackby(obj/item/weapon/grab/G as obj, user as mob)
/obj/machinery/bodyscanner/blob_act()
/obj/machinery/bodyscanner/ex_act(severity)
/obj/machinery/bodyscanner/go_out()
/obj/machinery/bodyscanner/relaymove(mob/user as mob)
/obj/machinery/bodyscanner/verb/eject()
/obj/machinery/bodyscanner/verb/move_inside()
/obj/machinery/bookbinder
/obj/machinery/bookbinder/attackby(var/obj/O as obj, var/mob/user as mob)
/obj/machinery/bot
/obj/machinery/bot/Emag(mob/user as mob)
/obj/machinery/bot/attack_ai(mob/user as mob)
/obj/machinery/bot/attack_alien(var/mob/living/carbon/alien/user as mob)
/obj/machinery/bot/attack_animal(var/mob/living/simple_animal/M as mob)
/obj/machinery/bot/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/bot/blob_act()
/obj/machinery/bot/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/cleanbot
/obj/machinery/bot/cleanbot/Emag(mob/user as mob)
/obj/machinery/bot/cleanbot/New()
/obj/machinery/bot/cleanbot/Topic(href, href_list)
/obj/machinery/bot/cleanbot/attack_hand(mob/user as mob)
/obj/machinery/bot/cleanbot/attackby(obj/item/weapon/W, mob/user as mob)
/obj/machinery/bot/cleanbot/clean(var/obj/effect/decal/cleanable/target)
/obj/machinery/bot/cleanbot/explode()
/obj/machinery/bot/cleanbot/get_targets()
/obj/machinery/bot/cleanbot/interact(mob/user as mob)
/obj/machinery/bot/cleanbot/patrol_move()
/obj/machinery/bot/cleanbot/process()
/obj/machinery/bot/cleanbot/receive_signal(datum/signal/signal)
/obj/machinery/bot/cleanbot/turn_off()
/obj/machinery/bot/cleanbot/turn_on()
/obj/machinery/bot/ed209
/obj/machinery/bot/ed209/Bump(M as mob|obj)
/obj/machinery/bot/ed209/Emag(mob/user as mob)
/obj/machinery/bot/ed209/New(loc,created_name,created_lasercolor)
/obj/machinery/bot/ed209/Topic(href, href_list)
/obj/machinery/bot/ed209/assess_perp(mob/living/carbon/human/perp as mob)
/obj/machinery/bot/ed209/at_patrol_target()
/obj/machinery/bot/ed209/attack_alien(var/mob/living/carbon/alien/user as mob)
/obj/machinery/bot/ed209/attack_hand(mob/user as mob)
/obj/machinery/bot/ed209/attack_hand(mob/user as mob)/if(!src.locked || issilicon(user))
/obj/machinery/bot/ed209/attack_hand(mob/user as mob)/onclose(user, "autosec")
/obj/machinery/bot/ed209/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/bot/ed209/bluetag/New()
/obj/machinery/bot/ed209/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/ed209/calc_path(var/turf/avoid = null)
/obj/machinery/bot/ed209/emp_act(severity)
/obj/machinery/bot/ed209/explode()
/obj/machinery/bot/ed209/find_nearest_beacon()
/obj/machinery/bot/ed209/find_patrol_target()
/obj/machinery/bot/ed209/look_for_perp()
/obj/machinery/bot/ed209/patrol_step()
/obj/machinery/bot/ed209/post_signal(var/freq, var/key, var/value)
/obj/machinery/bot/ed209/post_signal_multiple(var/freq, var/list/keyval)
/obj/machinery/bot/ed209/process()
/obj/machinery/bot/ed209/receive_signal(datum/signal/signal)
/obj/machinery/bot/ed209/redtag/New()
/obj/machinery/bot/ed209/send_status()
/obj/machinery/bot/ed209/set_destination(var/new_dest)
/obj/machinery/bot/ed209/shootAt(var/mob/target)
/obj/machinery/bot/ed209/speak(var/message)
/obj/machinery/bot/ed209/turn_off()
/obj/machinery/bot/ed209/turn_on()
/obj/machinery/bot/emp_act(severity)
/obj/machinery/bot/ex_act(severity)
/obj/machinery/bot/examine()
/obj/machinery/bot/explode()
/obj/machinery/bot/floorbot
/obj/machinery/bot/floorbot/Bump(M as mob|obj)
/obj/machinery/bot/floorbot/Emag(mob/user as mob)
/obj/machinery/bot/floorbot/New()
/obj/machinery/bot/floorbot/Topic(href, href_list)
/obj/machinery/bot/floorbot/at_patrol_target()
/obj/machinery/bot/floorbot/attack_hand(mob/user as mob)
/obj/machinery/bot/floorbot/attackby(var/obj/item/W , mob/user as mob)
/obj/machinery/bot/floorbot/calc_path(var/turf/avoid = null)
/obj/machinery/bot/floorbot/checkforwork()
/obj/machinery/bot/floorbot/eattile(var/obj/item/stack/tile/plasteel/T)
/obj/machinery/bot/floorbot/explode()
/obj/machinery/bot/floorbot/find_nearest_beacon()
/obj/machinery/bot/floorbot/find_patrol_target()
/obj/machinery/bot/floorbot/fix_shit()
/obj/machinery/bot/floorbot/have_target()
/obj/machinery/bot/floorbot/hunt_for_metal(var/list/shit_in_view, var/list/floorbottargets)
/obj/machinery/bot/floorbot/hunt_for_tiles(var/list/shit_in_view, var/list/floorbottargets)
/obj/machinery/bot/floorbot/interact(mob/user as mob)
/obj/machinery/bot/floorbot/is_obj_valid_target(var/atom/T,var/list/floorbottargets)
/obj/machinery/bot/floorbot/maketile(var/obj/item/stack/sheet/metal/M)
/obj/machinery/bot/floorbot/patrol_step()
/obj/machinery/bot/floorbot/post_signal(var/freq, var/key, var/value)
/obj/machinery/bot/floorbot/post_signal_multiple(var/freq, var/list/keyval)
/obj/machinery/bot/floorbot/process()
/obj/machinery/bot/floorbot/receive_signal(datum/signal/signal)
/obj/machinery/bot/floorbot/repair(var/turf/target)
/obj/machinery/bot/floorbot/set_destination(var/new_dest)
/obj/machinery/bot/floorbot/speak(var/message)
/obj/machinery/bot/floorbot/turn_off()
/obj/machinery/bot/floorbot/turn_on()
/obj/machinery/bot/floorbot/updateicon()
/obj/machinery/bot/healthcheck()
/obj/machinery/bot/medbot
/obj/machinery/bot/medbot/Bump(M as mob|obj)
/obj/machinery/bot/medbot/Emag(mob/user as mob)
/obj/machinery/bot/medbot/New()
/obj/machinery/bot/medbot/Topic(href, href_list)
/obj/machinery/bot/medbot/assess_patient(mob/living/carbon/C as mob)
/obj/machinery/bot/medbot/attack_hand(mob/user as mob)
/obj/machinery/bot/medbot/attack_paw(mob/user as mob)
/obj/machinery/bot/medbot/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/bot/medbot/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/bot/medbot/explode()
/obj/machinery/bot/medbot/medicate_patient(mob/living/carbon/C as mob)
/obj/machinery/bot/medbot/mysterious
/obj/machinery/bot/medbot/process()
/obj/machinery/bot/medbot/speak(var/message)
/obj/machinery/bot/medbot/turn_off()
/obj/machinery/bot/medbot/turn_on()
/obj/machinery/bot/meteorhit()
/obj/machinery/bot/mulebot
/obj/machinery/bot/mulebot/Bump(var/atom/obs)
/obj/machinery/bot/mulebot/MouseDrop_T(var/atom/movable/C, mob/user)
/obj/machinery/bot/mulebot/New()
/obj/machinery/bot/mulebot/RunOver(var/mob/living/carbon/human/H)
/obj/machinery/bot/mulebot/RunOverCreature(var/mob/living/H,var/bloodcolor)
/obj/machinery/bot/mulebot/Topic(href, href_list)
/obj/machinery/bot/mulebot/alter_health()
/obj/machinery/bot/mulebot/at_target()
/obj/machinery/bot/mulebot/attack_ai(var/mob/user)
/obj/machinery/bot/mulebot/attack_hand(var/mob/user)
/obj/machinery/bot/mulebot/attackby(var/obj/item/I, var/mob/user)
/obj/machinery/bot/mulebot/bullet_act()
/obj/machinery/bot/mulebot/calc_path(var/turf/avoid = null)
/obj/machinery/bot/mulebot/emp_act(severity)
/obj/machinery/bot/mulebot/ex_act(var/severity)
/obj/machinery/bot/mulebot/explode()
/obj/machinery/bot/mulebot/has_power()
/obj/machinery/bot/mulebot/interact(var/mob/user, var/ai=0)
/obj/machinery/bot/mulebot/load(var/atom/movable/C)
/obj/machinery/bot/mulebot/post_signal(var/freq, var/key, var/value)
/obj/machinery/bot/mulebot/post_signal_multiple(var/freq, var/list/keyval)
/obj/machinery/bot/mulebot/process()
/obj/machinery/bot/mulebot/process_bot()
/obj/machinery/bot/mulebot/receive_signal(datum/signal/signal)
/obj/machinery/bot/mulebot/relaymove(var/mob/user)
/obj/machinery/bot/mulebot/send_status()
/obj/machinery/bot/mulebot/set_destination(var/new_dest)
/obj/machinery/bot/mulebot/start()
/obj/machinery/bot/mulebot/start_home()
/obj/machinery/bot/mulebot/toggle_lock(var/mob/user)
/obj/machinery/bot/mulebot/unload(var/dirn = 0)
/obj/machinery/bot/mulebot/wires()
/obj/machinery/bot/secbot
/obj/machinery/bot/secbot/Bump(M as mob|obj)
/obj/machinery/bot/secbot/Emag(mob/user as mob)
/obj/machinery/bot/secbot/New()
/obj/machinery/bot/secbot/Topic(href, href_list)
/obj/machinery/bot/secbot/assess_perp(mob/living/carbon/human/perp as mob)
/obj/machinery/bot/secbot/at_patrol_target()
/obj/machinery/bot/secbot/attack_alien(var/mob/living/carbon/alien/user as mob)
/obj/machinery/bot/secbot/attack_hand(mob/user as mob)
/obj/machinery/bot/secbot/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/bot/secbot/beepsky
/obj/machinery/bot/secbot/calc_path(var/turf/avoid = null)
/obj/machinery/bot/secbot/explode()
/obj/machinery/bot/secbot/find_nearest_beacon()
/obj/machinery/bot/secbot/find_patrol_target()
/obj/machinery/bot/secbot/interact(mob/user as mob)
/obj/machinery/bot/secbot/interact(mob/user as mob)/if(!src.locked || issilicon(user))
/obj/machinery/bot/secbot/interact(mob/user as mob)/onclose(user, "autosec")
/obj/machinery/bot/secbot/look_for_perp()
/obj/machinery/bot/secbot/patrol_step()
/obj/machinery/bot/secbot/post_signal(var/freq, var/key, var/value)
/obj/machinery/bot/secbot/post_signal_multiple(var/freq, var/list/keyval)
/obj/machinery/bot/secbot/process()
/obj/machinery/bot/secbot/receive_signal(datum/signal/signal)
/obj/machinery/bot/secbot/send_status()
/obj/machinery/bot/secbot/set_destination(var/new_dest)
/obj/machinery/bot/secbot/speak(var/message)
/obj/machinery/bot/secbot/turn_off()
/obj/machinery/bot/secbot/turn_on()
/obj/machinery/bot/turn_off()
/obj/machinery/bot/turn_on()
/obj/machinery/bunsen_burner
/obj/machinery/bunsen_burner/attack_hand(mob/user as mob)
/obj/machinery/bunsen_burner/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/bunsen_burner/try_heating()
/obj/machinery/bunsen_burner/verb/toggle()
/obj/machinery/camera
/obj/machinery/camera/Del()
/obj/machinery/camera/HasProximity(atom/movable/AM as mob|obj)
/obj/machinery/camera/New()
/obj/machinery/camera/all/New()
/obj/machinery/camera/attack_ai(var/mob/living/silicon/ai/user as mob)
/obj/machinery/camera/attack_paw(mob/living/carbon/alien/humanoid/user as mob)
/obj/machinery/camera/attackby(W as obj, mob/living/user as mob)
/obj/machinery/camera/autoname
/obj/machinery/camera/autoname/New()
/obj/machinery/camera/blob_act()
/obj/machinery/camera/can_see()
/obj/machinery/camera/can_use()
/obj/machinery/camera/cancelAlarm()
/obj/machinery/camera/cancelCameraAlarm()
/obj/machinery/camera/deactivate(user as mob, var/choice = 1)
/obj/machinery/camera/deactivatebug(user as mob)
/obj/machinery/camera/emp_act(severity)
/obj/machinery/camera/emp_proof/New()
/obj/machinery/camera/ex_act(severity)
/obj/machinery/camera/isEmpProof()
/obj/machinery/camera/isMotion()
/obj/machinery/camera/isXRay()
/obj/machinery/camera/lostTarget(var/mob/target)
/obj/machinery/camera/motion/New()
/obj/machinery/camera/newTarget(var/mob/target)
/obj/machinery/camera/process()
/obj/machinery/camera/setViewRange(var/num = 7)
/obj/machinery/camera/shock(var/mob/living/user)
/obj/machinery/camera/triggerAlarm()
/obj/machinery/camera/triggerCameraAlarm()
/obj/machinery/camera/upgradeEmpProof()
/obj/machinery/camera/upgradeMotion()
/obj/machinery/camera/upgradeXRay()
/obj/machinery/camera/weld(var/obj/item/weapon/weldingtool/WT, var/mob/user)
/obj/machinery/camera/xray
/obj/machinery/camera/xray/New()
/obj/machinery/cell_charger
/obj/machinery/cell_charger/attack_ai(mob/user)
/obj/machinery/cell_charger/attack_hand(mob/user)
/obj/machinery/cell_charger/attackby(obj/item/weapon/W, mob/user)
/obj/machinery/cell_charger/emp_act(severity)
/obj/machinery/cell_charger/examine()
/obj/machinery/cell_charger/process()
/obj/machinery/cell_charger/updateicon()
/obj/machinery/centrifuge
/obj/machinery/centrifuge/attack_hand(var/mob/user as mob)
/obj/machinery/centrifuge/attackby(var/obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/centrifuge/process()
/obj/machinery/cerealmaker
/obj/machinery/cerealmaker/attackby(obj/item/I, mob/user)
/obj/machinery/chem_dispenser
/obj/machinery/chem_dispenser/New()
/obj/machinery/chem_dispenser/Topic(href, href_list)
/obj/machinery/chem_dispenser/attack_ai(mob/user as mob)
/obj/machinery/chem_dispenser/attack_hand(mob/user as mob)
/obj/machinery/chem_dispenser/attack_paw(mob/user as mob)
/obj/machinery/chem_dispenser/attackby(var/obj/item/weapon/B as obj, var/mob/user as mob)
/obj/machinery/chem_dispenser/attackby(var/obj/item/weapon/reagent_containers/B as obj, var/mob/user as mob)
/obj/machinery/chem_dispenser/beer
/obj/machinery/chem_dispenser/blob_act()
/obj/machinery/chem_dispenser/ex_act(severity)
/obj/machinery/chem_dispenser/meteorhit()
/obj/machinery/chem_dispenser/power_change()
/obj/machinery/chem_dispenser/process()
/obj/machinery/chem_dispenser/recharge()
/obj/machinery/chem_dispenser/soda
/obj/machinery/chem_dispenser/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/chem_master
/obj/machinery/chem_master/New()
/obj/machinery/chem_master/Topic(href, href_list)
/obj/machinery/chem_master/attack_ai(mob/user as mob)
/obj/machinery/chem_master/attack_hand(mob/user as mob)
/obj/machinery/chem_master/attack_paw(mob/user as mob)
/obj/machinery/chem_master/attackby(var/obj/item/weapon/B as obj, var/mob/user as mob)
/obj/machinery/chem_master/blob_act()
/obj/machinery/chem_master/condimaster
/obj/machinery/chem_master/ex_act(severity)
/obj/machinery/chem_master/isgoodnumber(var/num)
/obj/machinery/chem_master/meteorhit()
/obj/machinery/chem_master/power_change()
/obj/machinery/clonepod
/obj/machinery/clonepod/attack_ai(mob/user as mob)
/obj/machinery/clonepod/attack_hand(mob/user as mob)
/obj/machinery/clonepod/attack_paw(mob/user as mob)
/obj/machinery/clonepod/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/clonepod/connected_message(var/message)
/obj/machinery/clonepod/emp_act(severity)
/obj/machinery/clonepod/ex_act(severity)
/obj/machinery/clonepod/go_out()
/obj/machinery/clonepod/growclone(var/datum/dna2/record/R)
/obj/machinery/clonepod/malfunction()
/obj/machinery/clonepod/process()
/obj/machinery/clonepod/relaymove(mob/user as mob)
/obj/machinery/clonepod/verb/eject()
/obj/machinery/compressor
/obj/machinery/compressor/New()
/obj/machinery/compressor/process()
/obj/machinery/computer
/obj/machinery/computer/HONKputer
/obj/machinery/computer/HONKputer/Topic(href, href_list)
/obj/machinery/computer/HONKputer/attack_hand(var/mob/user as mob)
/obj/machinery/computer/HONKputer/attackby(I as obj, user as mob)
/obj/machinery/computer/HONKputer/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/machinery/computer/HONKputer/process()
/obj/machinery/computer/HolodeckControl
/obj/machinery/computer/HolodeckControl/Destroy()
/obj/machinery/computer/HolodeckControl/New()
/obj/machinery/computer/HolodeckControl/Topic(href, href_list)
/obj/machinery/computer/HolodeckControl/attack_ai(var/mob/user as mob)
/obj/machinery/computer/HolodeckControl/attack_hand(var/mob/user as mob)
/obj/machinery/computer/HolodeckControl/attack_paw(var/mob/user as mob)
/obj/machinery/computer/HolodeckControl/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob)
/obj/machinery/computer/HolodeckControl/blob_act()
/obj/machinery/computer/HolodeckControl/checkInteg(var/area/A)
/obj/machinery/computer/HolodeckControl/derez(var/obj/obj , var/silent = 1)
/obj/machinery/computer/HolodeckControl/emergencyShutdown()
/obj/machinery/computer/HolodeckControl/emp_act(severity)
/obj/machinery/computer/HolodeckControl/ex_act(severity)
/obj/machinery/computer/HolodeckControl/loadProgram(var/area/A)
/obj/machinery/computer/HolodeckControl/meteorhit(var/obj/O as obj)
/obj/machinery/computer/HolodeckControl/process()
/obj/machinery/computer/HolodeckControl/togglePower(var/toggleOn = 0)
/obj/machinery/computer/New()
/obj/machinery/computer/aifixer
/obj/machinery/computer/aifixer/New()
/obj/machinery/computer/aifixer/Topic(href, href_list)
/obj/machinery/computer/aifixer/attack_ai(var/mob/user as mob)
/obj/machinery/computer/aifixer/attack_hand(var/mob/user as mob)
/obj/machinery/computer/aifixer/attack_paw(var/mob/user as mob)
/obj/machinery/computer/aifixer/attackby(I as obj, user as mob)
/obj/machinery/computer/aifixer/process()
/obj/machinery/computer/aifixer/update_icon()
/obj/machinery/computer/aiupload
/obj/machinery/computer/aiupload/attack_hand(var/mob/user as mob)
/obj/machinery/computer/aiupload/attackby(obj/item/weapon/O as obj, mob/user as mob)
/obj/machinery/computer/aiupload/verb/AccessInternals()
/obj/machinery/computer/arcade/
/obj/machinery/computer/arcade/New()
/obj/machinery/computer/arcade/battle
/obj/machinery/computer/arcade/battle/New()
/obj/machinery/computer/arcade/battle/Topic(href, href_list)
/obj/machinery/computer/arcade/battle/arcade_action()
/obj/machinery/computer/arcade/battle/attack_hand(mob/user as mob)
/obj/machinery/computer/arcade/battle/attackby(I as obj, user as mob)
/obj/machinery/computer/arcade/emp_act(severity)
/obj/machinery/computer/arcade/orion_trail
/obj/machinery/computer/arcade/orion_trail/New()
/obj/machinery/computer/arcade/orion_trail/Topic(href, href_list)
/obj/machinery/computer/arcade/orion_trail/attack_hand(mob/user as mob)
/obj/machinery/computer/arcade/orion_trail/event()
/obj/machinery/computer/arcade/orion_trail/newgame()
/obj/machinery/computer/arcade/orion_trail/win()
/obj/machinery/computer/arcade/prizevend()
/obj/machinery/computer/area_atmos
/obj/machinery/computer/area_atmos/New()
/obj/machinery/computer/area_atmos/Topic(href, href_list)
/obj/machinery/computer/area_atmos/area
/obj/machinery/computer/area_atmos/area/scanscrubbers()
/obj/machinery/computer/area_atmos/area/validscrubber( var/obj/machinery/portable_atmospherics/scrubber/huge/scrubber as obj )
/obj/machinery/computer/area_atmos/attack_ai(var/mob/user as mob)
/obj/machinery/computer/area_atmos/attack_hand(var/mob/user as mob)
/obj/machinery/computer/area_atmos/attack_paw(var/mob/user as mob)
/obj/machinery/computer/area_atmos/scanscrubbers()
/obj/machinery/computer/area_atmos/validscrubber( var/obj/machinery/portable_atmospherics/scrubber/huge/scrubber as obj )
/obj/machinery/computer/atmos_alert
/obj/machinery/computer/atmos_alert/Destroy()
/obj/machinery/computer/atmos_alert/Topic(href, href_list)
/obj/machinery/computer/atmos_alert/attack_hand(mob/user)
/obj/machinery/computer/atmos_alert/initialize()
/obj/machinery/computer/atmos_alert/process()
/obj/machinery/computer/atmos_alert/receive_signal(datum/signal/signal)
/obj/machinery/computer/atmos_alert/return_text()
/obj/machinery/computer/atmos_alert/set_frequency(new_frequency)
/obj/machinery/computer/atmos_alert/update_icon()
/obj/machinery/computer/atmoscontrol
/obj/machinery/computer/atmoscontrol/Topic(href, href_list)
/obj/machinery/computer/atmoscontrol/attack_ai(var/mob/user as mob)
/obj/machinery/computer/atmoscontrol/attack_hand(mob/user)
/obj/machinery/computer/atmoscontrol/attack_paw(var/mob/user as mob)
/obj/machinery/computer/atmoscontrol/attackby(var/obj/item/I as obj, var/mob/user as mob)
/obj/machinery/computer/atmoscontrol/interact(mob/user)
/obj/machinery/computer/atmoscontrol/is_in_filter(var/typepath)
/obj/machinery/computer/atmoscontrol/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/computer/attackby(I as obj, user as mob)
/obj/machinery/computer/blob_act()
/obj/machinery/computer/borgupload
/obj/machinery/computer/borgupload/attack_hand(var/mob/user as mob)
/obj/machinery/computer/borgupload/attackby(obj/item/weapon/aiModule/module as obj, mob/user as mob)
/obj/machinery/computer/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/computer/card
/obj/machinery/computer/card/Topic(href, href_list)
/obj/machinery/computer/card/attack_ai(var/mob/user as mob)
/obj/machinery/computer/card/attack_hand(mob/user as mob)
/obj/machinery/computer/card/attack_paw(var/mob/user as mob)
/obj/machinery/computer/card/attackby(obj/item/weapon/card/id/id_card, mob/user)
/obj/machinery/computer/card/centcom
/obj/machinery/computer/card/format_jobs(list/jobs)
/obj/machinery/computer/card/get_target_rank()
/obj/machinery/computer/card/is_authenticated()
/obj/machinery/computer/card/is_centcom()
/obj/machinery/computer/card/ui_interact(mob/user, ui_key="main", datum/nanoui/ui=null)
/obj/machinery/computer/centrifuge
/obj/machinery/computer/centrifuge/Topic(href, href_list)
/obj/machinery/computer/centrifuge/attack_hand(var/mob/user as mob)
/obj/machinery/computer/centrifuge/attackby(var/obj/O as obj, var/mob/user as mob)
/obj/machinery/computer/centrifuge/cure()
/obj/machinery/computer/centrifuge/isolate()
/obj/machinery/computer/centrifuge/print(var/mob/user)
/obj/machinery/computer/centrifuge/process()
/obj/machinery/computer/centrifuge/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/computer/centrifuge/update_icon()
/obj/machinery/computer/cloning
/obj/machinery/computer/cloning/New()
/obj/machinery/computer/cloning/Topic(href, href_list)
/obj/machinery/computer/cloning/attack_ai(mob/user as mob)
/obj/machinery/computer/cloning/attack_hand(mob/user as mob)
/obj/machinery/computer/cloning/attack_paw(mob/user as mob)
/obj/machinery/computer/cloning/attackby(obj/item/W as obj, mob/user as mob)
/obj/machinery/computer/cloning/find_record(var/find_key)
/obj/machinery/computer/cloning/findcloner()
/obj/machinery/computer/cloning/findscanner()
/obj/machinery/computer/cloning/scan_mob(mob/living/carbon/human/subject as mob)
/obj/machinery/computer/cloning/update_icon()
/obj/machinery/computer/cloning/updatemodules()
/obj/machinery/computer/communications
/obj/machinery/computer/communications/Destroy()
/obj/machinery/computer/communications/Topic(href, href_list)
/obj/machinery/computer/communications/attack_ai(var/mob/user as mob)
/obj/machinery/computer/communications/attack_hand(var/mob/user as mob)
/obj/machinery/computer/communications/attack_paw(var/mob/user as mob)
/obj/machinery/computer/communications/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/machinery/computer/communications/getCurrentMessage(var/mob/user)
/obj/machinery/computer/communications/getMenuState(var/mob/user)
/obj/machinery/computer/communications/post_status(var/command, var/data1, var/data2)
/obj/machinery/computer/communications/setCurrentMessage(var/mob/user,var/value)
/obj/machinery/computer/communications/setMenuState(var/mob/user,var/value)
/obj/machinery/computer/communications/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/computer/crew
/obj/machinery/computer/crew/New()
/obj/machinery/computer/crew/Topic(href, href_list)
/obj/machinery/computer/crew/attack_ai(mob/user)
/obj/machinery/computer/crew/attack_hand(mob/user)
/obj/machinery/computer/crew/interact(mob/user)
/obj/machinery/computer/crew/scan()
/obj/machinery/computer/crew/update_icon()
/obj/machinery/computer/cryopod
/obj/machinery/computer/cryopod/Topic(href, href_list)
/obj/machinery/computer/cryopod/attack_ai()
/obj/machinery/computer/cryopod/attack_hand(mob/user = usr)
/obj/machinery/computer/cryopod/attack_paw()
/obj/machinery/computer/curer
/obj/machinery/computer/curer/Topic(href, href_list)
/obj/machinery/computer/curer/attack_ai(var/mob/user as mob)
/obj/machinery/computer/curer/attack_hand(var/mob/user as mob)
/obj/machinery/computer/curer/attack_paw(var/mob/user as mob)
/obj/machinery/computer/curer/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/machinery/computer/curer/createcure(var/obj/item/weapon/reagent_containers/container)
/obj/machinery/computer/curer/process()
/obj/machinery/computer/diseasesplicer
/obj/machinery/computer/diseasesplicer/Topic(href, href_list)
/obj/machinery/computer/diseasesplicer/attack_ai(var/mob/user as mob)
/obj/machinery/computer/diseasesplicer/attack_hand(var/mob/user as mob)
/obj/machinery/computer/diseasesplicer/attack_paw(var/mob/user as mob)
/obj/machinery/computer/diseasesplicer/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/machinery/computer/diseasesplicer/process()
/obj/machinery/computer/diseasesplicer/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/computer/drone_control
/obj/machinery/computer/drone_control/Topic(href, href_list)
/obj/machinery/computer/drone_control/attack_ai(var/mob/user as mob)
/obj/machinery/computer/drone_control/attack_hand(var/mob/user as mob)
/obj/machinery/computer/drone_control/attack_paw(var/mob/user as mob)
/obj/machinery/computer/emp_act(severity)
/obj/machinery/computer/ex_act(severity)
/obj/machinery/computer/forensic_scanning
/obj/machinery/computer/forensic_scanning/New()
/obj/machinery/computer/forensic_scanning/Topic(href,href_list)
/obj/machinery/computer/forensic_scanning/add_data(var/atom/scanned_atom)
/obj/machinery/computer/forensic_scanning/add_data_master(var/atom_reference, var/list/atom_fingerprints, var/list/atom_suit_fibers, var/list/atom_blood_DNA, var/atom_name)
/obj/machinery/computer/forensic_scanning/add_data_scanner(var/obj/item/device/W)
/obj/machinery/computer/forensic_scanning/attack_ai(mob/user)
/obj/machinery/computer/forensic_scanning/attack_hand(mob/user)
/obj/machinery/computer/forensic_scanning/delete_dossier(var/print)
/obj/machinery/computer/forensic_scanning/delete_record(var/atom_ref)
/obj/machinery/computer/forensic_scanning/detective
/obj/machinery/computer/forensic_scanning/ex_act()
/obj/machinery/computer/forensic_scanning/process_card()
/obj/machinery/computer/forensic_scanning/update_fingerprints(var/ref_print, var/new_print)
/obj/machinery/computer/general_air_control
/obj/machinery/computer/general_air_control/attack_hand(mob/user)
/obj/machinery/computer/general_air_control/attackby(I as obj, user as mob)
/obj/machinery/computer/general_air_control/fuel_injection
/obj/machinery/computer/general_air_control/fuel_injection/Topic(href, href_list)
/obj/machinery/computer/general_air_control/fuel_injection/attackby(I as obj, user as mob)
/obj/machinery/computer/general_air_control/fuel_injection/process()
/obj/machinery/computer/general_air_control/fuel_injection/receive_signal(datum/signal/signal)
/obj/machinery/computer/general_air_control/fuel_injection/return_text()
/obj/machinery/computer/general_air_control/initialize()
/obj/machinery/computer/general_air_control/large_tank_control
/obj/machinery/computer/general_air_control/large_tank_control/Topic(href, href_list)
/obj/machinery/computer/general_air_control/large_tank_control/process()
/obj/machinery/computer/general_air_control/large_tank_control/receive_signal(datum/signal/signal)
/obj/machinery/computer/general_air_control/large_tank_control/request_device_refresh(var/device)
/obj/machinery/computer/general_air_control/large_tank_control/return_text()
/obj/machinery/computer/general_air_control/large_tank_control/send_signal(var/list/data)
/obj/machinery/computer/general_air_control/process()
/obj/machinery/computer/general_air_control/receive_signal(datum/signal/signal)
/obj/machinery/computer/general_air_control/return_text()
/obj/machinery/computer/general_air_control/set_frequency(new_frequency)
/obj/machinery/computer/guestpass
/obj/machinery/computer/guestpass/Topic(href, href_list)
/obj/machinery/computer/guestpass/attack_ai(var/mob/user as mob)
/obj/machinery/computer/guestpass/attack_hand(var/mob/user as mob)
/obj/machinery/computer/guestpass/attack_paw(var/mob/user as mob)
/obj/machinery/computer/guestpass/attackby(obj/O, mob/user)
/obj/machinery/computer/hologram_comp
/obj/machinery/computer/hologram_comp/DblClick()
/obj/machinery/computer/hologram_comp/New()
/obj/machinery/computer/hologram_comp/Topic(href, href_list)
/obj/machinery/computer/hologram_comp/render()
/obj/machinery/computer/hologram_comp/show_console(var/mob/user as mob)
/obj/machinery/computer/initialize()
/obj/machinery/computer/labor_shuttle
/obj/machinery/computer/labor_shuttle/Topic(href, href_list)
/obj/machinery/computer/labor_shuttle/attack_hand(user as mob)
/obj/machinery/computer/labor_shuttle/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/computer/labor_shuttle/one_way
/obj/machinery/computer/labor_shuttle/one_way/Topic(href, href_list)
/obj/machinery/computer/labor_shuttle/one_way/attack_hand(user as mob)
/obj/machinery/computer/laser
/obj/machinery/computer/laser/process()
/obj/machinery/computer/laser/setpower(var/powera)
/obj/machinery/computer/lasercon
/obj/machinery/computer/lasercon/New()
/obj/machinery/computer/lasercon/Topic(href, href_list)
/obj/machinery/computer/lasercon/interact(mob/user)
/obj/machinery/computer/lasercon/process()
/obj/machinery/computer/mech_bay_power_console
/obj/machinery/computer/mech_bay_power_console/Topic(href, href_list)
/obj/machinery/computer/mech_bay_power_console/attack_hand(mob/user as mob)
/obj/machinery/computer/mech_bay_power_console/mecha_in(var/obj/mecha/mecha)
/obj/machinery/computer/mech_bay_power_console/mecha_out()
/obj/machinery/computer/mech_bay_power_console/power_change()
/obj/machinery/computer/mech_bay_power_console/set_broken()
/obj/machinery/computer/mecha
/obj/machinery/computer/mecha/Topic(href, href_list)
/obj/machinery/computer/mecha/attack_ai(var/mob/user as mob)
/obj/machinery/computer/mecha/attack_hand(var/mob/user as mob)
/obj/machinery/computer/mecha/attack_paw(var/mob/user as mob)
/obj/machinery/computer/med_data
/obj/machinery/computer/med_data/Topic(href, href_list)
/obj/machinery/computer/med_data/attack_ai(user as mob)
/obj/machinery/computer/med_data/attack_hand(mob/user as mob)
/obj/machinery/computer/med_data/attack_paw(user as mob)
/obj/machinery/computer/med_data/emp_act(severity)
/obj/machinery/computer/med_data/laptop
/obj/machinery/computer/merch
/obj/machinery/computer/merch/New()
/obj/machinery/computer/merch/Topic(href, href_list)
/obj/machinery/computer/merch/attack_ai(mob/user as mob)
/obj/machinery/computer/merch/attack_hand(mob/user as mob)
/obj/machinery/computer/merch/attack_paw(mob/user as mob)
/obj/machinery/computer/merch/update_icon()
/obj/machinery/computer/message_monitor
/obj/machinery/computer/message_monitor/BruteForce(mob/user as mob)
/obj/machinery/computer/message_monitor/ResetMessage()
/obj/machinery/computer/message_monitor/Topic(href, href_list)
/obj/machinery/computer/message_monitor/UnmagConsole()
/obj/machinery/computer/message_monitor/attack_ai(mob/user as mob)
/obj/machinery/computer/message_monitor/attack_hand(var/mob/living/user as mob)
/obj/machinery/computer/message_monitor/attackby(obj/item/weapon/O as obj, mob/living/user as mob)
/obj/machinery/computer/message_monitor/initialize()
/obj/machinery/computer/message_monitor/update_icon()
/obj/machinery/computer/meteorhit(var/obj/O as obj)
/obj/machinery/computer/mining_shuttle
/obj/machinery/computer/mining_shuttle/Topic(href, href_list)
/obj/machinery/computer/mining_shuttle/attack_hand(user as mob)
/obj/machinery/computer/mining_shuttle/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/computer/operating
/obj/machinery/computer/operating/New()
/obj/machinery/computer/operating/Topic(href, href_list)
/obj/machinery/computer/operating/attack_ai(mob/user)
/obj/machinery/computer/operating/attack_hand(mob/user)
/obj/machinery/computer/operating/interact(mob/user)
/obj/machinery/computer/operating/process()
/obj/machinery/computer/ordercomp
/obj/machinery/computer/ordercomp/Topic(href, href_list)
/obj/machinery/computer/ordercomp/attack_ai(var/mob/user as mob)
/obj/machinery/computer/ordercomp/attack_hand(var/mob/user as mob)
/obj/machinery/computer/ordercomp/attack_paw(var/mob/user as mob)
/obj/machinery/computer/pandemic
/obj/machinery/computer/pandemic/Topic(href, href_list)
/obj/machinery/computer/pandemic/attack_ai(mob/user as mob)
/obj/machinery/computer/pandemic/attack_hand(mob/user as mob)
/obj/machinery/computer/pandemic/attack_paw(mob/user as mob)
/obj/machinery/computer/pandemic/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/machinery/computer/pandemic/power_change()
/obj/machinery/computer/pandemic/set_broken()
/obj/machinery/computer/pod
/obj/machinery/computer/pod/New()
/obj/machinery/computer/pod/Topic(href, href_list)
/obj/machinery/computer/pod/alarm()
/obj/machinery/computer/pod/attack_ai(var/mob/user as mob)
/obj/machinery/computer/pod/attack_hand(var/mob/user as mob)
/obj/machinery/computer/pod/attack_paw(var/mob/user as mob)
/obj/machinery/computer/pod/old
/obj/machinery/computer/pod/old/swf
/obj/machinery/computer/pod/old/syndicate
/obj/machinery/computer/pod/old/syndicate/attack_hand(var/mob/user as mob)
/obj/machinery/computer/pod/process()
/obj/machinery/computer/power_change()
/obj/machinery/computer/prison_shuttle
/obj/machinery/computer/prison_shuttle/Topic(href, href_list)
/obj/machinery/computer/prison_shuttle/attack_ai(var/mob/user as mob)
/obj/machinery/computer/prison_shuttle/attack_hand(var/mob/user as mob)
/obj/machinery/computer/prison_shuttle/attack_paw(var/mob/user as mob)
/obj/machinery/computer/prison_shuttle/attackby(I as obj, user as mob)
/obj/machinery/computer/prison_shuttle/post_signal(var/command)
/obj/machinery/computer/prison_shuttle/prison_break()
/obj/machinery/computer/prison_shuttle/prison_can_move()
/obj/machinery/computer/prison_shuttle/prison_process()
/obj/machinery/computer/prisoner
/obj/machinery/computer/prisoner/Topic(href, href_list)
/obj/machinery/computer/prisoner/attack_ai(var/mob/user as mob)
/obj/machinery/computer/prisoner/attack_hand(var/mob/user as mob)
/obj/machinery/computer/prisoner/attack_paw(var/mob/user as mob)
/obj/machinery/computer/prisoner/process()
/obj/machinery/computer/process()
/obj/machinery/computer/rdconsole
/obj/machinery/computer/rdconsole/CallMaterialName(var/ID)
/obj/machinery/computer/rdconsole/CallTechName(var/ID)
/obj/machinery/computer/rdconsole/Maximize()
/obj/machinery/computer/rdconsole/New()
/obj/machinery/computer/rdconsole/SyncRDevices()
/obj/machinery/computer/rdconsole/Topic(href, href_list)
/obj/machinery/computer/rdconsole/attack_hand(mob/user as mob)
/obj/machinery/computer/rdconsole/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob)
/obj/machinery/computer/rdconsole/core
/obj/machinery/computer/rdconsole/griefProtection()
/obj/machinery/computer/rdconsole/initialize()
/obj/machinery/computer/rdconsole/robotics
/obj/machinery/computer/rdservercontrol
/obj/machinery/computer/rdservercontrol/Topic(href, href_list)
/obj/machinery/computer/rdservercontrol/attack_hand(mob/user as mob)
/obj/machinery/computer/rdservercontrol/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob)
/obj/machinery/computer/reconstitutor
/obj/machinery/computer/reconstitutor/New()
/obj/machinery/computer/reconstitutor/Topic(href, href_list)
/obj/machinery/computer/reconstitutor/animal
/obj/machinery/computer/reconstitutor/animal/New()
/obj/machinery/computer/reconstitutor/animal/Topic(href, href_list)
/obj/machinery/computer/reconstitutor/attack_hand(var/mob/user as mob)
/obj/machinery/computer/reconstitutor/attackby(obj/item/W, mob/user)
/obj/machinery/computer/reconstitutor/interact(mob/user)
/obj/machinery/computer/reconstitutor/scan_fossil(var/obj/item/weapon/fossil/scan_fossil)
/obj/machinery/computer/research_shuttle
/obj/machinery/computer/research_shuttle/Topic(href, href_list)
/obj/machinery/computer/research_shuttle/attack_hand(user as mob)
/obj/machinery/computer/research_shuttle/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/computer/robotics
/obj/machinery/computer/robotics/Topic(href, href_list)
/obj/machinery/computer/robotics/attack_ai(var/mob/user as mob)
/obj/machinery/computer/robotics/attack_hand(var/mob/user as mob)
/obj/machinery/computer/robotics/attack_paw(var/mob/user as mob)
/obj/machinery/computer/robotics/start_sequence()
/obj/machinery/computer/rust_core_control
/obj/machinery/computer/rust_core_control/Topic(href, href_list)
/obj/machinery/computer/rust_core_control/attack_ai(mob/user)
/obj/machinery/computer/rust_core_control/attack_hand(mob/user)
/obj/machinery/computer/rust_core_control/check_core_status(var/obj/machinery/power/rust_core/C)
/obj/machinery/computer/rust_core_control/interact(mob/user)
/obj/machinery/computer/rust_core_control/process()
/obj/machinery/computer/rust_fuel_control
/obj/machinery/computer/rust_fuel_control/Topic(href, href_list)
/obj/machinery/computer/rust_fuel_control/attack_ai(mob/user)
/obj/machinery/computer/rust_fuel_control/attack_hand(mob/user)
/obj/machinery/computer/rust_fuel_control/check_injector_status(var/obj/machinery/power/rust_fuel_injector/I)
/obj/machinery/computer/rust_fuel_control/interact(mob/user)
/obj/machinery/computer/rust_gyrotron_controller
/obj/machinery/computer/rust_gyrotron_controller/New()
/obj/machinery/computer/rust_gyrotron_controller/Topic(href, href_list)
/obj/machinery/computer/rust_gyrotron_controller/interact(mob/user)
/obj/machinery/computer/rust_gyrotron_controller/process()
/obj/machinery/computer/rust_radiation_monitor
/obj/machinery/computer/salvage_ship
/obj/machinery/computer/salvage_ship/New()
/obj/machinery/computer/salvage_ship/Topic(href, href_list)
/obj/machinery/computer/salvage_ship/attack_ai(mob/user as mob)
/obj/machinery/computer/salvage_ship/attack_hand(mob/user as mob)
/obj/machinery/computer/salvage_ship/attack_paw(mob/user as mob)
/obj/machinery/computer/salvage_ship/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/computer/salvage_ship/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/computer/salvage_ship/salvage_move_to(area/destination as area)
/obj/machinery/computer/scan_consolenew
/obj/machinery/computer/scan_consolenew/New()
/obj/machinery/computer/scan_consolenew/Topic(href, href_list)
/obj/machinery/computer/scan_consolenew/all_dna_blocks(var/list/buffer)
/obj/machinery/computer/scan_consolenew/attack_ai(user as mob)
/obj/machinery/computer/scan_consolenew/attack_hand(user as mob)
/obj/machinery/computer/scan_consolenew/attack_paw(user as mob)
/obj/machinery/computer/scan_consolenew/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/computer/scan_consolenew/blob_act()
/obj/machinery/computer/scan_consolenew/ex_act(severity)
/obj/machinery/computer/scan_consolenew/power_change()
/obj/machinery/computer/scan_consolenew/setInjectorBlock(var/obj/item/weapon/dnainjector/I, var/blk, var/datum/dna2/record/buffer)
/obj/machinery/computer/scan_consolenew/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/computer/secure_data
/obj/machinery/computer/secure_data/Topic(href, href_list)
/obj/machinery/computer/secure_data/attack_ai(mob/user as mob)
/obj/machinery/computer/secure_data/attack_hand(mob/user as mob)
/obj/machinery/computer/secure_data/attack_paw(mob/user as mob)
/obj/machinery/computer/secure_data/attackby(obj/item/O as obj, user as mob)
/obj/machinery/computer/secure_data/detective_computer
/obj/machinery/computer/secure_data/emp_act(severity)
/obj/machinery/computer/security
/obj/machinery/computer/security/attack_ai(var/mob/user as mob)
/obj/machinery/computer/security/attack_hand(var/mob/user as mob)
/obj/machinery/computer/security/attack_paw(var/mob/user as mob)
/obj/machinery/computer/security/attackby(I as obj, user as mob)
/obj/machinery/computer/security/can_access_camera(var/obj/machinery/camera/C)
/obj/machinery/computer/security/check_eye(var/mob/user as mob)
/obj/machinery/computer/security/close(mob/user)
/obj/machinery/computer/security/drawmap(var/mob/user as mob)
/obj/machinery/computer/security/engineering
/obj/machinery/computer/security/jump_on_click(var/mob/user,var/A)
/obj/machinery/computer/security/mining
/obj/machinery/computer/security/switch_to_camera(var/mob/user, var/obj/machinery/camera/C)
/obj/machinery/computer/security/telescreen
/obj/machinery/computer/security/telescreen/entertainment
/obj/machinery/computer/security/telescreen/update_icon()
/obj/machinery/computer/security/verb/station_map()
/obj/machinery/computer/security/wooden_tv
/obj/machinery/computer/set_broken()
/obj/machinery/computer/shuttle
/obj/machinery/computer/shuttle/attackby(var/obj/item/weapon/card/W as obj, var/mob/user as mob)
/obj/machinery/computer/skills
/obj/machinery/computer/skills/Topic(href, href_list)
/obj/machinery/computer/skills/attack_ai(mob/user as mob)
/obj/machinery/computer/skills/attack_hand(mob/user as mob)
/obj/machinery/computer/skills/attack_paw(mob/user as mob)
/obj/machinery/computer/skills/attackby(obj/item/O as obj, user as mob)
/obj/machinery/computer/skills/emp_act(severity)
/obj/machinery/computer/specops_shuttle
/obj/machinery/computer/specops_shuttle/Topic(href, href_list)
/obj/machinery/computer/specops_shuttle/attack_ai(var/mob/user as mob)
/obj/machinery/computer/specops_shuttle/attack_hand(var/mob/user as mob)
/obj/machinery/computer/specops_shuttle/attack_paw(var/mob/user as mob)
/obj/machinery/computer/specops_shuttle/attackby(I as obj, user as mob)
/obj/machinery/computer/station_alert
/obj/machinery/computer/station_alert/Topic(href, href_list)
/obj/machinery/computer/station_alert/attack_ai(mob/user)
/obj/machinery/computer/station_alert/attack_hand(mob/user)
/obj/machinery/computer/station_alert/cancelAlarm(var/class, area/A as area, obj/origin)
/obj/machinery/computer/station_alert/interact(mob/user)
/obj/machinery/computer/station_alert/process()
/obj/machinery/computer/station_alert/triggerAlarm(var/class, area/A, var/O, var/alarmsource)
/obj/machinery/computer/supplycomp
/obj/machinery/computer/supplycomp/Topic(href, href_list)
/obj/machinery/computer/supplycomp/attack_ai(var/mob/user as mob)
/obj/machinery/computer/supplycomp/attack_hand(var/mob/user as mob)
/obj/machinery/computer/supplycomp/attack_paw(var/mob/user as mob)
/obj/machinery/computer/supplycomp/attackby(I as obj, user as mob)
/obj/machinery/computer/supplycomp/post_signal(var/command)
/obj/machinery/computer/syndicate_elite_shuttle
/obj/machinery/computer/syndicate_elite_shuttle/Topic(href, href_list)
/obj/machinery/computer/syndicate_elite_shuttle/attack_ai(var/mob/user as mob)
/obj/machinery/computer/syndicate_elite_shuttle/attack_hand(var/mob/user as mob)
/obj/machinery/computer/syndicate_elite_shuttle/attack_paw(var/mob/user as mob)
/obj/machinery/computer/syndicate_elite_shuttle/attackby(I as obj, user as mob)
/obj/machinery/computer/syndicate_station
/obj/machinery/computer/syndicate_station/New()
/obj/machinery/computer/syndicate_station/Topic(href, href_list)
/obj/machinery/computer/syndicate_station/attack_ai(mob/user as mob)
/obj/machinery/computer/syndicate_station/attack_hand(mob/user as mob)
/obj/machinery/computer/syndicate_station/attack_paw(mob/user as mob)
/obj/machinery/computer/syndicate_station/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/computer/syndicate_station/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/computer/syndicate_station/syndicate_move_to(area/destination as area)
/obj/machinery/computer/telecomms/monitor
/obj/machinery/computer/telecomms/monitor/Topic(href, href_list)
/obj/machinery/computer/telecomms/monitor/attack_hand(mob/user as mob)
/obj/machinery/computer/telecomms/monitor/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob)
/obj/machinery/computer/telecomms/server
/obj/machinery/computer/telecomms/server/Topic(href, href_list)
/obj/machinery/computer/telecomms/server/attack_hand(mob/user as mob)
/obj/machinery/computer/telecomms/server/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob)
/obj/machinery/computer/telecomms/traffic
/obj/machinery/computer/telecomms/traffic/Topic(href, href_list)
/obj/machinery/computer/telecomms/traffic/attack_hand(mob/user as mob)
/obj/machinery/computer/telecomms/traffic/attackby(var/obj/item/weapon/D as obj, var/mob/user as mob)
/obj/machinery/computer/telecomms/traffic/canAccess(var/mob/user)
/obj/machinery/computer/telecomms/traffic/proc/update_ide()
/obj/machinery/computer/telecomms/traffic/update_ide()
/obj/machinery/computer/teleporter
/obj/machinery/computer/teleporter/New()
/obj/machinery/computer/teleporter/attack_hand()
/obj/machinery/computer/teleporter/attack_paw()
/obj/machinery/computer/teleporter/attackby(I as obj, mob/living/user as mob)
/obj/machinery/computer/teleporter/verb/set_id(t as text)
/obj/machinery/computer/telescience
/obj/machinery/computer/telescience/Topic(href, href_list)
/obj/machinery/computer/telescience/attack_hand(mob/user)
/obj/machinery/computer/telescience/attack_paw(mob/user)
/obj/machinery/computer/telescience/checkFail()
/obj/machinery/computer/telescience/tele(var/type)
/obj/machinery/computer/telescience/telefail(var/level)
/obj/machinery/computer/telescience/teleprep(var/type)
/obj/machinery/computer/telescience/update_icon()
/obj/machinery/computer/turbine_computer
/obj/machinery/computer/turbine_computer/New()
/obj/machinery/computer/turbine_computer/Topic(href, href_list)
/obj/machinery/computer/turbine_computer/attack_hand(var/mob/user as mob)
/obj/machinery/computer/turbine_computer/process()
/obj/machinery/computer/update_icon()
/obj/machinery/computer/vox_station
/obj/machinery/computer/vox_station/New()
/obj/machinery/computer/vox_station/Topic(href, href_list)
/obj/machinery/computer/vox_station/attack_ai(mob/user as mob)
/obj/machinery/computer/vox_station/attack_hand(mob/user as mob)
/obj/machinery/computer/vox_station/attack_paw(mob/user as mob)
/obj/machinery/computer/vox_station/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/computer/vox_station/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/computer/vox_station/vox_move_to(area/destination as area)
/obj/machinery/computer/vox_stealth
/obj/machinery/computer/vox_stealth/attack_ai(mob/user as mob)
/obj/machinery/computer/vox_stealth/attack_hand(mob/user as mob)
/obj/machinery/computer/vox_stealth/attack_paw(mob/user as mob)
/obj/machinery/computer/vox_stealth/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/computer/xenos_station
/obj/machinery/computer/xenos_station/New()
/obj/machinery/computer/xenos_station/Topic(href, href_list)
/obj/machinery/computer/xenos_station/attack_ai(mob/user as mob)
/obj/machinery/computer/xenos_station/attack_hand(mob/user as mob)
/obj/machinery/computer/xenos_station/attack_paw(mob/user as mob)
/obj/machinery/computer/xenos_station/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/computer/xenos_station/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/computer/xenos_station/xenos_move_to(area/destination as area)
/obj/machinery/computer3
/obj/machinery/computer3/Crash(var/errorcode = 1)
/obj/machinery/computer3/HolodeckControl
/obj/machinery/computer3/New(var/L, var/built = 0)
/obj/machinery/computer3/Reset(var/error = 0)
/obj/machinery/computer3/aifixer
/obj/machinery/computer3/arcade
/obj/machinery/computer3/atmos_alert
/obj/machinery/computer3/attack_ai(var/mob/user as mob)
/obj/machinery/computer3/attack_hand(var/mob/user as mob)
/obj/machinery/computer3/attackby(I as obj, mob/user as mob)
/obj/machinery/computer3/auto_use_power()
/obj/machinery/computer3/blob_act()
/obj/machinery/computer3/card
/obj/machinery/computer3/card/centcom
/obj/machinery/computer3/card/hop
/obj/machinery/computer3/check_eye(var/mob/user as mob)
/obj/machinery/computer3/communications
/obj/machinery/computer3/communications/captain
/obj/machinery/computer3/crew
/obj/machinery/computer3/customs
/obj/machinery/computer3/disassemble(mob/user as mob)
/obj/machinery/computer3/emp_act(severity)
/obj/machinery/computer3/ex_act(severity)
/obj/machinery/computer3/format_atomlist(var/list/atoms)
/obj/machinery/computer3/interact()
/obj/machinery/computer3/interactable(var/mob/user)
/obj/machinery/computer3/laptop
/obj/machinery/computer3/laptop/AltClick()
/obj/machinery/computer3/laptop/Destroy()
/obj/machinery/computer3/laptop/New(var/L, var/built = 0)
/obj/machinery/computer3/laptop/auto_use_power()
/obj/machinery/computer3/laptop/power_change()
/obj/machinery/computer3/laptop/testing
/obj/machinery/computer3/laptop/testing/New(var/L,var/built=0)
/obj/machinery/computer3/laptop/use_power(var/amount, var/chan = -1)
/obj/machinery/computer3/laptop/verb/close_computer()
/obj/machinery/computer3/list_files(var/typekey = null)
/obj/machinery/computer3/meteorhit(var/obj/O as obj)
/obj/machinery/computer3/operating
/obj/machinery/computer3/power_change()
/obj/machinery/computer3/powermonitor
/obj/machinery/computer3/process()
/obj/machinery/computer3/robotics
/obj/machinery/computer3/security
/obj/machinery/computer3/security/mining
/obj/machinery/computer3/security/wooden_tv
/obj/machinery/computer3/security/wooden_tv/New()
/obj/machinery/computer3/server
/obj/machinery/computer3/server/rack
/obj/machinery/computer3/server/rack/attack_hand()
/obj/machinery/computer3/server/rack/testing
/obj/machinery/computer3/server/rack/testing/New(var/L,var/built=0)
/obj/machinery/computer3/server/rack/update_icon()
/obj/machinery/computer3/server/testing
/obj/machinery/computer3/server/testing/New(var/L,var/built=0)
/obj/machinery/computer3/set_broken()
/obj/machinery/computer3/spawn_parts()
/obj/machinery/computer3/testing
/obj/machinery/computer3/testing/New(var/L,var/built=0)
/obj/machinery/computer3/update_icon()
/obj/machinery/computer3/use_power(var/amount, var/chan = -1)
/obj/machinery/computer3/verb/ResetComputer()
/obj/machinery/computer3/wall_comp
/obj/machinery/computer3/wall_comp/telescreen
/obj/machinery/computer3/wall_comp/telescreen/entertainment
/obj/machinery/computer3/wall_comp/testing
/obj/machinery/computer3/wall_comp/testing/New(var/L,var/built=0)
/obj/machinery/computer3/writefile(var/datum/file/F, var/where = 0, var/required_location = 0)
/obj/machinery/constructable_frame
/obj/machinery/constructable_frame/machine_frame
/obj/machinery/constructable_frame/machine_frame/attackby(obj/item/P as obj, mob/user as mob)
/obj/machinery/constructable_frame/machine_frame/find_square()
/obj/machinery/constructable_frame/update_desc()
/obj/machinery/containment_field
/obj/machinery/containment_field/Destroy()
/obj/machinery/containment_field/HasProximity(atom/movable/AM as mob|obj)
/obj/machinery/containment_field/attack_hand(mob/user as mob)
/obj/machinery/containment_field/blob_act()
/obj/machinery/containment_field/ex_act(severity)
/obj/machinery/containment_field/meteorhit()
/obj/machinery/containment_field/set_master(var/master1,var/master2)
/obj/machinery/containment_field/shock(mob/living/user as mob)
/obj/machinery/conveyor
/obj/machinery/conveyor/New(loc, newdir)
/obj/machinery/conveyor/attack_hand(mob/user as mob)
/obj/machinery/conveyor/attackby(var/obj/item/I, mob/user)
/obj/machinery/conveyor/auto/New(loc, newdir)
/obj/machinery/conveyor/auto/update()
/obj/machinery/conveyor/broken()
/obj/machinery/conveyor/centcom_auto
/obj/machinery/conveyor/power_change()
/obj/machinery/conveyor/process()
/obj/machinery/conveyor/set_operable(stepdir, match_id, op)
/obj/machinery/conveyor/setmove()
/obj/machinery/conveyor/update()
/obj/machinery/conveyor_switch
/obj/machinery/conveyor_switch/New()
/obj/machinery/conveyor_switch/attack_hand(mob/user)
/obj/machinery/conveyor_switch/oneway
/obj/machinery/conveyor_switch/oneway/attack_hand(mob/user)
/obj/machinery/conveyor_switch/process()
/obj/machinery/conveyor_switch/update()
/obj/machinery/cooking
/obj/machinery/cooking/New()
/obj/machinery/cooking/attackby(obj/item/I, mob/user)
/obj/machinery/cooking/candy
/obj/machinery/cooking/candy/updatefood()
/obj/machinery/cooking/oven
/obj/machinery/cooking/oven/updatefood()
/obj/machinery/cooking/updatefood()
/obj/machinery/crema_switch
/obj/machinery/crema_switch/attack_hand(mob/user as mob)
/obj/machinery/cryopod
/obj/machinery/cryopod/New()
/obj/machinery/cryopod/attackby(var/obj/item/weapon/G as obj, var/mob/user as mob)
/obj/machinery/cryopod/blob_act()
/obj/machinery/cryopod/go_out()
/obj/machinery/cryopod/process()
/obj/machinery/cryopod/right
/obj/machinery/cryopod/verb/eject()
/obj/machinery/cryopod/verb/move_inside()
/obj/machinery/crystal
/obj/machinery/crystal/New()
/obj/machinery/deepfryer
/obj/machinery/deepfryer/attack_hand(mob/user)
/obj/machinery/deepfryer/attackby(obj/item/I, mob/user)
/obj/machinery/deepfryer/examine()
/obj/machinery/default_deconstruction_crowbar()
/obj/machinery/default_deconstruction_screwdriver(var/mob/user, var/icon_state_open, var/icon_state_closed)
/obj/machinery/deployable
/obj/machinery/deployable/barrier
/obj/machinery/deployable/barrier/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/deployable/barrier/New()
/obj/machinery/deployable/barrier/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/deployable/barrier/blob_act()
/obj/machinery/deployable/barrier/emp_act(severity)
/obj/machinery/deployable/barrier/ex_act(severity)
/obj/machinery/deployable/barrier/explode()
/obj/machinery/deployable/barrier/meteorhit()
/obj/machinery/disease2/diseaseanalyser
/obj/machinery/disease2/diseaseanalyser/attackby(var/obj/O as obj, var/mob/user as mob)
/obj/machinery/disease2/diseaseanalyser/process()
/obj/machinery/disease2/incubator/
/obj/machinery/disease2/incubator/Topic(href, href_list)
/obj/machinery/disease2/incubator/attack_hand(mob/user as mob)
/obj/machinery/disease2/incubator/attackby(var/obj/O as obj, var/mob/user as mob)
/obj/machinery/disease2/incubator/process()
/obj/machinery/disease2/incubator/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/disease2/isolator/
/obj/machinery/disease2/isolator/Topic(href, href_list)
/obj/machinery/disease2/isolator/attack_hand(mob/user as mob)
/obj/machinery/disease2/isolator/attackby(var/obj/O as obj, var/mob/user)
/obj/machinery/disease2/isolator/print(var/mob/user)
/obj/machinery/disease2/isolator/process()
/obj/machinery/disease2/isolator/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/disease2/isolator/update_icon()
/obj/machinery/disposal
/obj/machinery/disposal/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/disposal/MouseDrop_T(mob/target, mob/user)
/obj/machinery/disposal/New()
/obj/machinery/disposal/Topic(href, href_list)
/obj/machinery/disposal/alter_health()
/obj/machinery/disposal/attack_ai(mob/user as mob)
/obj/machinery/disposal/attack_hand(mob/user as mob)
/obj/machinery/disposal/attack_paw(mob/user as mob)
/obj/machinery/disposal/attackby(var/obj/item/I, var/mob/user)
/obj/machinery/disposal/deliveryChute
/obj/machinery/disposal/deliveryChute/Bumped(var/atom/movable/AM)
/obj/machinery/disposal/deliveryChute/New()
/obj/machinery/disposal/deliveryChute/attackby(var/obj/item/I, var/mob/user)
/obj/machinery/disposal/deliveryChute/flush()
/obj/machinery/disposal/deliveryChute/interact()
/obj/machinery/disposal/deliveryChute/update()
/obj/machinery/disposal/eject()
/obj/machinery/disposal/expel(var/obj/structure/disposalholder/H)
/obj/machinery/disposal/flush()
/obj/machinery/disposal/go_out(mob/user)
/obj/machinery/disposal/interact(mob/user, var/ai=0)
/obj/machinery/disposal/power_change()
/obj/machinery/disposal/process()
/obj/machinery/disposal/relaymove(mob/user as mob)
/obj/machinery/disposal/update()
/obj/machinery/dna_scannernew
/obj/machinery/dna_scannernew/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/machinery/dna_scannernew/New()
/obj/machinery/dna_scannernew/allow_drop()
/obj/machinery/dna_scannernew/attackby(var/obj/item/weapon/item as obj, var/mob/user as mob)
/obj/machinery/dna_scannernew/blob_act()
/obj/machinery/dna_scannernew/eject_occupant()
/obj/machinery/dna_scannernew/ex_act(severity)
/obj/machinery/dna_scannernew/go_out()
/obj/machinery/dna_scannernew/put_in(var/mob/M)
/obj/machinery/dna_scannernew/relaymove(mob/user as mob)
/obj/machinery/dna_scannernew/verb/eject()
/obj/machinery/dna_scannernew/verb/move_inside()
/obj/machinery/door
/obj/machinery/door/Adjacent(var/atom/neighbor)
/obj/machinery/door/Bumped(atom/AM)
/obj/machinery/door/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/door/Destroy()
/obj/machinery/door/Move(new_loc, new_dir)
/obj/machinery/door/New()
/obj/machinery/door/airlock
/obj/machinery/door/airlock/AIAltClick()
/obj/machinery/door/airlock/AICtrlClick()
/obj/machinery/door/airlock/AIShiftClick()
/obj/machinery/door/airlock/Bumped(atom/AM)
/obj/machinery/door/airlock/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/door/airlock/New()
/obj/machinery/door/airlock/Topic(href, href_list, var/nowindow = 0)
/obj/machinery/door/airlock/alarmlock
/obj/machinery/door/airlock/alarmlock/New()
/obj/machinery/door/airlock/alarmlock/initialize()
/obj/machinery/door/airlock/alarmlock/receive_signal(datum/signal/signal)
/obj/machinery/door/airlock/allowed(mob/M)
/obj/machinery/door/airlock/arePowerSystemsOn()
/obj/machinery/door/airlock/atmos
/obj/machinery/door/airlock/attack_ai(mob/user as mob)
/obj/machinery/door/airlock/attack_hand(mob/user as mob)
/obj/machinery/door/airlock/attack_paw(mob/user as mob)
/obj/machinery/door/airlock/attackby(C as obj, mob/user as mob)
/obj/machinery/door/airlock/bumpopen(mob/living/simple_animal/user as mob)
/obj/machinery/door/airlock/bumpopen(mob/living/user as mob)
/obj/machinery/door/airlock/canAIControl()
/obj/machinery/door/airlock/canAIHack()
/obj/machinery/door/airlock/centcom
/obj/machinery/door/airlock/close(surpress_send)
/obj/machinery/door/airlock/close(var/forced=0)
/obj/machinery/door/airlock/clown
/obj/machinery/door/airlock/command
/obj/machinery/door/airlock/diamond
/obj/machinery/door/airlock/door_animate(animation)
/obj/machinery/door/airlock/engineering
/obj/machinery/door/airlock/external
/obj/machinery/door/airlock/freezer
/obj/machinery/door/airlock/glass
/obj/machinery/door/airlock/glass_atmos
/obj/machinery/door/airlock/glass_command
/obj/machinery/door/airlock/glass_engineering
/obj/machinery/door/airlock/glass_medical
/obj/machinery/door/airlock/glass_mining
/obj/machinery/door/airlock/glass_research
/obj/machinery/door/airlock/glass_science
/obj/machinery/door/airlock/glass_security
/obj/machinery/door/airlock/gold
/obj/machinery/door/airlock/hack(mob/user as mob)
/obj/machinery/door/airlock/hatch
/obj/machinery/door/airlock/hatch/gamma
/obj/machinery/door/airlock/hatch/gamma/attackby(C as obj, mob/user as mob)
/obj/machinery/door/airlock/highsecurity
/obj/machinery/door/airlock/highsecurity/red
/obj/machinery/door/airlock/highsecurity/red/attackby(C as obj, mob/user as mob)
/obj/machinery/door/airlock/initialize()
/obj/machinery/door/airlock/isAllPowerCut()
/obj/machinery/door/airlock/isElectrified()
/obj/machinery/door/airlock/isWireCut(var/wireIndex)
/obj/machinery/door/airlock/loseBackupPower()
/obj/machinery/door/airlock/loseMainPower()
/obj/machinery/door/airlock/maintenance
/obj/machinery/door/airlock/maintenance_hatch
/obj/machinery/door/airlock/medical
/obj/machinery/door/airlock/mining
/obj/machinery/door/airlock/multi_tile
/obj/machinery/door/airlock/multi_tile/glass
/obj/machinery/door/airlock/open(surpress_send)
/obj/machinery/door/airlock/open(var/forced=0)
/obj/machinery/door/airlock/plasma
/obj/machinery/door/airlock/plasma/PlasmaBurn(temperature)
/obj/machinery/door/airlock/plasma/attackby(C as obj, mob/user as mob)
/obj/machinery/door/airlock/plasma/ignite(exposed_temperature)
/obj/machinery/door/airlock/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/machinery/door/airlock/prison_open()
/obj/machinery/door/airlock/receive_signal(datum/signal/signal)
/obj/machinery/door/airlock/regainBackupPower()
/obj/machinery/door/airlock/regainMainPower()
/obj/machinery/door/airlock/requiresID()
/obj/machinery/door/airlock/research
/obj/machinery/door/airlock/sandstone
/obj/machinery/door/airlock/science
/obj/machinery/door/airlock/security
/obj/machinery/door/airlock/send_status()
/obj/machinery/door/airlock/set_frequency(new_frequency)
/obj/machinery/door/airlock/shock(mob/user, prb)
/obj/machinery/door/airlock/silver
/obj/machinery/door/airlock/update_icon()
/obj/machinery/door/airlock/uranium
/obj/machinery/door/airlock/uranium/process()
/obj/machinery/door/airlock/uranium/radiate()
/obj/machinery/door/airlock/vault
/obj/machinery/door/attack_ai(mob/user as mob)
/obj/machinery/door/attack_hand(mob/user as mob)
/obj/machinery/door/attack_paw(mob/user as mob)
/obj/machinery/door/attack_tk(mob/user as mob)
/obj/machinery/door/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/door/autoclose()
/obj/machinery/door/blob_act()
/obj/machinery/door/bumpopen(mob/user as mob)
/obj/machinery/door/checkForMultipleDoors()
/obj/machinery/door/close()
/obj/machinery/door/door_animate(animation)
/obj/machinery/door/emp_act(severity)
/obj/machinery/door/ex_act(severity)
/obj/machinery/door/firedoor
/obj/machinery/door/firedoor/Bumped(atom/AM)
/obj/machinery/door/firedoor/Destroy()
/obj/machinery/door/firedoor/New()
/obj/machinery/door/firedoor/attack_hand(mob/user as mob)
/obj/machinery/door/firedoor/attackby(obj/item/weapon/C as obj, mob/user as mob)
/obj/machinery/door/firedoor/border_only
/obj/machinery/door/firedoor/close()
/obj/machinery/door/firedoor/door_animate(animation)
/obj/machinery/door/firedoor/examine()
/obj/machinery/door/firedoor/latetoggle()
/obj/machinery/door/firedoor/multi_tile
/obj/machinery/door/firedoor/multi_tile/triple
/obj/machinery/door/firedoor/open()
/obj/machinery/door/firedoor/power_change()
/obj/machinery/door/firedoor/update_icon()
/obj/machinery/door/liquid_pass()
/obj/machinery/door/meteorhit(obj/M as obj)
/obj/machinery/door/morgue
/obj/machinery/door/open()
/obj/machinery/door/poddoor
/obj/machinery/door/poddoor/Bumped(atom/AM)
/obj/machinery/door/poddoor/attackby(obj/item/weapon/C as obj, mob/user as mob)
/obj/machinery/door/poddoor/close()
/obj/machinery/door/poddoor/filler_object
/obj/machinery/door/poddoor/four_tile_hor
/obj/machinery/door/poddoor/four_tile_hor/Destroy()
/obj/machinery/door/poddoor/four_tile_hor/New()
/obj/machinery/door/poddoor/four_tile_hor/close()
/obj/machinery/door/poddoor/four_tile_hor/open()
/obj/machinery/door/poddoor/four_tile_ver
/obj/machinery/door/poddoor/four_tile_ver/
/obj/machinery/door/poddoor/four_tile_ver/Destroy()
/obj/machinery/door/poddoor/four_tile_ver/New()
/obj/machinery/door/poddoor/four_tile_ver/close()
/obj/machinery/door/poddoor/four_tile_ver/open()
/obj/machinery/door/poddoor/open()
/obj/machinery/door/poddoor/preopen
/obj/machinery/door/poddoor/shutters
/obj/machinery/door/poddoor/shutters/New()
/obj/machinery/door/poddoor/shutters/attackby(obj/item/weapon/C as obj, mob/user as mob)
/obj/machinery/door/poddoor/shutters/close()
/obj/machinery/door/poddoor/shutters/open()
/obj/machinery/door/requiresID()
/obj/machinery/door/unpowered
/obj/machinery/door/unpowered/Bumped(atom/AM)
/obj/machinery/door/unpowered/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/door/unpowered/shuttle
/obj/machinery/door/update_heat_protection(var/turf/simulated/source)
/obj/machinery/door/update_icon()
/obj/machinery/door/update_nearby_tiles(need_rebuild)
/obj/machinery/door/window
/obj/machinery/door/window/Bumped(atom/movable/AM as mob|obj)
/obj/machinery/door/window/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/door/window/CheckExit(atom/movable/mover as mob|obj, turf/target as turf)
/obj/machinery/door/window/Destroy()
/obj/machinery/door/window/New()
/obj/machinery/door/window/attack_ai(mob/user as mob)
/obj/machinery/door/window/attack_animal(mob/user as mob)
/obj/machinery/door/window/attack_ghost(mob/user as mob)
/obj/machinery/door/window/attack_hand(mob/user as mob)
/obj/machinery/door/window/attack_paw(mob/user as mob)
/obj/machinery/door/window/attackby(obj/item/weapon/I as obj, mob/user as mob)
/obj/machinery/door/window/brigdoor
/obj/machinery/door/window/brigdoor/eastleft
/obj/machinery/door/window/brigdoor/eastright
/obj/machinery/door/window/brigdoor/northleft
/obj/machinery/door/window/brigdoor/northright
/obj/machinery/door/window/brigdoor/southleft
/obj/machinery/door/window/brigdoor/southright
/obj/machinery/door/window/brigdoor/westleft
/obj/machinery/door/window/brigdoor/westright
/obj/machinery/door/window/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/door/window/close()
/obj/machinery/door/window/eastleft
/obj/machinery/door/window/eastright
/obj/machinery/door/window/hitby(AM as mob|obj)
/obj/machinery/door/window/northleft
/obj/machinery/door/window/northright
/obj/machinery/door/window/open()
/obj/machinery/door/window/southleft
/obj/machinery/door/window/southright
/obj/machinery/door/window/take_damage(var/damage)
/obj/machinery/door/window/update_nearby_tiles(need_rebuild)
/obj/machinery/door/window/westleft
/obj/machinery/door/window/westright
/obj/machinery/door_control
/obj/machinery/door_control/attack_ai(mob/user as mob)
/obj/machinery/door_control/attack_hand(mob/user as mob)
/obj/machinery/door_control/attack_paw(mob/user as mob)
/obj/machinery/door_control/attackby(obj/item/weapon/W, mob/user as mob)
/obj/machinery/door_control/power_change()
/obj/machinery/door_timer
/obj/machinery/door_timer/New()
/obj/machinery/door_timer/Topic(href, href_list)
/obj/machinery/door_timer/attack_ai(var/mob/user as mob)
/obj/machinery/door_timer/attack_hand(var/mob/user as mob)
/obj/machinery/door_timer/cell_1
/obj/machinery/door_timer/cell_2
/obj/machinery/door_timer/cell_3
/obj/machinery/door_timer/cell_4
/obj/machinery/door_timer/cell_5
/obj/machinery/door_timer/cell_6
/obj/machinery/door_timer/power_change()
/obj/machinery/door_timer/process()
/obj/machinery/door_timer/set_picture(var/state)
/obj/machinery/door_timer/texticon(var/tn, var/px = 0, var/py = 0)
/obj/machinery/door_timer/timeleft()
/obj/machinery/door_timer/timer_end()
/obj/machinery/door_timer/timer_start()
/obj/machinery/door_timer/timeset(var/seconds)
/obj/machinery/door_timer/update_display(var/line1, var/line2)
/obj/machinery/door_timer/update_icon()
/obj/machinery/doppler_array
/obj/machinery/doppler_array/Destroy()
/obj/machinery/doppler_array/New()
/obj/machinery/doppler_array/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/doppler_array/power_change()
/obj/machinery/doppler_array/process()
/obj/machinery/doppler_array/sense_explosion(var/x0,var/y0,var/z0,var/devastation_range,var/heavy_impact_range,var/light_impact_range,var/took)
/obj/machinery/doppler_array/verb/rotate()
/obj/machinery/driver_button
/obj/machinery/driver_button/attack_ai(mob/user as mob)
/obj/machinery/driver_button/attack_hand(mob/user as mob)
/obj/machinery/driver_button/attack_paw(mob/user as mob)
/obj/machinery/driver_button/attackby(obj/item/weapon/W, mob/user as mob)
/obj/machinery/drone_fabricator
/obj/machinery/drone_fabricator/New()
/obj/machinery/drone_fabricator/count_drones()
/obj/machinery/drone_fabricator/create_drone(var/client/player)
/obj/machinery/drone_fabricator/examine()
/obj/machinery/drone_fabricator/power_change()
/obj/machinery/drone_fabricator/process()
/obj/machinery/drying_rack
/obj/machinery/drying_rack/New()
/obj/machinery/drying_rack/attackby(var/obj/item/W as obj, var/mob/user as mob)
/obj/machinery/embedded_controller
/obj/machinery/embedded_controller/Topic(href, href_list)
/obj/machinery/embedded_controller/attack_hand(mob/user)
/obj/machinery/embedded_controller/post_signal(datum/signal/signal, comm_line)
/obj/machinery/embedded_controller/process()
/obj/machinery/embedded_controller/radio
/obj/machinery/embedded_controller/radio/access_controller
/obj/machinery/embedded_controller/radio/access_controller/initialize()
/obj/machinery/embedded_controller/radio/access_controller/return_text()
/obj/machinery/embedded_controller/radio/access_controller/update_icon()
/obj/machinery/embedded_controller/radio/airlock_controller
/obj/machinery/embedded_controller/radio/airlock_controller/initialize()
/obj/machinery/embedded_controller/radio/airlock_controller/return_text()
/obj/machinery/embedded_controller/radio/airlock_controller/update_icon()
/obj/machinery/embedded_controller/radio/initialize()
/obj/machinery/embedded_controller/radio/post_signal(datum/signal/signal)
/obj/machinery/embedded_controller/radio/set_frequency(new_frequency)
/obj/machinery/embedded_controller/radio/simple_vent_controller
/obj/machinery/embedded_controller/radio/simple_vent_controller/initialize()
/obj/machinery/embedded_controller/radio/simple_vent_controller/return_text()
/obj/machinery/embedded_controller/radio/simple_vent_controller/update_icon()
/obj/machinery/embedded_controller/radio/smart_airlock_controller
/obj/machinery/embedded_controller/radio/smart_airlock_controller/initialize()
/obj/machinery/embedded_controller/radio/smart_airlock_controller/return_text()
/obj/machinery/embedded_controller/radio/smart_airlock_controller/update_icon()
/obj/machinery/embedded_controller/receive_signal(datum/signal/signal, receive_method, receive_param)
/obj/machinery/embedded_controller/return_text()
/obj/machinery/embedded_controller/update_icon()
/obj/machinery/emergency_authentication_device
/obj/machinery/emergency_authentication_device/New(loc, mode)
/obj/machinery/emergency_authentication_device/attack_hand(mob/user)
/obj/machinery/emergency_authentication_device/attackby(obj/item/weapon/O, mob/user)
/obj/machinery/emergency_authentication_device/check_key_existence()
/obj/machinery/emergency_authentication_device/examine()
/obj/machinery/emergency_authentication_device/get_status()
/obj/machinery/emp_act(severity)
/obj/machinery/ex_act(severity)
/obj/machinery/faxmachine
/obj/machinery/faxmachine/New()
/obj/machinery/faxmachine/Topic(href, href_list)
/obj/machinery/faxmachine/attack_ai(mob/user as mob)
/obj/machinery/faxmachine/attack_hand(mob/user as mob)
/obj/machinery/faxmachine/attack_paw(mob/user as mob)
/obj/machinery/faxmachine/attackby(obj/item/O as obj, mob/user as mob)
/obj/machinery/faxmachine/process()
/obj/machinery/fermenter
/obj/machinery/fermenter/attack_hand(var/mob/user as mob)
/obj/machinery/fermenter/attackby(var/obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/fermenter/process()
/obj/machinery/field_generator
/obj/machinery/field_generator/Destroy()
/obj/machinery/field_generator/New()
/obj/machinery/field_generator/attack_hand(mob/user as mob)
/obj/machinery/field_generator/attackby(obj/item/W, mob/user)
/obj/machinery/field_generator/blob_act()
/obj/machinery/field_generator/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/field_generator/calc_power()
/obj/machinery/field_generator/cleanup()
/obj/machinery/field_generator/draw_power(var/draw = 0, var/failsafe = 0, var/obj/machinery/field_generator/G = null, var/obj/machinery/field_generator/last = null)
/obj/machinery/field_generator/emp_act()
/obj/machinery/field_generator/process()
/obj/machinery/field_generator/setup_field(var/NSEW)
/obj/machinery/field_generator/start_fields()
/obj/machinery/field_generator/turn_off()
/obj/machinery/field_generator/turn_on()
/obj/machinery/field_generator/update_icon()
/obj/machinery/firealarm
/obj/machinery/firealarm/New()
/obj/machinery/firealarm/New(loc, dir, building)
/obj/machinery/firealarm/Topic(href, href_list)
/obj/machinery/firealarm/alarm()
/obj/machinery/firealarm/attack_ai(mob/user as mob)
/obj/machinery/firealarm/attack_hand(mob/user as mob)
/obj/machinery/firealarm/attack_paw(mob/user as mob)
/obj/machinery/firealarm/attackby(obj/item/W as obj, mob/user as mob)
/obj/machinery/firealarm/bullet_act(BLAH)
/obj/machinery/firealarm/emp_act(severity)
/obj/machinery/firealarm/power_change()
/obj/machinery/firealarm/process()
/obj/machinery/firealarm/reset()
/obj/machinery/firealarm/temperature_expose(datum/gas_mixture/air, temperature, volume)
/obj/machinery/firealarm/update_icon()
/obj/machinery/flasher
/obj/machinery/flasher/attack_ai()
/obj/machinery/flasher/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/flasher/emp_act(severity)
/obj/machinery/flasher/flash()
/obj/machinery/flasher/portable
/obj/machinery/flasher/portable/HasProximity(atom/movable/AM as mob|obj)
/obj/machinery/flasher/portable/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/flasher/power_change()
/obj/machinery/flasher_button
/obj/machinery/flasher_button/attack_ai(mob/user as mob)
/obj/machinery/flasher_button/attack_hand(mob/user as mob)
/obj/machinery/flasher_button/attack_paw(mob/user as mob)
/obj/machinery/flasher_button/attackby(obj/item/weapon/W, mob/user as mob)
/obj/machinery/floodlight
/obj/machinery/floodlight/New()
/obj/machinery/floodlight/attack_hand(mob/user as mob)
/obj/machinery/floodlight/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/floodlight/process()
/obj/machinery/floodlight/updateicon()
/obj/machinery/foodgrill
/obj/machinery/foodgrill/attackby(obj/item/I, mob/user)
/obj/machinery/gateway
/obj/machinery/gateway/centeraway
/obj/machinery/gateway/centeraway/Bumped(atom/movable/M as mob|obj)
/obj/machinery/gateway/centeraway/attack_ghost(mob/user as mob)
/obj/machinery/gateway/centeraway/attack_hand(mob/user as mob)
/obj/machinery/gateway/centeraway/attackby(obj/item/device/W as obj, mob/user as mob)
/obj/machinery/gateway/centeraway/detect()
/obj/machinery/gateway/centeraway/initialize()
/obj/machinery/gateway/centeraway/toggleoff()
/obj/machinery/gateway/centeraway/toggleon(mob/user as mob)
/obj/machinery/gateway/centeraway/update_icon()
/obj/machinery/gateway/centerstation
/obj/machinery/gateway/centerstation/Bumped(atom/movable/M as mob|obj)
/obj/machinery/gateway/centerstation/attack_ghost(mob/user as mob)
/obj/machinery/gateway/centerstation/attack_hand(mob/user as mob)
/obj/machinery/gateway/centerstation/attackby(obj/item/device/W as obj, mob/user as mob)
/obj/machinery/gateway/centerstation/detect()
/obj/machinery/gateway/centerstation/initialize()
/obj/machinery/gateway/centerstation/process()
/obj/machinery/gateway/centerstation/toggleoff()
/obj/machinery/gateway/centerstation/toggleon(mob/user as mob)
/obj/machinery/gateway/centerstation/update_icon()
/obj/machinery/gateway/initialize()
/obj/machinery/gateway/update_icon()
/obj/machinery/getArea()
/obj/machinery/gibber
/obj/machinery/gibber/New()
/obj/machinery/gibber/attack_hand(mob/user as mob)
/obj/machinery/gibber/attack_paw(mob/user as mob)
/obj/machinery/gibber/attackby(obj/item/weapon/grab/G as obj, mob/user as mob)
/obj/machinery/gibber/autogibber
/obj/machinery/gibber/autogibber/Bumped(var/atom/A)
/obj/machinery/gibber/autogibber/New()
/obj/machinery/gibber/go_out()
/obj/machinery/gibber/relaymove(mob/user as mob)
/obj/machinery/gibber/startgibbing(mob/user as mob)
/obj/machinery/gibber/update_icon()
/obj/machinery/gibber/verb/eject()
/obj/machinery/giga_drill
/obj/machinery/giga_drill/Bump(atom/A)
/obj/machinery/giga_drill/attack_hand(mob/user as mob)
/obj/machinery/gravity_generator
/obj/machinery/gravity_generator/Move()
/obj/machinery/gravity_generator/ex_act(severity)
/obj/machinery/gravity_generator/get_status()
/obj/machinery/gravity_generator/main
/obj/machinery/gravity_generator/main/Destroy()
/obj/machinery/gravity_generator/main/Topic(href, href_list)
/obj/machinery/gravity_generator/main/attack_hand(mob/user as mob)
/obj/machinery/gravity_generator/main/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/gravity_generator/main/connected_parts()
/obj/machinery/gravity_generator/main/get_status()
/obj/machinery/gravity_generator/main/gravity_in_level()
/obj/machinery/gravity_generator/main/interact(mob/user as mob)
/obj/machinery/gravity_generator/main/power_change()
/obj/machinery/gravity_generator/main/process()
/obj/machinery/gravity_generator/main/pulse_radiation()
/obj/machinery/gravity_generator/main/set_broken()
/obj/machinery/gravity_generator/main/set_fix()
/obj/machinery/gravity_generator/main/set_power()
/obj/machinery/gravity_generator/main/set_state(var/new_state)
/obj/machinery/gravity_generator/main/setup_parts()
/obj/machinery/gravity_generator/main/shake_everyone()
/obj/machinery/gravity_generator/main/station/admin/New()
/obj/machinery/gravity_generator/main/station/initialize()
/obj/machinery/gravity_generator/main/update_icon()
/obj/machinery/gravity_generator/main/update_list()
/obj/machinery/gravity_generator/meteorhit()
/obj/machinery/gravity_generator/part
/obj/machinery/gravity_generator/part/Destroy()
/obj/machinery/gravity_generator/part/attack_hand(mob/user as mob)
/obj/machinery/gravity_generator/part/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/gravity_generator/part/get_status()
/obj/machinery/gravity_generator/part/set_broken()
/obj/machinery/gravity_generator/set_broken()
/obj/machinery/gravity_generator/set_fix()
/obj/machinery/gravity_generator/update_icon()
/obj/machinery/gun_turret
/obj/machinery/gun_turret/New()
/obj/machinery/gun_turret/attack_ai(mob/user)
/obj/machinery/gun_turret/attack_alien(mob/user as mob)
/obj/machinery/gun_turret/attack_hand(mob/user)
/obj/machinery/gun_turret/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/gun_turret/die()
/obj/machinery/gun_turret/emp_act()
/obj/machinery/gun_turret/ex_act(severity)
/obj/machinery/gun_turret/fire(atom/target)
/obj/machinery/gun_turret/get_target()
/obj/machinery/gun_turret/meteorhit()
/obj/machinery/gun_turret/process()
/obj/machinery/gun_turret/take_damage(damage)
/obj/machinery/gun_turret/update_icon()
/obj/machinery/gun_turret/validate_target(atom/target)
/obj/machinery/hologram
/obj/machinery/hologram/Destroy()
/obj/machinery/hologram/blob_act()
/obj/machinery/hologram/ex_act(severity)
/obj/machinery/hologram/holopad
/obj/machinery/hologram/holopad/activate_holo(mob/living/silicon/ai/user)
/obj/machinery/hologram/holopad/attack_ai(mob/living/silicon/ai/user)
/obj/machinery/hologram/holopad/attack_hand(var/mob/living/carbon/human/user)
/obj/machinery/hologram/holopad/clear_holo()
/obj/machinery/hologram/holopad/create_holo(mob/living/silicon/ai/A, turf/T = loc)
/obj/machinery/hologram/holopad/hear_talk(mob/living/M, text)
/obj/machinery/hologram/holopad/move_hologram()
/obj/machinery/hologram/holopad/process()
/obj/machinery/hologram/meteorhit()
/obj/machinery/hologram/power_change()
/obj/machinery/hologram/projector
/obj/machinery/holosign
/obj/machinery/holosign/power_change()
/obj/machinery/holosign/surgery
/obj/machinery/holosign/toggle()
/obj/machinery/holosign/update_icon()
/obj/machinery/holosign_switch
/obj/machinery/holosign_switch/attack_ai(mob/user as mob)
/obj/machinery/holosign_switch/attack_hand(mob/user as mob)
/obj/machinery/holosign_switch/attack_paw(mob/user as mob)
/obj/machinery/holosign_switch/attackby(obj/item/weapon/W, mob/user as mob)
/obj/machinery/hydroponics
/obj/machinery/hydroponics/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/hydroponics/attack_hand(mob/user as mob)
/obj/machinery/hydroponics/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/hydroponics/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/hydroponics/hardmutate()
/obj/machinery/hydroponics/mutate()
/obj/machinery/hydroponics/mutatepest()
/obj/machinery/hydroponics/mutatespecie()
/obj/machinery/hydroponics/mutateweed()
/obj/machinery/hydroponics/plantdies()
/obj/machinery/hydroponics/process()
/obj/machinery/hydroponics/soil
/obj/machinery/hydroponics/soil/updateicon()
/obj/machinery/hydroponics/update_tray(mob/user = usr)
/obj/machinery/hydroponics/updateicon()
/obj/machinery/hydroponics/weedinvasion()
/obj/machinery/icecream_vat
/obj/machinery/icecream_vat/New()
/obj/machinery/icecream_vat/Topic(href, href_list)
/obj/machinery/icecream_vat/add(var/add_type, var/amount)
/obj/machinery/icecream_vat/attack_hand(mob/user as mob)
/obj/machinery/icecream_vat/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/icecream_vat/interact(mob/user as mob)
/obj/machinery/icecream_vat/make(var/mob/user, var/make_type)
/obj/machinery/icemachine
/obj/machinery/icemachine/New()
/obj/machinery/icemachine/Topic(href, href_list)
/obj/machinery/icemachine/attack_ai(mob/user)
/obj/machinery/icemachine/attack_hand(mob/user)
/obj/machinery/icemachine/attack_paw(mob/user)
/obj/machinery/icemachine/attackby(obj/item/I, mob/user)
/obj/machinery/icemachine/generate_name(reagent_name)
/obj/machinery/icemachine/show_reagents(container)
/obj/machinery/icemachine/show_toppings()
/obj/machinery/icemachine/validexchange(reag)
/obj/machinery/igniter
/obj/machinery/igniter/New()
/obj/machinery/igniter/attack_ai(mob/user as mob)
/obj/machinery/igniter/attack_hand(mob/user as mob)
/obj/machinery/igniter/attack_paw(mob/user as mob)
/obj/machinery/igniter/power_change()
/obj/machinery/igniter/process()
/obj/machinery/ignition_switch
/obj/machinery/ignition_switch/attack_ai(mob/user as mob)
/obj/machinery/ignition_switch/attack_hand(mob/user as mob)
/obj/machinery/ignition_switch/attack_paw(mob/user as mob)
/obj/machinery/ignition_switch/attackby(obj/item/weapon/W, mob/user as mob)
/obj/machinery/implantchair
/obj/machinery/implantchair/New()
/obj/machinery/implantchair/Topic(href, href_list)
/obj/machinery/implantchair/add_implants()
/obj/machinery/implantchair/attack_hand(mob/user as mob)
/obj/machinery/implantchair/attackby(var/obj/item/weapon/G as obj, var/mob/user as mob)
/obj/machinery/implantchair/go_out()
/obj/machinery/implantchair/go_out(var/mob/M)
/obj/machinery/implantchair/implant(var/mob/M)
/obj/machinery/implantchair/put_mob(mob/living/carbon/M as mob)
/obj/machinery/implantchair/verb
/obj/machinery/implantchair/verb/get_out()
/obj/machinery/implantchair/verb/move_inside()
/obj/machinery/iv_drip
/obj/machinery/iv_drip/MouseDrop(over_object, src_location, over_location)
/obj/machinery/iv_drip/attack_hand(mob/user as mob)
/obj/machinery/iv_drip/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/iv_drip/examine()
/obj/machinery/iv_drip/process()
/obj/machinery/iv_drip/update_icon()
/obj/machinery/iv_drip/verb/toggle_mode()
/obj/machinery/juicer
/obj/machinery/juicer/New()
/obj/machinery/juicer/Topic(href, href_list)
/obj/machinery/juicer/attack_ai(mob/user as mob)
/obj/machinery/juicer/attack_hand(mob/user as mob)
/obj/machinery/juicer/attack_paw(mob/user as mob)
/obj/machinery/juicer/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/juicer/get_juice_amount(var/obj/item/weapon/reagent_containers/food/snacks/grown/O)
/obj/machinery/juicer/get_juice_id(var/obj/item/weapon/reagent_containers/food/snacks/grown/O)
/obj/machinery/juicer/interact(mob/user as mob)
/obj/machinery/juicer/juice()
/obj/machinery/juicer/update_icon()
/obj/machinery/juicer/verb/detach()
/obj/machinery/jungle_controller
/obj/machinery/jungle_controller/initialize()
/obj/machinery/keycard_auth
/obj/machinery/keycard_auth/Topic(href, href_list)
/obj/machinery/keycard_auth/attack_ai(mob/user as mob)
/obj/machinery/keycard_auth/attack_hand(mob/user as mob)
/obj/machinery/keycard_auth/attack_paw(mob/user as mob)
/obj/machinery/keycard_auth/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/keycard_auth/broadcast_request()
/obj/machinery/keycard_auth/is_ert_blocked()
/obj/machinery/keycard_auth/power_change()
/obj/machinery/keycard_auth/proc/is_ert_blocked()
/obj/machinery/keycard_auth/receive_request(var/obj/machinery/keycard_auth/source)
/obj/machinery/keycard_auth/reset()
/obj/machinery/keycard_auth/trigger_event()
/obj/machinery/librarycomp
/obj/machinery/librarycomp/Topic(href, href_list)
/obj/machinery/librarycomp/attack_hand(var/mob/user as mob)
/obj/machinery/librarycomp/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/librarypubliccomp
/obj/machinery/librarypubliccomp/Topic(href, href_list)
/obj/machinery/librarypubliccomp/attack_hand(var/mob/user as mob)
/obj/machinery/libraryscanner
/obj/machinery/libraryscanner/Topic(href, href_list)
/obj/machinery/libraryscanner/attack_hand(var/mob/user as mob)
/obj/machinery/libraryscanner/attackby(var/obj/O as obj, var/mob/user as mob)
/obj/machinery/light
/obj/machinery/light/Destroy()
/obj/machinery/light/New()
/obj/machinery/light/attack_ai(mob/user)
/obj/machinery/light/attack_alien(mob/living/carbon/alien/humanoid/user)
/obj/machinery/light/attack_animal(mob/living/simple_animal/M)
/obj/machinery/light/attack_hand(mob/user)
/obj/machinery/light/attack_tk(mob/user)
/obj/machinery/light/attackby(obj/item/W, mob/user)
/obj/machinery/light/blob_act()
/obj/machinery/light/broken(var/skip_sound_and_sparks = 0)
/obj/machinery/light/built/New()
/obj/machinery/light/ex_act(severity)
/obj/machinery/light/examine()
/obj/machinery/light/explode()
/obj/machinery/light/fix()
/obj/machinery/light/flicker(var/amount = rand(10, 20))
/obj/machinery/light/has_power()
/obj/machinery/light/power_change()
/obj/machinery/light/seton(var/s)
/obj/machinery/light/small
/obj/machinery/light/small/built/New()
/obj/machinery/light/spot
/obj/machinery/light/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/machinery/light/update(var/trigger = 1)
/obj/machinery/light/update_icon()
/obj/machinery/light_construct
/obj/machinery/light_construct/New()
/obj/machinery/light_construct/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/light_construct/examine()
/obj/machinery/light_construct/small
/obj/machinery/light_switch
/obj/machinery/light_switch/New()
/obj/machinery/light_switch/attack_hand(mob/user)
/obj/machinery/light_switch/attack_paw(mob/user)
/obj/machinery/light_switch/emp_act(severity)
/obj/machinery/light_switch/examine()
/obj/machinery/light_switch/power_change()
/obj/machinery/light_switch/updateicon()
/obj/machinery/logic/indicator
/obj/machinery/logic/indicator/bulb
/obj/machinery/logic/indicator/bulb/process()
/obj/machinery/logic/indicator/process()
/obj/machinery/logic/oneinput
/obj/machinery/logic/oneinput/not/process()
/obj/machinery/logic/oneinput/process()
/obj/machinery/logic/sensor
/obj/machinery/logic/sensor/constant_high
/obj/machinery/logic/sensor/constant_high/process()
/obj/machinery/logic/sensor/process()
/obj/machinery/logic/twoinput
/obj/machinery/logic/twoinput/and/process()
/obj/machinery/logic/twoinput/or/process()
/obj/machinery/logic/twoinput/process()
/obj/machinery/logic/twoinput/relay/process()
/obj/machinery/logic/twoinput/xnor/process()
/obj/machinery/logic/twoinput/xor/process()
/obj/machinery/magnetic_controller
/obj/machinery/magnetic_controller/MagnetMove()
/obj/machinery/magnetic_controller/New()
/obj/machinery/magnetic_controller/Topic(href, href_list)
/obj/machinery/magnetic_controller/attack_ai(mob/user as mob)
/obj/machinery/magnetic_controller/attack_hand(mob/user as mob)
/obj/machinery/magnetic_controller/filter_path()
/obj/machinery/magnetic_controller/process()
/obj/machinery/magnetic_module
/obj/machinery/magnetic_module/Cmd(var/command, var/modifier)
/obj/machinery/magnetic_module/New()
/obj/machinery/magnetic_module/hide(var/intact)
/obj/machinery/magnetic_module/magnetic_process()
/obj/machinery/magnetic_module/process()
/obj/machinery/magnetic_module/receive_signal(datum/signal/signal)
/obj/machinery/magnetic_module/updateicon()
/obj/machinery/mass_driver
/obj/machinery/mass_driver/drive(amount)
/obj/machinery/mass_driver/emp_act(severity)
/obj/machinery/mech_bay_recharge_port
/obj/machinery/mech_bay_recharge_port/New()
/obj/machinery/mech_bay_recharge_port/active()
/obj/machinery/mech_bay_recharge_port/power_change()
/obj/machinery/mech_bay_recharge_port/set_voltage(new_voltage)
/obj/machinery/mech_bay_recharge_port/start_charge(var/obj/mecha/recharging_mecha)
/obj/machinery/mech_bay_recharge_port/stop_charge()
/obj/machinery/mecha_part_fabricator
/obj/machinery/mecha_part_fabricator/Destroy()
/obj/machinery/mecha_part_fabricator/New()
/obj/machinery/mecha_part_fabricator/RefreshParts()
/obj/machinery/mecha_part_fabricator/Topic(href, href_list)
/obj/machinery/mecha_part_fabricator/add_part_set(set_name as text,parts=null)
/obj/machinery/mecha_part_fabricator/add_part_set_to_queue(set_name)
/obj/machinery/mecha_part_fabricator/add_part_to_set(set_name as text,part)
/obj/machinery/mecha_part_fabricator/add_to_queue(part)
/obj/machinery/mecha_part_fabricator/attack_hand(mob/user as mob)
/obj/machinery/mecha_part_fabricator/attackby(obj/W as obj, mob/user as mob)
/obj/machinery/mecha_part_fabricator/build_part(var/obj/item/part)
/obj/machinery/mecha_part_fabricator/check_access(obj/item/weapon/card/id/I)
/obj/machinery/mecha_part_fabricator/check_resources(var/obj/item/part)
/obj/machinery/mecha_part_fabricator/convert_designs()
/obj/machinery/mecha_part_fabricator/convert_part_set(set_name as text)
/obj/machinery/mecha_part_fabricator/emag()
/obj/machinery/mecha_part_fabricator/exploit_prevention(var/obj/Part, mob/user as mob, var/desc_exploit)
/obj/machinery/mecha_part_fabricator/get_construction_time_w_coeff(var/obj/item/part as obj, var/roundto=1)
/obj/machinery/mecha_part_fabricator/get_resource_cost_w_coeff(var/obj/item/part as obj,var/resource as text, var/roundto=1)
/obj/machinery/mecha_part_fabricator/list_queue()
/obj/machinery/mecha_part_fabricator/operation_allowed(mob/M)
/obj/machinery/mecha_part_fabricator/output_available_resources()
/obj/machinery/mecha_part_fabricator/output_part_cost(var/obj/item/part)
/obj/machinery/mecha_part_fabricator/output_part_info(var/obj/item/part)
/obj/machinery/mecha_part_fabricator/output_parts_list(set_name)
/obj/machinery/mecha_part_fabricator/process_queue()
/obj/machinery/mecha_part_fabricator/remove_from_queue(index)
/obj/machinery/mecha_part_fabricator/remove_material(var/mat_string, var/amount)
/obj/machinery/mecha_part_fabricator/remove_part_set(set_name as text)
/obj/machinery/mecha_part_fabricator/remove_resources(var/obj/item/part)
/obj/machinery/mecha_part_fabricator/sync(silent=null)
/obj/machinery/mecha_part_fabricator/update_queue_on_page()
/obj/machinery/mecha_part_fabricator/update_tech()
/obj/machinery/media
/obj/machinery/media/Destroy()
/obj/machinery/media/Move()
/obj/machinery/media/New()
/obj/machinery/media/disconnect_media_source()
/obj/machinery/media/jukebox
/obj/machinery/media/jukebox/Topic(href, href_list)
/obj/machinery/media/jukebox/attack_ai(var/mob/user)
/obj/machinery/media/jukebox/attack_hand(var/mob/user)
/obj/machinery/media/jukebox/attack_paw()
/obj/machinery/media/jukebox/attackby(obj/item/W, mob/user)
/obj/machinery/media/jukebox/bar
/obj/machinery/media/jukebox/check_reload()
/obj/machinery/media/jukebox/power_change()
/obj/machinery/media/jukebox/process()
/obj/machinery/media/jukebox/shuttle
/obj/machinery/media/jukebox/stop_playing()
/obj/machinery/media/jukebox/superjuke
/obj/machinery/media/jukebox/superjuke/attackby(obj/item/W, mob/user)
/obj/machinery/media/jukebox/update_icon()
/obj/machinery/media/jukebox/update_music()
/obj/machinery/media/update_media_source()
/obj/machinery/media/update_music()
/obj/machinery/message_server
/obj/machinery/message_server/Destroy()
/obj/machinery/message_server/New()
/obj/machinery/message_server/attack_hand(user as mob)
/obj/machinery/message_server/process()
/obj/machinery/message_server/send_pda_message(var/recipient = "",var/sender = "",var/message = "")
/obj/machinery/message_server/send_rc_message(var/recipient = "",var/sender = "",var/message = "",var/stamp = "", var/id_auth = "", var/priority = 1)
/obj/machinery/message_server/update_icon()
/obj/machinery/metaldetector
/obj/machinery/metaldetector/Crossed(AM as mob|obj)
/obj/machinery/metaldetector/attackby(obj/item/W as obj, mob/user as mob)
/obj/machinery/metaldetector/check_access(obj/item/weapon/card/id/I, list/access_list)
/obj/machinery/meter
/obj/machinery/meter/Click()
/obj/machinery/meter/New()
/obj/machinery/meter/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/meter/examine()
/obj/machinery/meter/initialize()
/obj/machinery/meter/process()
/obj/machinery/meter/status()
/obj/machinery/meter/turf/New()
/obj/machinery/meter/turf/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/meter/turf/initialize()
/obj/machinery/microwave
/obj/machinery/microwave/New()
/obj/machinery/microwave/Topic(href, href_list)
/obj/machinery/microwave/abort()
/obj/machinery/microwave/attack_ai(mob/user as mob)
/obj/machinery/microwave/attack_hand(mob/user as mob)
/obj/machinery/microwave/attack_paw(mob/user as mob)
/obj/machinery/microwave/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/microwave/broke()
/obj/machinery/microwave/cook()
/obj/machinery/microwave/dispose()
/obj/machinery/microwave/fail()
/obj/machinery/microwave/has_extra_item()
/obj/machinery/microwave/interact(mob/user as mob)
/obj/machinery/microwave/muck_finish()
/obj/machinery/microwave/muck_start()
/obj/machinery/microwave/start()
/obj/machinery/microwave/stop()
/obj/machinery/microwave/wzhzhzh(var/seconds as num)
/obj/machinery/mill
/obj/machinery/mill/attack_hand(var/mob/user as mob)
/obj/machinery/mill/attackby(var/obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/mill/process()
/obj/machinery/mineral/equipment_locker
/obj/machinery/mineral/equipment_locker/RedeemVoucher(voucher, redeemer)
/obj/machinery/mineral/equipment_locker/Topic(href, href_list)
/obj/machinery/mineral/equipment_locker/attack_hand(user as mob)
/obj/machinery/mineral/equipment_locker/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/mineral/equipment_locker/ex_act()
/obj/machinery/mineral/equipment_locker/interact(mob/user)
/obj/machinery/mineral/input
/obj/machinery/mineral/input/New()
/obj/machinery/mineral/labor_claim_console
/obj/machinery/mineral/labor_claim_console/New()
/obj/machinery/mineral/labor_claim_console/Topic(href, href_list)
/obj/machinery/mineral/labor_claim_console/attack_hand(user as mob)
/obj/machinery/mineral/labor_claim_console/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/mineral/mint
/obj/machinery/mineral/mint/New()
/obj/machinery/mineral/mint/Topic(href, href_list)
/obj/machinery/mineral/mint/attack_hand(user as mob)
/obj/machinery/mineral/mint/process()
/obj/machinery/mineral/ore_redemption
/obj/machinery/mineral/ore_redemption/New()
/obj/machinery/mineral/ore_redemption/SmeltMineral(var/obj/item/weapon/ore/O)
/obj/machinery/mineral/ore_redemption/Topic(href, href_list)
/obj/machinery/mineral/ore_redemption/access_virology
/obj/machinery/mineral/ore_redemption/attack_hand(user as mob)
/obj/machinery/mineral/ore_redemption/ex_act()
/obj/machinery/mineral/ore_redemption/get_ore_values()
/obj/machinery/mineral/ore_redemption/interact(mob/user)
/obj/machinery/mineral/ore_redemption/process()
/obj/machinery/mineral/ore_redemption/process_sheet(obj/item/weapon/ore/O)
/obj/machinery/mineral/output
/obj/machinery/mineral/output/New()
/obj/machinery/mineral/processing_unit
/obj/machinery/mineral/processing_unit/New()
/obj/machinery/mineral/processing_unit/process()
/obj/machinery/mineral/processing_unit_console
/obj/machinery/mineral/processing_unit_console/New()
/obj/machinery/mineral/processing_unit_console/Topic(href, href_list)
/obj/machinery/mineral/processing_unit_console/attack_hand(mob/user)
/obj/machinery/mineral/processing_unit_console/interact(mob/user)
/obj/machinery/mineral/processing_unit_console/process()
/obj/machinery/mineral/stacking_machine
/obj/machinery/mineral/stacking_machine/New()
/obj/machinery/mineral/stacking_machine/laborstacker
/obj/machinery/mineral/stacking_machine/laborstacker/process_sheet(obj/item/stack/sheet/inp)
/obj/machinery/mineral/stacking_machine/process()
/obj/machinery/mineral/stacking_machine/process_sheet(obj/item/stack/sheet/inp)
/obj/machinery/mineral/stacking_unit_console
/obj/machinery/mineral/stacking_unit_console/New()
/obj/machinery/mineral/stacking_unit_console/Topic(href, href_list)
/obj/machinery/mineral/stacking_unit_console/attack_hand(user as mob)
/obj/machinery/mineral/unloading_machine
/obj/machinery/mineral/unloading_machine/New()
/obj/machinery/mineral/unloading_machine/process()
/obj/machinery/monkey_recycler
/obj/machinery/monkey_recycler/attack_hand(var/mob/user as mob)
/obj/machinery/monkey_recycler/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/navbeacon
/obj/machinery/navbeacon/New()
/obj/machinery/navbeacon/Topic(href, href_list)
/obj/machinery/navbeacon/attack_ai(var/mob/user)
/obj/machinery/navbeacon/attack_hand(var/mob/user)
/obj/machinery/navbeacon/attack_paw()
/obj/machinery/navbeacon/attackby(var/obj/item/I, var/mob/user)
/obj/machinery/navbeacon/hide(var/intact)
/obj/machinery/navbeacon/interact(var/mob/user, var/ai = 0)
/obj/machinery/navbeacon/post_signal()
/obj/machinery/navbeacon/receive_signal(datum/signal/signal)
/obj/machinery/navbeacon/set_codes()
/obj/machinery/navbeacon/updateicon()
/obj/machinery/newscaster
/obj/machinery/newscaster/AttachPhoto(mob/user as mob)
/obj/machinery/newscaster/Destroy()
/obj/machinery/newscaster/New()
/obj/machinery/newscaster/Topic(href, href_list)
/obj/machinery/newscaster/attack_ai(mob/user as mob)
/obj/machinery/newscaster/attack_hand(mob/user as mob)
/obj/machinery/newscaster/attack_paw(mob/user as mob)
/obj/machinery/newscaster/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/newscaster/ex_act(severity)
/obj/machinery/newscaster/newsAlert(channel)
/obj/machinery/newscaster/power_change()
/obj/machinery/newscaster/print_paper()
/obj/machinery/newscaster/scan_user(mob/living/user as mob)
/obj/machinery/newscaster/security_unit
/obj/machinery/newscaster/update_icon()
/obj/machinery/nuclearbomb
/obj/machinery/nuclearbomb/New()
/obj/machinery/nuclearbomb/Topic(href, href_list)
/obj/machinery/nuclearbomb/attack_hand(mob/user as mob)
/obj/machinery/nuclearbomb/attack_paw(mob/user as mob)
/obj/machinery/nuclearbomb/attackby(obj/item/weapon/O as obj, mob/user as mob)
/obj/machinery/nuclearbomb/blob_act()
/obj/machinery/nuclearbomb/ex_act(severity)
/obj/machinery/nuclearbomb/explode()
/obj/machinery/nuclearbomb/nukehack_win(mob/user as mob)
/obj/machinery/nuclearbomb/process()
/obj/machinery/nuclearbomb/verb/make_deployable()
/obj/machinery/optable
/obj/machinery/optable/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/optable/MouseDrop_T(obj/O as obj, mob/user as mob)
/obj/machinery/optable/New()
/obj/machinery/optable/attack_hand(mob/user as mob)
/obj/machinery/optable/attack_paw(mob/user as mob)
/obj/machinery/optable/attackby(obj/item/weapon/W as obj, mob/living/carbon/user as mob)
/obj/machinery/optable/blob_act()
/obj/machinery/optable/check_victim()
/obj/machinery/optable/ex_act(severity)
/obj/machinery/optable/process()
/obj/machinery/optable/slime
/obj/machinery/optable/take_victim(mob/living/carbon/C, mob/living/carbon/user as mob)
/obj/machinery/optable/verb/climb_on()
/obj/machinery/particle_accelerator
/obj/machinery/particle_accelerator/attackby(obj/item/W, mob/user)
/obj/machinery/particle_accelerator/blob_act()
/obj/machinery/particle_accelerator/control_box
/obj/machinery/particle_accelerator/control_box/New()
/obj/machinery/particle_accelerator/control_box/Topic(href, href_list)
/obj/machinery/particle_accelerator/control_box/add_strength(var/s)
/obj/machinery/particle_accelerator/control_box/attack_hand(mob/user as mob)
/obj/machinery/particle_accelerator/control_box/check_part(var/turf/T, var/type)
/obj/machinery/particle_accelerator/control_box/interact(mob/user)
/obj/machinery/particle_accelerator/control_box/part_scan()
/obj/machinery/particle_accelerator/control_box/power_change()
/obj/machinery/particle_accelerator/control_box/process()
/obj/machinery/particle_accelerator/control_box/remove_strength(var/s)
/obj/machinery/particle_accelerator/control_box/strength_change()
/obj/machinery/particle_accelerator/control_box/toggle_power()
/obj/machinery/particle_accelerator/control_box/update_icon()
/obj/machinery/particle_accelerator/control_box/update_state()
/obj/machinery/particle_accelerator/ex_act(severity)
/obj/machinery/particle_accelerator/examine()
/obj/machinery/particle_accelerator/meteorhit()
/obj/machinery/particle_accelerator/process_tool_hit(var/obj/O, var/mob/user)
/obj/machinery/particle_accelerator/update_icon()
/obj/machinery/particle_accelerator/update_state()
/obj/machinery/particle_accelerator/verb/rotate()
/obj/machinery/particle_accelerator/verb/rotateccw()
/obj/machinery/party/lasermachine
/obj/machinery/party/lasermachine/turnoff()
/obj/machinery/party/lasermachine/turnon()
/obj/machinery/party/mixer
/obj/machinery/party/turntable
/obj/machinery/party/turntable/New()
/obj/machinery/party/turntable/Topic(href, href_list)
/obj/machinery/party/turntable/attack_hand(mob/user as mob)
/obj/machinery/partyalarm
/obj/machinery/partyalarm/New()
/obj/machinery/partyalarm/Topic(href, href_list)
/obj/machinery/partyalarm/alarm()
/obj/machinery/partyalarm/attack_hand(mob/user as mob)
/obj/machinery/partyalarm/attack_paw(mob/user as mob)
/obj/machinery/partyalarm/reset()
/obj/machinery/pdapainter
/obj/machinery/pdapainter/New()
/obj/machinery/pdapainter/attack_hand(mob/user as mob)
/obj/machinery/pdapainter/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/pdapainter/power_change()
/obj/machinery/pdapainter/update_icon()
/obj/machinery/pdapainter/verb/ejectpda()
/obj/machinery/photocopier
/obj/machinery/photocopier/MouseDrop_T(mob/target, mob/user)
/obj/machinery/photocopier/Topic(href, href_list)
/obj/machinery/photocopier/attack_ai(mob/user as mob)
/obj/machinery/photocopier/attack_hand(mob/user as mob)
/obj/machinery/photocopier/attack_paw(mob/user as mob)
/obj/machinery/photocopier/attackby(obj/item/O as obj, mob/user as mob)
/obj/machinery/photocopier/blob_act()
/obj/machinery/photocopier/check_ass()
/obj/machinery/photocopier/copier_empty()
/obj/machinery/photocopier/ex_act(severity)
/obj/machinery/ping(text=null)
/obj/machinery/pipedispenser
/obj/machinery/pipedispenser/Topic(href, href_list)
/obj/machinery/pipedispenser/attack_hand(user as mob)
/obj/machinery/pipedispenser/attack_paw(user as mob)
/obj/machinery/pipedispenser/attackby(var/obj/item/W as obj, var/mob/user as mob)
/obj/machinery/pipedispenser/disposal
/obj/machinery/pipedispenser/disposal/MouseDrop_T(var/obj/structure/disposalconstruct/pipe as obj, mob/usr as mob)
/obj/machinery/pipedispenser/disposal/Topic(href, href_list)
/obj/machinery/pipedispenser/disposal/attack_hand(user as mob)
/obj/machinery/porta_turret
/obj/machinery/porta_turret/Destroy()
/obj/machinery/porta_turret/New()
/obj/machinery/porta_turret/Topic(href, href_list)
/obj/machinery/porta_turret/assess_perp(mob/living/carbon/human/perp as mob)
/obj/machinery/porta_turret/attack_ai(mob/user as mob)
/obj/machinery/porta_turret/attack_hand(mob/user as mob)
/obj/machinery/porta_turret/attack_hand(mob/user as mob)/if(!src.locked)
/obj/machinery/porta_turret/attack_hand(mob/user as mob)/if(istype(user,/mob/living/carbon/human))
/obj/machinery/porta_turret/attackby(obj/item/W as obj, mob/user as mob)
/obj/machinery/porta_turret/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/porta_turret/die()
/obj/machinery/porta_turret/emp_act(severity)
/obj/machinery/porta_turret/ex_act(severity)
/obj/machinery/porta_turret/popDown()
/obj/machinery/porta_turret/popUp()
/obj/machinery/porta_turret/power_change()
/obj/machinery/porta_turret/process()
/obj/machinery/porta_turret/shootAt(var/atom/movable/target)
/obj/machinery/porta_turret/stationary
/obj/machinery/porta_turret/stationary/New()
/obj/machinery/porta_turret_construct
/obj/machinery/porta_turret_construct/attack_hand(mob/user as mob)
/obj/machinery/porta_turret_construct/attackby(obj/item/W as obj, mob/user as mob)
/obj/machinery/porta_turret_cover
/obj/machinery/porta_turret_cover/Topic(href, href_list)
/obj/machinery/porta_turret_cover/attack_ai(mob/user as mob)
/obj/machinery/porta_turret_cover/attack_ai(mob/user as mob)/onclose(user, "autosec")
/obj/machinery/porta_turret_cover/attack_hand(mob/user as mob)
/obj/machinery/porta_turret_cover/attack_hand(mob/user as mob)/if(!Parent_Turret.locked)
/obj/machinery/porta_turret_cover/attack_hand(mob/user as mob)/if(istype(user,/mob/living/carbon/human))
/obj/machinery/porta_turret_cover/attackby(obj/item/W as obj, mob/user as mob)
/obj/machinery/portable_atmospherics
/obj/machinery/portable_atmospherics/Destroy()
/obj/machinery/portable_atmospherics/New()
/obj/machinery/portable_atmospherics/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister
/obj/machinery/portable_atmospherics/canister/Topic(href, href_list)
/obj/machinery/portable_atmospherics/canister/air
/obj/machinery/portable_atmospherics/canister/air/New()
/obj/machinery/portable_atmospherics/canister/attack_ai(var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister/attack_paw(var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/portable_atmospherics/canister/blob_act()
/obj/machinery/portable_atmospherics/canister/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/portable_atmospherics/canister/carbon_dioxide
/obj/machinery/portable_atmospherics/canister/carbon_dioxide/New()
/obj/machinery/portable_atmospherics/canister/check_change()
/obj/machinery/portable_atmospherics/canister/healthcheck()
/obj/machinery/portable_atmospherics/canister/meteorhit(var/obj/O as obj)
/obj/machinery/portable_atmospherics/canister/nitrogen
/obj/machinery/portable_atmospherics/canister/nitrogen/New()
/obj/machinery/portable_atmospherics/canister/oxygen
/obj/machinery/portable_atmospherics/canister/oxygen/New()
/obj/machinery/portable_atmospherics/canister/process()
/obj/machinery/portable_atmospherics/canister/return_air()
/obj/machinery/portable_atmospherics/canister/return_pressure()
/obj/machinery/portable_atmospherics/canister/return_temperature()
/obj/machinery/portable_atmospherics/canister/sleeping_agent
/obj/machinery/portable_atmospherics/canister/sleeping_agent/New()
/obj/machinery/portable_atmospherics/canister/sleeping_agent/roomfiller/New()
/obj/machinery/portable_atmospherics/canister/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/machinery/portable_atmospherics/canister/toxins
/obj/machinery/portable_atmospherics/canister/toxins/New()
/obj/machinery/portable_atmospherics/canister/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/portable_atmospherics/canister/update_icon()
/obj/machinery/portable_atmospherics/canister/weld(var/obj/item/weapon/weldingtool/WT, var/mob/user)
/obj/machinery/portable_atmospherics/connect(obj/machinery/atmospherics/portables_connector/new_port)
/obj/machinery/portable_atmospherics/disconnect()
/obj/machinery/portable_atmospherics/initialize()
/obj/machinery/portable_atmospherics/process()
/obj/machinery/portable_atmospherics/pump
/obj/machinery/portable_atmospherics/pump/Topic(href, href_list)
/obj/machinery/portable_atmospherics/pump/attack_ai(var/mob/user as mob)
/obj/machinery/portable_atmospherics/pump/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/pump/attack_paw(var/mob/user as mob)
/obj/machinery/portable_atmospherics/pump/emp_act(severity)
/obj/machinery/portable_atmospherics/pump/process()
/obj/machinery/portable_atmospherics/pump/return_air()
/obj/machinery/portable_atmospherics/pump/update_icon()
/obj/machinery/portable_atmospherics/scrubber
/obj/machinery/portable_atmospherics/scrubber/Topic(href, href_list)
/obj/machinery/portable_atmospherics/scrubber/attack_ai(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/attack_paw(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/emp_act(severity)
/obj/machinery/portable_atmospherics/scrubber/huge
/obj/machinery/portable_atmospherics/scrubber/huge/New()
/obj/machinery/portable_atmospherics/scrubber/huge/attack_hand(var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/huge/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/huge/stationary
/obj/machinery/portable_atmospherics/scrubber/huge/stationary/attackby(var/obj/item/weapon/W as obj, var/mob/user as mob)
/obj/machinery/portable_atmospherics/scrubber/huge/update_icon()
/obj/machinery/portable_atmospherics/scrubber/process()
/obj/machinery/portable_atmospherics/scrubber/return_air()
/obj/machinery/portable_atmospherics/scrubber/update_icon()
/obj/machinery/portable_atmospherics/update_icon()
/obj/machinery/pos
/obj/machinery/pos/AddToOrder(var/name, var/units)
/obj/machinery/pos/ExportScreen()
/obj/machinery/pos/FinalizeScreen()
/obj/machinery/pos/ImportScreen()
/obj/machinery/pos/LoginScreen()
/obj/machinery/pos/New()
/obj/machinery/pos/NewOrder()
/obj/machinery/pos/OrderScreen()
/obj/machinery/pos/PrintReceipt(var/order_id)
/obj/machinery/pos/ProductsScreen()
/obj/machinery/pos/RemoveFromOrder(var/order_id)
/obj/machinery/pos/SettingsScreen()
/obj/machinery/pos/Topic(var/href, var/list/href_list)
/obj/machinery/pos/attack_hand(var/mob/user)
/obj/machinery/pos/attack_robot(var/mob/user)
/obj/machinery/pos/attackby(var/atom/movable/A, var/mob/user)
/obj/machinery/pos/say(var/text)
/obj/machinery/pos/update_icon()
/obj/machinery/power
/obj/machinery/power/Destroy()
/obj/machinery/power/add_avail(var/amount)
/obj/machinery/power/add_load(var/amount)
/obj/machinery/power/am_control_unit
/obj/machinery/power/am_control_unit/Destroy()
/obj/machinery/power/am_control_unit/New()
/obj/machinery/power/am_control_unit/Topic(href, href_list)
/obj/machinery/power/am_control_unit/add_shielding(var/obj/machinery/am_shielding/AMS, var/AMS_linking = 0)
/obj/machinery/power/am_control_unit/attack_hand(mob/user as mob)
/obj/machinery/power/am_control_unit/attackby(obj/item/W, mob/user)
/obj/machinery/power/am_control_unit/blob_act()
/obj/machinery/power/am_control_unit/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/power/am_control_unit/check_core_stability()
/obj/machinery/power/am_control_unit/check_shield_icons()
/obj/machinery/power/am_control_unit/check_stability()
/obj/machinery/power/am_control_unit/emp_act(severity)
/obj/machinery/power/am_control_unit/ex_act(severity)
/obj/machinery/power/am_control_unit/interact(mob/user)
/obj/machinery/power/am_control_unit/power_change()
/obj/machinery/power/am_control_unit/process()
/obj/machinery/power/am_control_unit/produce_power()
/obj/machinery/power/am_control_unit/remove_shielding(var/obj/machinery/am_shielding/AMS)
/obj/machinery/power/am_control_unit/toggle_power()
/obj/machinery/power/am_control_unit/update_icon()
/obj/machinery/power/apc
/obj/machinery/power/apc/AICtrlClick()
/obj/machinery/power/apc/Destroy()
/obj/machinery/power/apc/New(turf/loc, var/ndir, var/building=0)
/obj/machinery/power/apc/Topic(href, href_list)
/obj/machinery/power/apc/add_load(var/amount)
/obj/machinery/power/apc/attack_alien(mob/living/carbon/alien/humanoid/user)
/obj/machinery/power/apc/attack_hand(mob/user)
/obj/machinery/power/apc/attackby(obj/item/W, mob/user)
/obj/machinery/power/apc/autoset(var/val, var/on)
/obj/machinery/power/apc/avail()
/obj/machinery/power/apc/blob_act()
/obj/machinery/power/apc/can_use(mob/user as mob, var/loud = 0)
/obj/machinery/power/apc/check_updates()
/obj/machinery/power/apc/emp_act(severity)
/obj/machinery/power/apc/ex_act(severity)
/obj/machinery/power/apc/examine()
/obj/machinery/power/apc/get_malf_status(mob/user)
/obj/machinery/power/apc/init()
/obj/machinery/power/apc/interact(mob/user)
/obj/machinery/power/apc/ion_act()
/obj/machinery/power/apc/isWireCut(var/wireIndex)
/obj/machinery/power/apc/make_terminal()
/obj/machinery/power/apc/malfoccupy(var/mob/living/silicon/ai/malf)
/obj/machinery/power/apc/malfvacate(var/forced)
/obj/machinery/power/apc/meteorhit(var/obj/O as obj)
/obj/machinery/power/apc/overload_lighting()
/obj/machinery/power/apc/process()
/obj/machinery/power/apc/queue_icon_update()
/obj/machinery/power/apc/report()
/obj/machinery/power/apc/set_broken()
/obj/machinery/power/apc/setsubsystem(val)
/obj/machinery/power/apc/shock(mob/user, prb)
/obj/machinery/power/apc/spookify()
/obj/machinery/power/apc/surplus()
/obj/machinery/power/apc/toggle_breaker()
/obj/machinery/power/apc/ui_interact(mob/user, ui_key = "main")
/obj/machinery/power/apc/update()
/obj/machinery/power/apc/updateDialog()
/obj/machinery/power/apc/update_icon()
/obj/machinery/power/attackby(obj/item/weapon/W, mob/user)
/obj/machinery/power/avail()
/obj/machinery/power/connect_to_network()
/obj/machinery/power/disconnect_from_network()
/obj/machinery/power/emitter
/obj/machinery/power/emitter/Destroy()
/obj/machinery/power/emitter/attack_hand(mob/user as mob)
/obj/machinery/power/emitter/attackby(obj/item/W, mob/user)
/obj/machinery/power/emitter/emp_act(var/severity)
/obj/machinery/power/emitter/initialize()
/obj/machinery/power/emitter/process()
/obj/machinery/power/emitter/update_icon()
/obj/machinery/power/emitter/verb/rotate()
/obj/machinery/power/generator
/obj/machinery/power/generator/New()
/obj/machinery/power/generator/Topic(href, href_list)
/obj/machinery/power/generator/attack_ai(mob/user)
/obj/machinery/power/generator/attack_hand(mob/user)
/obj/machinery/power/generator/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/power/generator/interact(mob/user)
/obj/machinery/power/generator/power_change()
/obj/machinery/power/generator/process()
/obj/machinery/power/generator/reconnect()
/obj/machinery/power/generator/updateicon()
/obj/machinery/power/generator/verb/rotate_anticlock()
/obj/machinery/power/generator/verb/rotate_clock()
/obj/machinery/power/generator_type2
/obj/machinery/power/generator_type2/New()
/obj/machinery/power/generator_type2/Topic(href, href_list)
/obj/machinery/power/generator_type2/attack_ai(mob/user)
/obj/machinery/power/generator_type2/attack_hand(mob/user)
/obj/machinery/power/generator_type2/interact(mob/user)
/obj/machinery/power/generator_type2/power_change()
/obj/machinery/power/generator_type2/process()
/obj/machinery/power/generator_type2/updateicon()
/obj/machinery/power/get_connections()
/obj/machinery/power/get_indirect_connections()
/obj/machinery/power/get_solars_powernet()
/obj/machinery/power/monitor
/obj/machinery/power/monitor/New()
/obj/machinery/power/monitor/Topic(href, href_list)
/obj/machinery/power/monitor/attack_ai(mob/user)
/obj/machinery/power/monitor/attack_hand(mob/user)
/obj/machinery/power/monitor/attackby(I as obj, user as mob)
/obj/machinery/power/monitor/interact(mob/user)
/obj/machinery/power/monitor/power_change()
/obj/machinery/power/port_gen
/obj/machinery/power/port_gen/DropFuel()
/obj/machinery/power/port_gen/HasFuel()
/obj/machinery/power/port_gen/UseFuel()
/obj/machinery/power/port_gen/attack_hand(mob/user as mob)
/obj/machinery/power/port_gen/examine()
/obj/machinery/power/port_gen/handleInactive()
/obj/machinery/power/port_gen/pacman
/obj/machinery/power/port_gen/pacman/Destroy()
/obj/machinery/power/port_gen/pacman/DropFuel()
/obj/machinery/power/port_gen/pacman/HasFuel()
/obj/machinery/power/port_gen/pacman/New()
/obj/machinery/power/port_gen/pacman/RefreshParts()
/obj/machinery/power/port_gen/pacman/Topic(href, href_list)
/obj/machinery/power/port_gen/pacman/UseFuel()
/obj/machinery/power/port_gen/pacman/attack_ai(mob/user as mob)
/obj/machinery/power/port_gen/pacman/attack_hand(mob/user as mob)
/obj/machinery/power/port_gen/pacman/attack_paw(mob/user as mob)
/obj/machinery/power/port_gen/pacman/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/power/port_gen/pacman/examine()
/obj/machinery/power/port_gen/pacman/handleInactive()
/obj/machinery/power/port_gen/pacman/initialize()
/obj/machinery/power/port_gen/pacman/interact(mob/user)
/obj/machinery/power/port_gen/pacman/mrs
/obj/machinery/power/port_gen/pacman/mrs/overheat()
/obj/machinery/power/port_gen/pacman/overheat()
/obj/machinery/power/port_gen/pacman/super
/obj/machinery/power/port_gen/pacman/super/overheat()
/obj/machinery/power/port_gen/process()
/obj/machinery/power/rad_collector
/obj/machinery/power/rad_collector/Destroy()
/obj/machinery/power/rad_collector/New()
/obj/machinery/power/rad_collector/attack_hand(mob/user as mob)
/obj/machinery/power/rad_collector/attackby(obj/item/W, mob/user)
/obj/machinery/power/rad_collector/eject()
/obj/machinery/power/rad_collector/ex_act(severity)
/obj/machinery/power/rad_collector/process()
/obj/machinery/power/rad_collector/receive_pulse(var/pulse_strength)
/obj/machinery/power/rad_collector/toggle_power()
/obj/machinery/power/rad_collector/update_icons()
/obj/machinery/power/rust_core
/obj/machinery/power/rust_core/AddParticles(var/name, var/quantity = 1)
/obj/machinery/power/rust_core/Shutdown()
/obj/machinery/power/rust_core/Startup()
/obj/machinery/power/rust_core/Topic(href, href_list)
/obj/machinery/power/rust_core/attack_ai(mob/user)
/obj/machinery/power/rust_core/attack_hand(mob/user)
/obj/machinery/power/rust_core/attackby(obj/item/W, mob/user)
/obj/machinery/power/rust_core/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/power/rust_core/interact(mob/user)
/obj/machinery/power/rust_core/process()
/obj/machinery/power/rust_fuel_injector
/obj/machinery/power/rust_fuel_injector/BeginInjecting()
/obj/machinery/power/rust_fuel_injector/Inject()
/obj/machinery/power/rust_fuel_injector/StopInjecting()
/obj/machinery/power/rust_fuel_injector/Topic(href, href_list)
/obj/machinery/power/rust_fuel_injector/attack_ai(mob/user)
/obj/machinery/power/rust_fuel_injector/attack_hand(mob/user)
/obj/machinery/power/rust_fuel_injector/attackby(obj/item/W, mob/user)
/obj/machinery/power/rust_fuel_injector/attempt_fuel_swap()
/obj/machinery/power/rust_fuel_injector/interact(mob/user)
/obj/machinery/power/rust_fuel_injector/process()
/obj/machinery/power/rust_fuel_injector/verb/rotate_anticlock()
/obj/machinery/power/rust_fuel_injector/verb/rotate_clock()
/obj/machinery/power/smes
/obj/machinery/power/smes/New()
/obj/machinery/power/smes/Topic(href, href_list)
/obj/machinery/power/smes/add_load(var/amount)
/obj/machinery/power/smes/attack_ai(mob/user)
/obj/machinery/power/smes/attack_hand(mob/user)
/obj/machinery/power/smes/chargedisplay()
/obj/machinery/power/smes/emp_act(severity)
/obj/machinery/power/smes/ion_act()
/obj/machinery/power/smes/magical
/obj/machinery/power/smes/magical/process()
/obj/machinery/power/smes/process()
/obj/machinery/power/smes/restore()
/obj/machinery/power/smes/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/power/smes/updateicon()
/obj/machinery/power/solar
/obj/machinery/power/solar/Make(var/obj/item/solar_assembly/S)
/obj/machinery/power/solar/New(var/turf/loc, var/obj/item/solar_assembly/S, var/process = 1)
/obj/machinery/power/solar/attackby(obj/item/weapon/W, mob/user)
/obj/machinery/power/solar/blob_act()
/obj/machinery/power/solar/broken()
/obj/machinery/power/solar/connect_to_network(var/process)
/obj/machinery/power/solar/disconnect_from_network()
/obj/machinery/power/solar/ex_act(severity)
/obj/machinery/power/solar/fake/New(var/turf/loc, var/obj/item/solar_assembly/S)
/obj/machinery/power/solar/fake/process()
/obj/machinery/power/solar/healthcheck()
/obj/machinery/power/solar/meteorhit()
/obj/machinery/power/solar/process()
/obj/machinery/power/solar/update_icon()
/obj/machinery/power/solar/update_solar_exposure()
/obj/machinery/power/solar_control
/obj/machinery/power/solar_control/New()
/obj/machinery/power/solar_control/Topic(href, href_list)
/obj/machinery/power/solar_control/attack_ai(mob/user)
/obj/machinery/power/solar_control/attack_hand(mob/user)
/obj/machinery/power/solar_control/attackby(I as obj, user as mob)
/obj/machinery/power/solar_control/blob_act()
/obj/machinery/power/solar_control/broken()
/obj/machinery/power/solar_control/connect_to_network()
/obj/machinery/power/solar_control/disconnect_from_network()
/obj/machinery/power/solar_control/ex_act(severity)
/obj/machinery/power/solar_control/initialize()
/obj/machinery/power/solar_control/interact(mob/user)
/obj/machinery/power/solar_control/meteorhit()
/obj/machinery/power/solar_control/power_change()
/obj/machinery/power/solar_control/process()
/obj/machinery/power/solar_control/set_panels(var/cdir)
/obj/machinery/power/solar_control/tracker_update(var/angle)
/obj/machinery/power/solar_control/update_icon()
/obj/machinery/power/supermatter
/obj/machinery/power/supermatter/Bumped(atom/AM as mob|obj)
/obj/machinery/power/supermatter/Consume(var/mob/living/user)
/obj/machinery/power/supermatter/Destroy()
/obj/machinery/power/supermatter/New()
/obj/machinery/power/supermatter/attack_ai(mob/user as mob)
/obj/machinery/power/supermatter/attack_hand(mob/user as mob)
/obj/machinery/power/supermatter/attack_paw(mob/user as mob)
/obj/machinery/power/supermatter/attack_robot(mob/user as mob)
/obj/machinery/power/supermatter/attackby(obj/item/weapon/W as obj, mob/living/user as mob)
/obj/machinery/power/supermatter/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/power/supermatter/explode()
/obj/machinery/power/supermatter/process()
/obj/machinery/power/supermatter/shard
/obj/machinery/power/supermatter/transfer_energy()
/obj/machinery/power/surplus()
/obj/machinery/power/terminal
/obj/machinery/power/terminal/New()
/obj/machinery/power/terminal/hide(var/i)
/obj/machinery/power/tracker
/obj/machinery/power/tracker/New(var/turf/loc, var/obj/item/solar_assembly/S)
/obj/machinery/power/tracker/attackby(var/obj/item/weapon/W, var/mob/user)
/obj/machinery/power/tracker/connect_to_network()
/obj/machinery/power/tracker/disconnect_from_network()
/obj/machinery/power/tracker/process()
/obj/machinery/power/tracker/set_angle(var/angle)
/obj/machinery/power/turbine
/obj/machinery/power/turbine/New()
/obj/machinery/power/turbine/Topic(href, href_list)
/obj/machinery/power/turbine/interact(mob/user)
/obj/machinery/power/turbine/process()
/obj/machinery/power_change()
/obj/machinery/powered(var/chan = -1)
/obj/machinery/proc/getArea()
/obj/machinery/process()
/obj/machinery/processor
/obj/machinery/processor/attack_hand(var/mob/user as mob)
/obj/machinery/processor/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/processor/select_recipe(var/X)
/obj/machinery/programmable
/obj/machinery/programmable/New()
/obj/machinery/programmable/RefreshParts()
/obj/machinery/programmable/Topic(href, href_list)
/obj/machinery/programmable/attack_hand(mob/user as mob)
/obj/machinery/programmable/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/programmable/buildMenu()
/obj/machinery/programmable/crate_handler
/obj/machinery/programmable/delivery
/obj/machinery/programmable/interact(mob/user as mob)
/obj/machinery/programmable/new/datum/cargoprofile/food(),new/datum/cargoprofile/clothing(),new/datum/cargoprofile/trash())
/obj/machinery/programmable/printlist(var/list/L)
/obj/machinery/programmable/process()
/obj/machinery/programmable/stacker
/obj/machinery/programmable/unary
/obj/machinery/programmable/unary/New()
/obj/machinery/programmable/unary/Topic(href, href_list)
/obj/machinery/programmable/unary/buildMenu()
/obj/machinery/programmable/unary/shredder
/obj/machinery/programmable/unary/stacker
/obj/machinery/programmable/unary/trainer
/obj/machinery/programmable/unary/trainer/attack_hand(mob/user as mob)
/obj/machinery/programmable/unloader
/obj/machinery/r_n_d
/obj/machinery/r_n_d/
/obj/machinery/r_n_d//shock(mob/user, prb)
/obj/machinery/r_n_d/New()
/obj/machinery/r_n_d/Topic(href, href_list)
/obj/machinery/r_n_d/attack_hand(mob/user as mob)
/obj/machinery/r_n_d/circuit_imprinter
/obj/machinery/r_n_d/circuit_imprinter/New()
/obj/machinery/r_n_d/circuit_imprinter/RefreshParts()
/obj/machinery/r_n_d/circuit_imprinter/TotalMaterials()
/obj/machinery/r_n_d/circuit_imprinter/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/r_n_d/circuit_imprinter/blob_act()
/obj/machinery/r_n_d/circuit_imprinter/meteorhit()
/obj/machinery/r_n_d/destructive_analyzer
/obj/machinery/r_n_d/destructive_analyzer/ConvertReqString2List(var/list/source_list)
/obj/machinery/r_n_d/destructive_analyzer/New()
/obj/machinery/r_n_d/destructive_analyzer/RefreshParts()
/obj/machinery/r_n_d/destructive_analyzer/attackby(var/obj/O as obj, var/mob/user as mob)
/obj/machinery/r_n_d/destructive_analyzer/meteorhit()
/obj/machinery/r_n_d/protolathe
/obj/machinery/r_n_d/protolathe/New()
/obj/machinery/r_n_d/protolathe/RefreshParts()
/obj/machinery/r_n_d/protolathe/TotalMaterials()
/obj/machinery/r_n_d/protolathe/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/r_n_d/server
/obj/machinery/r_n_d/server/Destroy()
/obj/machinery/r_n_d/server/New()
/obj/machinery/r_n_d/server/RefreshParts()
/obj/machinery/r_n_d/server/attack_hand(mob/user as mob)
/obj/machinery/r_n_d/server/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/r_n_d/server/blob_act()
/obj/machinery/r_n_d/server/centcom
/obj/machinery/r_n_d/server/centcom/initialize()
/obj/machinery/r_n_d/server/centcom/process()
/obj/machinery/r_n_d/server/core
/obj/machinery/r_n_d/server/emp_act(severity)
/obj/machinery/r_n_d/server/ex_act(severity)
/obj/machinery/r_n_d/server/griefProtection()
/obj/machinery/r_n_d/server/initialize()
/obj/machinery/r_n_d/server/meteorhit(var/obj/O as obj)
/obj/machinery/r_n_d/server/process()
/obj/machinery/r_n_d/server/produce_heat(heat_amt)
/obj/machinery/r_n_d/server/robotics
/obj/machinery/radiocarbon_spectrometer
/obj/machinery/radiocarbon_spectrometer/New()
/obj/machinery/radiocarbon_spectrometer/Topic(href, href_list)
/obj/machinery/radiocarbon_spectrometer/attack_hand(var/mob/user as mob)
/obj/machinery/radiocarbon_spectrometer/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/machinery/radiocarbon_spectrometer/complete_scan()
/obj/machinery/radiocarbon_spectrometer/process()
/obj/machinery/radiocarbon_spectrometer/stop_scanning()
/obj/machinery/radiocarbon_spectrometer/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/radiocarbon_spectrometer/update_coolant()
/obj/machinery/readybutton
/obj/machinery/readybutton/New()
/obj/machinery/readybutton/attack_ai(mob/user as mob)
/obj/machinery/readybutton/attack_hand(mob/user as mob)
/obj/machinery/readybutton/attack_paw(mob/user as mob)
/obj/machinery/readybutton/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/readybutton/begin_event()
/obj/machinery/readybutton/update_icon()
/obj/machinery/reagentgrinder
/obj/machinery/reagentgrinder/New()
/obj/machinery/reagentgrinder/Topic(href, href_list)
/obj/machinery/reagentgrinder/attack_ai(mob/user as mob)
/obj/machinery/reagentgrinder/attack_hand(mob/user as mob)
/obj/machinery/reagentgrinder/attack_paw(mob/user as mob)
/obj/machinery/reagentgrinder/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/reagentgrinder/detach()
/obj/machinery/reagentgrinder/eject()
/obj/machinery/reagentgrinder/get_allowed_by_id(var/obj/item/weapon/grown/O)
/obj/machinery/reagentgrinder/get_allowed_juice_by_id(var/obj/item/weapon/reagent_containers/food/snacks/O)
/obj/machinery/reagentgrinder/get_allowed_snack_by_id(var/obj/item/weapon/reagent_containers/food/snacks/O)
/obj/machinery/reagentgrinder/get_grownweapon_amount(var/obj/item/weapon/grown/O)
/obj/machinery/reagentgrinder/get_juice_amount(var/obj/item/weapon/reagent_containers/food/snacks/grown/O)
/obj/machinery/reagentgrinder/grind()
/obj/machinery/reagentgrinder/interact(mob/user as mob)
/obj/machinery/reagentgrinder/is_allowed(var/obj/item/weapon/reagent_containers/O)
/obj/machinery/reagentgrinder/juice()
/obj/machinery/reagentgrinder/remove_object(var/obj/item/O)
/obj/machinery/reagentgrinder/update_icon()
/obj/machinery/recharge_station
/obj/machinery/recharge_station/New()
/obj/machinery/recharge_station/allow_drop()
/obj/machinery/recharge_station/build_icon()
/obj/machinery/recharge_station/emp_act(severity)
/obj/machinery/recharge_station/go_out()
/obj/machinery/recharge_station/process()
/obj/machinery/recharge_station/process_occupant()
/obj/machinery/recharge_station/relaymove(mob/user as mob)
/obj/machinery/recharge_station/restock_modules()
/obj/machinery/recharge_station/verb
/obj/machinery/recharge_station/verb/move_eject()
/obj/machinery/recharge_station/verb/move_inside()
/obj/machinery/recharger
/obj/machinery/recharger/attack_hand(mob/user as mob)
/obj/machinery/recharger/attack_paw(mob/user as mob)
/obj/machinery/recharger/attackby(obj/item/weapon/G as obj, mob/user as mob)
/obj/machinery/recharger/emp_act(severity)
/obj/machinery/recharger/process()
/obj/machinery/recharger/update_icon()
/obj/machinery/recharger/wallcharger
/obj/machinery/recharger/wallcharger/process()
/obj/machinery/recharger/wallcharger/update_icon()
/obj/machinery/recycler
/obj/machinery/recycler/Bump(var/atom/movable/AM)
/obj/machinery/recycler/Bumped(var/atom/movable/AM)
/obj/machinery/recycler/New()
/obj/machinery/recycler/attackby(var/obj/item/I, var/mob/user)
/obj/machinery/recycler/eat(var/mob/living/L)
/obj/machinery/recycler/examine()
/obj/machinery/recycler/power_change()
/obj/machinery/recycler/recycle(var/obj/item/I, var/sound = 1)
/obj/machinery/recycler/stop(var/mob/living/L)
/obj/machinery/recycler/update_icon()
/obj/machinery/removeAtProcessing()
/obj/machinery/replicator
/obj/machinery/replicator/New()
/obj/machinery/replicator/Topic(href, href_list)
/obj/machinery/replicator/attack_hand(mob/user as mob)
/obj/machinery/replicator/interact(mob/user)
/obj/machinery/replicator/process()
/obj/machinery/requests_console
/obj/machinery/requests_console/New()
/obj/machinery/requests_console/Topic(href, href_list)
/obj/machinery/requests_console/attack_hand(user as mob)
/obj/machinery/requests_console/attackby(var/obj/item/weapon/O as obj, var/mob/user as mob)
/obj/machinery/requests_console/power_change()
/obj/machinery/requests_console/update_icon()
/obj/machinery/robotic_fabricator
/obj/machinery/robotic_fabricator/Topic(href, href_list)
/obj/machinery/robotic_fabricator/attack_hand(user as mob)
/obj/machinery/robotic_fabricator/attack_paw(user as mob)
/obj/machinery/robotic_fabricator/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/robotic_fabricator/power_change()
/obj/machinery/rust/gyrotron
/obj/machinery/rust/gyrotron/Emit()
/obj/machinery/rust/gyrotron/New()
/obj/machinery/rust/gyrotron/Topic(href, href_list)
/obj/machinery/rust/gyrotron/UpdateIcon()
/obj/machinery/rust/gyrotron/control_panel
/obj/machinery/rust/gyrotron/control_panel/New()
/obj/machinery/rust/gyrotron/control_panel/interact(mob/user)
/obj/machinery/rust/rad_source
/obj/machinery/rust/rad_source/New()
/obj/machinery/rust/rad_source/process()
/obj/machinery/rust_fuel_assembly_port
/obj/machinery/rust_fuel_assembly_port/New(turf/loc, var/ndir, var/building=0)
/obj/machinery/rust_fuel_assembly_port/attack_hand(mob/user)
/obj/machinery/rust_fuel_assembly_port/attackby(obj/item/W, mob/user)
/obj/machinery/rust_fuel_assembly_port/attackby(var/obj/item/I, var/mob/user)
/obj/machinery/rust_fuel_assembly_port/eject_assembly()
/obj/machinery/rust_fuel_assembly_port/try_draw_assembly()
/obj/machinery/rust_fuel_assembly_port/try_insert_assembly()
/obj/machinery/rust_fuel_assembly_port/verb/eject_assembly_verb()
/obj/machinery/rust_fuel_compressor
/obj/machinery/rust_fuel_compressor/New(turf/loc, var/ndir, var/building=0)
/obj/machinery/rust_fuel_compressor/Topic(href, href_list)
/obj/machinery/rust_fuel_compressor/attack_ai(mob/user)
/obj/machinery/rust_fuel_compressor/attack_hand(mob/user)
/obj/machinery/rust_fuel_compressor/attackby(obj/item/W, mob/user)
/obj/machinery/rust_fuel_compressor/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/rust_fuel_compressor/interact(mob/user)
/obj/machinery/seed_extractor
/obj/machinery/seed_extractor/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/shield
/obj/machinery/shield/CanPass(atom/movable/mover, turf/target, height, air_group)
/obj/machinery/shield/Destroy()
/obj/machinery/shield/New()
/obj/machinery/shield/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/shield/blob_act()
/obj/machinery/shield/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/shield/emp_act(severity)
/obj/machinery/shield/ex_act(severity)
/obj/machinery/shield/hitby(AM as mob|obj)
/obj/machinery/shield/meteorhit()
/obj/machinery/shield/update_nearby_tiles(need_rebuild)
/obj/machinery/shield_capacitor
/obj/machinery/shield_capacitor/New()
/obj/machinery/shield_capacitor/Topic(href, href_list[])
/obj/machinery/shield_capacitor/attack_ai(user as mob)
/obj/machinery/shield_capacitor/attack_hand(mob/user)
/obj/machinery/shield_capacitor/attack_paw(user as mob)
/obj/machinery/shield_capacitor/attackby(obj/item/W, mob/user)
/obj/machinery/shield_capacitor/interact(mob/user)
/obj/machinery/shield_capacitor/power_change()
/obj/machinery/shield_capacitor/process()
/obj/machinery/shield_capacitor/verb/rotate()
/obj/machinery/shield_gen
/obj/machinery/shield_gen/New()
/obj/machinery/shield_gen/Topic(href, href_list[])
/obj/machinery/shield_gen/attack_ai(user as mob)
/obj/machinery/shield_gen/attack_hand(mob/user)
/obj/machinery/shield_gen/attack_paw(user as mob)
/obj/machinery/shield_gen/attackby(obj/item/W, mob/user)
/obj/machinery/shield_gen/ex_act(var/severity)
/obj/machinery/shield_gen/external/New()
/obj/machinery/shield_gen/external/get_shielded_turfs()
/obj/machinery/shield_gen/get_shielded_turfs()
/obj/machinery/shield_gen/interact(mob/user)
/obj/machinery/shield_gen/power_change()
/obj/machinery/shield_gen/process()
/obj/machinery/shield_gen/toggle()
/obj/machinery/shieldgen
/obj/machinery/shieldgen/Destroy()
/obj/machinery/shieldgen/attack_hand(mob/user as mob)
/obj/machinery/shieldgen/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/shieldgen/checkhp()
/obj/machinery/shieldgen/emp_act(severity)
/obj/machinery/shieldgen/ex_act(severity)
/obj/machinery/shieldgen/meteorhit(obj/O as obj)
/obj/machinery/shieldgen/process()
/obj/machinery/shieldgen/shields_down()
/obj/machinery/shieldgen/shields_up()
/obj/machinery/shieldgen/update_icon()
/obj/machinery/shieldwall
/obj/machinery/shieldwall/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/machinery/shieldwall/New(var/obj/machinery/shieldwallgen/A, var/obj/machinery/shieldwallgen/B)
/obj/machinery/shieldwall/attack_hand(mob/user as mob)
/obj/machinery/shieldwall/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/shieldwall/ex_act(severity)
/obj/machinery/shieldwall/process()
/obj/machinery/shieldwallgen
/obj/machinery/shieldwallgen/Destroy()
/obj/machinery/shieldwallgen/attack_hand(mob/user as mob)
/obj/machinery/shieldwallgen/attackby(obj/item/W, mob/user)
/obj/machinery/shieldwallgen/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/shieldwallgen/cleanup(var/NSEW)
/obj/machinery/shieldwallgen/power()
/obj/machinery/shieldwallgen/process()
/obj/machinery/shieldwallgen/setup_field(var/NSEW = 0)
/obj/machinery/shower
/obj/machinery/shower/Crossed(atom/movable/O)
/obj/machinery/shower/Uncrossed(atom/movable/O)
/obj/machinery/shower/attack_hand(mob/M as mob)
/obj/machinery/shower/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/shower/check_heat(mob/M as mob)
/obj/machinery/shower/process()
/obj/machinery/shower/update_icon()
/obj/machinery/shower/wash(atom/movable/O as obj|mob)
/obj/machinery/singularity/
/obj/machinery/singularity/Bump(atom/A)
/obj/machinery/singularity/Bumped(atom/A)
/obj/machinery/singularity/New(loc, var/starting_energy = 50, var/temp = 0)
/obj/machinery/singularity/admin_investigate_setup()
/obj/machinery/singularity/attack_ai()
/obj/machinery/singularity/attack_hand(mob/user as mob)
/obj/machinery/singularity/blob_act(severity)
/obj/machinery/singularity/bullet_act(obj/item/projectile/P)
/obj/machinery/singularity/canPull(var/atom/movable/A)
/obj/machinery/singularity/can_move(var/turf/T)
/obj/machinery/singularity/check_energy()
/obj/machinery/singularity/check_turfs_in(var/direction = 0, var/step = 0)
/obj/machinery/singularity/consume(var/atom/A)
/obj/machinery/singularity/dissipate()
/obj/machinery/singularity/eat()
/obj/machinery/singularity/emp_area()
/obj/machinery/singularity/event()
/obj/machinery/singularity/ex_act(severity)
/obj/machinery/singularity/expand(var/force_size = 0)
/obj/machinery/singularity/mezzer()
/obj/machinery/singularity/move(var/force_move = 0)
/obj/machinery/singularity/narsie
/obj/machinery/singularity/narsie/Bump(atom/A)
/obj/machinery/singularity/narsie/Bumped(atom/A)
/obj/machinery/singularity/narsie/acquire(var/mob/food)
/obj/machinery/singularity/narsie/consume(var/atom/A)
/obj/machinery/singularity/narsie/ex_act()
/obj/machinery/singularity/narsie/godsmack(var/atom/A)
/obj/machinery/singularity/narsie/large
/obj/machinery/singularity/narsie/large/New()
/obj/machinery/singularity/narsie/mezzer()
/obj/machinery/singularity/narsie/pickcultist()
/obj/machinery/singularity/narsie/process()
/obj/machinery/singularity/narsie/wizard
/obj/machinery/singularity/narsie/wizard/eat()
/obj/machinery/singularity/process()
/obj/machinery/singularity/pulse()
/obj/machinery/singularity/toxmob()
/obj/machinery/singularity_beacon
/obj/machinery/singularity_beacon/Activate(mob/user = null)
/obj/machinery/singularity_beacon/Deactivate(mob/user = null)
/obj/machinery/singularity_beacon/Destroy()
/obj/machinery/singularity_beacon/attack_ai(mob/user as mob)
/obj/machinery/singularity_beacon/attack_hand(var/mob/user as mob)
/obj/machinery/singularity_beacon/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/singularity_beacon/checkWirePower()
/obj/machinery/singularity_beacon/process()
/obj/machinery/singularity_beacon/syndicate
/obj/machinery/sleep_console
/obj/machinery/sleep_console/New()
/obj/machinery/sleep_console/Topic(href, href_list)
/obj/machinery/sleep_console/attack_ai(mob/user as mob)
/obj/machinery/sleep_console/attack_hand(mob/user as mob)
/obj/machinery/sleep_console/attack_paw(mob/user as mob)
/obj/machinery/sleep_console/ex_act(severity)
/obj/machinery/sleep_console/power_change()
/obj/machinery/sleep_console/process()
/obj/machinery/sleeper
/obj/machinery/sleeper/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/machinery/sleeper/New()
/obj/machinery/sleeper/allow_drop()
/obj/machinery/sleeper/alter_health(mob/living/M as mob)
/obj/machinery/sleeper/attackby(var/obj/item/weapon/G as obj, var/mob/user as mob)
/obj/machinery/sleeper/blob_act()
/obj/machinery/sleeper/check(mob/living/user as mob)
/obj/machinery/sleeper/emp_act(severity)
/obj/machinery/sleeper/ex_act(severity)
/obj/machinery/sleeper/go_out()
/obj/machinery/sleeper/inject_chemical(mob/living/user as mob, chemical, amount)
/obj/machinery/sleeper/process()
/obj/machinery/sleeper/toggle_filter()
/obj/machinery/sleeper/verb/eject()
/obj/machinery/sleeper/verb/move_inside()
/obj/machinery/sleeper/verb/remove_beaker()
/obj/machinery/slot_machine
/obj/machinery/slot_machine/Topic(href, href_list)
/obj/machinery/slot_machine/attack_hand(var/mob/user as mob)
/obj/machinery/smartfridge
/obj/machinery/smartfridge/Topic(href, href_list)
/obj/machinery/smartfridge/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/attack_ai(mob/user as mob)
/obj/machinery/smartfridge/attack_hand(mob/user as mob)
/obj/machinery/smartfridge/attack_paw(mob/user as mob)
/obj/machinery/smartfridge/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/machinery/smartfridge/extract
/obj/machinery/smartfridge/extract/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/medbay
/obj/machinery/smartfridge/medbay/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/power_change()
/obj/machinery/smartfridge/seeds
/obj/machinery/smartfridge/seeds/accept_check(var/obj/item/O as obj)
/obj/machinery/smartfridge/ui_interact(mob/user, ui_key = "main", var/datum/nanoui/ui = null)
/obj/machinery/space_heater
/obj/machinery/space_heater/New()
/obj/machinery/space_heater/Topic(href, href_list)
/obj/machinery/space_heater/air_conditioner
/obj/machinery/space_heater/air_conditioner/New()
/obj/machinery/space_heater/air_conditioner/Topic(href, href_list)
/obj/machinery/space_heater/air_conditioner/attack_hand(mob/user as mob)
/obj/machinery/space_heater/air_conditioner/attackby(obj/item/I, mob/user)
/obj/machinery/space_heater/air_conditioner/chill()
/obj/machinery/space_heater/air_conditioner/emp_act(severity)
/obj/machinery/space_heater/air_conditioner/examine()
/obj/machinery/space_heater/air_conditioner/interact(mob/user as mob)
/obj/machinery/space_heater/air_conditioner/process()
/obj/machinery/space_heater/air_conditioner/update_icon()
/obj/machinery/space_heater/attack_hand(mob/user as mob)
/obj/machinery/space_heater/attackby(obj/item/I, mob/user)
/obj/machinery/space_heater/emp_act(severity)
/obj/machinery/space_heater/examine()
/obj/machinery/space_heater/interact(mob/user as mob)
/obj/machinery/space_heater/process()
/obj/machinery/space_heater/update_icon()
/obj/machinery/sparker
/obj/machinery/sparker/New()
/obj/machinery/sparker/attack_ai()
/obj/machinery/sparker/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/sparker/emp_act(severity)
/obj/machinery/sparker/ignite()
/obj/machinery/sparker/power_change()
/obj/machinery/squeezer
/obj/machinery/state(var/msg)
/obj/machinery/status_display
/obj/machinery/status_display/New()
/obj/machinery/status_display/emp_act(severity)
/obj/machinery/status_display/examine()
/obj/machinery/status_display/get_shuttle_timer()
/obj/machinery/status_display/get_supply_shuttle_timer()
/obj/machinery/status_display/process()
/obj/machinery/status_display/receive_signal(datum/signal/signal)
/obj/machinery/status_display/remove_display()
/obj/machinery/status_display/set_message(m1, m2)
/obj/machinery/status_display/set_picture(state)
/obj/machinery/status_display/update()
/obj/machinery/status_display/update_display(line1, line2)
/obj/machinery/still
/obj/machinery/still/attack_hand(var/mob/user as mob)
/obj/machinery/still/attackby(var/obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/still/process()
/obj/machinery/suit_cycler
/obj/machinery/suit_cycler/Topic(href, href_list)
/obj/machinery/suit_cycler/apply_paintjob()
/obj/machinery/suit_cycler/attack_ai(mob/user as mob)
/obj/machinery/suit_cycler/attack_hand(mob/user as mob)
/obj/machinery/suit_cycler/attack_paw(mob/user as mob)
/obj/machinery/suit_cycler/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/suit_cycler/eject_occupant(mob/user as mob)
/obj/machinery/suit_cycler/engineering
/obj/machinery/suit_cycler/finished_job()
/obj/machinery/suit_cycler/mining
/obj/machinery/suit_cycler/process()
/obj/machinery/suit_cycler/repair_suit()
/obj/machinery/suit_cycler/shock(mob/user, prb)
/obj/machinery/suit_cycler/verb/leave()
/obj/machinery/suit_storage_unit
/obj/machinery/suit_storage_unit/New()
/obj/machinery/suit_storage_unit/Topic(href, href_list)
/obj/machinery/suit_storage_unit/attack_ai(mob/user as mob)
/obj/machinery/suit_storage_unit/attack_hand(mob/user as mob)
/obj/machinery/suit_storage_unit/attack_paw(mob/user as mob)
/obj/machinery/suit_storage_unit/attackby(obj/item/I as obj, mob/user as mob)
/obj/machinery/suit_storage_unit/cycletimeleft()
/obj/machinery/suit_storage_unit/dispense_helmet(mob/user as mob)
/obj/machinery/suit_storage_unit/dispense_mask(mob/user as mob)
/obj/machinery/suit_storage_unit/dispense_suit(mob/user as mob)
/obj/machinery/suit_storage_unit/dump_everything()
/obj/machinery/suit_storage_unit/eject_occupant(mob/user as mob)
/obj/machinery/suit_storage_unit/ex_act(severity)
/obj/machinery/suit_storage_unit/power_change()
/obj/machinery/suit_storage_unit/standard_unit
/obj/machinery/suit_storage_unit/start_UV(mob/user as mob)
/obj/machinery/suit_storage_unit/toggleUV(mob/user as mob)
/obj/machinery/suit_storage_unit/toggle_lock(mob/user as mob)
/obj/machinery/suit_storage_unit/toggle_open(mob/user as mob)
/obj/machinery/suit_storage_unit/togglesafeties(mob/user as mob)
/obj/machinery/suit_storage_unit/update_icon()
/obj/machinery/suit_storage_unit/verb/get_out()
/obj/machinery/suit_storage_unit/verb/move_inside()
/obj/machinery/suspension_gen
/obj/machinery/suspension_gen/Destroy()
/obj/machinery/suspension_gen/New()
/obj/machinery/suspension_gen/Topic(href, href_list)
/obj/machinery/suspension_gen/activate()
/obj/machinery/suspension_gen/attack_hand(mob/user as mob)
/obj/machinery/suspension_gen/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/suspension_gen/attempt_unlock(var/obj/item/weapon/card/C)
/obj/machinery/suspension_gen/deactivate()
/obj/machinery/suspension_gen/interact(mob/user as mob)
/obj/machinery/suspension_gen/process()
/obj/machinery/suspension_gen/verb/toggle()
/obj/machinery/syndicate_beacon
/obj/machinery/syndicate_beacon/Topic(href, href_list)
/obj/machinery/syndicate_beacon/attack_hand(var/mob/user as mob)
/obj/machinery/syndicate_beacon/selfdestruct()
/obj/machinery/telecomms
/obj/machinery/telecomms/Destroy()
/obj/machinery/telecomms/New()
/obj/machinery/telecomms/Options_Menu()
/obj/machinery/telecomms/Options_Topic(href, href_list)
/obj/machinery/telecomms/Topic(href, href_list)
/obj/machinery/telecomms/add_link(var/obj/machinery/telecomms/T)
/obj/machinery/telecomms/allinone
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(!freq_text)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(M)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(M)/if(data == 4)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(M)/if(istype(R, /mob/living/silicon/ai))
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(compression > 0)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(data == 1)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(data == 1)/if(R.receive_range(SYND_FREQ, level) > -1)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(data == 1)/if(R.receive_range(display_freq, level) > -1)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(data == 1)/if(istype(R, /obj/item/device/radio/headset))
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(data == 3)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(istype(R, /mob/new_player))
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(istype(blackbox))
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(istype(blackbox))/if(data == 4)
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/if(istype(blackbox))/if(istype(R, /mob/living/silicon/ai))
/obj/machinery/telecomms/allinone/receive_signal(datum/signal/signal)/switch(display_freq)
/obj/machinery/telecomms/attack_ai(var/mob/user as mob)
/obj/machinery/telecomms/attack_hand(var/mob/user as mob)
/obj/machinery/telecomms/attackby(obj/item/P as obj, mob/user as mob)
/obj/machinery/telecomms/broadcaster
/obj/machinery/telecomms/broadcaster/Destroy()
/obj/machinery/telecomms/broadcaster/preset_left
/obj/machinery/telecomms/broadcaster/preset_right
/obj/machinery/telecomms/broadcaster/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/bus
/obj/machinery/telecomms/bus/Options_Menu()
/obj/machinery/telecomms/bus/Options_Topic(href, href_list)
/obj/machinery/telecomms/bus/preset_four
/obj/machinery/telecomms/bus/preset_four/New()
/obj/machinery/telecomms/bus/preset_one
/obj/machinery/telecomms/bus/preset_three
/obj/machinery/telecomms/bus/preset_two
/obj/machinery/telecomms/bus/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/canAccess(var/mob/user)
/obj/machinery/telecomms/checkheat()
/obj/machinery/telecomms/emp_act(severity)
/obj/machinery/telecomms/get_multitool(mob/user as mob)
/obj/machinery/telecomms/hub
/obj/machinery/telecomms/hub/preset
/obj/machinery/telecomms/hub/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/initialize()
/obj/machinery/telecomms/is_freq_listening(datum/signal/signal)
/obj/machinery/telecomms/process()
/obj/machinery/telecomms/processor
/obj/machinery/telecomms/processor/preset_four
/obj/machinery/telecomms/processor/preset_one
/obj/machinery/telecomms/processor/preset_three
/obj/machinery/telecomms/processor/preset_two
/obj/machinery/telecomms/processor/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/produce_heat(heat_amt)
/obj/machinery/telecomms/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/receiver
/obj/machinery/telecomms/receiver/check_receive_level(datum/signal/signal)
/obj/machinery/telecomms/receiver/preset_left
/obj/machinery/telecomms/receiver/preset_right
/obj/machinery/telecomms/receiver/preset_right/New()
/obj/machinery/telecomms/receiver/receive_signal(datum/signal/signal)
/obj/machinery/telecomms/relay
/obj/machinery/telecomms/relay/Options_Menu()
/obj/machinery/telecomms/relay/Options_Topic(href, href_list)
/obj/machinery/telecomms/relay/can(datum/signal/signal)
/obj/machinery/telecomms/relay/can_receive(datum/signal/signal)
/obj/machinery/telecomms/relay/can_send(datum/signal/signal)
/obj/machinery/telecomms/relay/preset
/obj/machinery/telecomms/relay/preset/centcom
/obj/machinery/telecomms/relay/preset/mining
/obj/machinery/telecomms/relay/preset/ruskie
/obj/machinery/telecomms/relay/preset/station
/obj/machinery/telecomms/relay/preset/telecomms
/obj/machinery/telecomms/relay/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/relay/toggle_level()
/obj/machinery/telecomms/relay_direct_information(datum/signal/signal, obj/machinery/telecomms/machine)
/obj/machinery/telecomms/relay_information(datum/signal/signal, filter, copysig, amount = 20)
/obj/machinery/telecomms/server
/obj/machinery/telecomms/server/New()
/obj/machinery/telecomms/server/add_entry(var/content, var/input)
/obj/machinery/telecomms/server/compile()
/obj/machinery/telecomms/server/presets
/obj/machinery/telecomms/server/presets/command
/obj/machinery/telecomms/server/presets/common
/obj/machinery/telecomms/server/presets/common/New()
/obj/machinery/telecomms/server/presets/engineering
/obj/machinery/telecomms/server/presets/medical
/obj/machinery/telecomms/server/presets/science
/obj/machinery/telecomms/server/presets/security
/obj/machinery/telecomms/server/presets/supply
/obj/machinery/telecomms/server/receive_information(datum/signal/signal, obj/machinery/telecomms/machine_from)
/obj/machinery/telecomms/server/setcode(var/t)
/obj/machinery/telecomms/server/update_logs()
/obj/machinery/telecomms/update_icon()
/obj/machinery/telecomms/update_power()
/obj/machinery/telepad
/obj/machinery/telepad_cargo
/obj/machinery/telepad_cargo/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/teleport
/obj/machinery/teleport/hub
/obj/machinery/teleport/hub/Bumped(M as mob|obj)
/obj/machinery/teleport/hub/attack_ghost(mob/user as mob)
/obj/machinery/teleport/hub/teleport(atom/movable/M as mob|obj)
/obj/machinery/teleport/station
/obj/machinery/teleport/station/attack_ai()
/obj/machinery/teleport/station/attack_hand()
/obj/machinery/teleport/station/attack_paw()
/obj/machinery/teleport/station/attackby(var/obj/item/weapon/W)
/obj/machinery/teleport/station/disengage()
/obj/machinery/teleport/station/engage()
/obj/machinery/teleport/station/power_change()
/obj/machinery/teleport/station/verb/testfire()
/obj/machinery/telescience/station/attack_ai(mob/user)
/obj/machinery/the_singularitygen/
/obj/machinery/the_singularitygen/attackby(obj/item/W, mob/user)
/obj/machinery/the_singularitygen/process()
/obj/machinery/transformer
/obj/machinery/transformer/Bumped(var/atom/movable/AM)
/obj/machinery/transformer/New()
/obj/machinery/transformer/conveyor/New()
/obj/machinery/transformer/do_transform(var/mob/living/carbon/human/H)
/obj/machinery/transformer/do_transform_mime(var/obj/item/I)
/obj/machinery/transformer/mime
/obj/machinery/transformer/mime/Bumped(var/atom/movable/AM)
/obj/machinery/transformer/mime/conveyor/New()
/obj/machinery/transformer/power_change()
/obj/machinery/transformer/update_icon()
/obj/machinery/transformer/xray
/obj/machinery/transformer/xray/Bumped(var/atom/movable/AM)
/obj/machinery/transformer/xray/New()
/obj/machinery/transformer/xray/conveyor/New()
/obj/machinery/transformer/xray/irradiate(var/mob/living/carbon/human/H)
/obj/machinery/transformer/xray/power_change()
/obj/machinery/transformer/xray/scan(var/obj/item/I)
/obj/machinery/transformer/xray/update_icon()
/obj/machinery/turret
/obj/machinery/turret/New()
/obj/machinery/turret/attack_alien(mob/living/carbon/alien/humanoid/M as mob)
/obj/machinery/turret/attack_animal(mob/living/simple_animal/M as mob)
/obj/machinery/turret/attackby(obj/item/weapon/W, mob/user)
/obj/machinery/turret/bullet_act(var/obj/item/projectile/Proj)
/obj/machinery/turret/check_target(var/atom/movable/T as mob|obj)
/obj/machinery/turret/die()
/obj/machinery/turret/emp_act(severity)
/obj/machinery/turret/ex_act(severity)
/obj/machinery/turret/get_new_target()
/obj/machinery/turret/get_protected_area()
/obj/machinery/turret/isDown()
/obj/machinery/turret/isPopping()
/obj/machinery/turret/popDown()
/obj/machinery/turret/popUp()
/obj/machinery/turret/power_change()
/obj/machinery/turret/process()
/obj/machinery/turret/setState(var/enabled, var/lethal)
/obj/machinery/turret/shootAt(var/atom/movable/target)
/obj/machinery/turret/target()
/obj/machinery/turretcover
/obj/machinery/turretid
/obj/machinery/turretid/New()
/obj/machinery/turretid/Topic(href, href_list)
/obj/machinery/turretid/attack_ai(mob/user as mob)
/obj/machinery/turretid/attack_hand(mob/user as mob)
/obj/machinery/turretid/attackby(obj/item/weapon/W, mob/user)
/obj/machinery/turretid/updateTurrets()
/obj/machinery/turretid/update_icons()
/obj/machinery/use_power(var/amount, var/chan = -1, var/autocalled = 0)
/obj/machinery/vending
/obj/machinery/vending/New()
/obj/machinery/vending/Topic(href, href_list)
/obj/machinery/vending/assist
/obj/machinery/vending/attack_ai(mob/user as mob)
/obj/machinery/vending/attack_hand(mob/user as mob)
/obj/machinery/vending/attack_paw(mob/user as mob)
/obj/machinery/vending/attackby(obj/item/weapon/W, mob/user)
/obj/machinery/vending/autodrobe
/obj/machinery/vending/blob_act()
/obj/machinery/vending/boozeomat
/obj/machinery/vending/build_inventory(var/list/productlist,hidden=0,req_coin=0)
/obj/machinery/vending/cart
/obj/machinery/vending/chinese
/obj/machinery/vending/cigarette
/obj/machinery/vending/coffee
/obj/machinery/vending/cola
/obj/machinery/vending/dinnerware
/obj/machinery/vending/engineering
/obj/machinery/vending/engivend
/obj/machinery/vending/eva
/obj/machinery/vending/ex_act(severity)
/obj/machinery/vending/hatdispenser
/obj/machinery/vending/hydronutrients
/obj/machinery/vending/hydroseeds
/obj/machinery/vending/magivend
/obj/machinery/vending/malfunction()
/obj/machinery/vending/medical
/obj/machinery/vending/plasmaresearch
/obj/machinery/vending/power_change()
/obj/machinery/vending/process()
/obj/machinery/vending/refill_inventory(obj/item/weapon/vending_refill/refill, datum/data/vending_product/machine, mob/user)
/obj/machinery/vending/robotics
/obj/machinery/vending/scan_card(var/obj/item/weapon/card/I)
/obj/machinery/vending/security
/obj/machinery/vending/shock(mob/user, prb)
/obj/machinery/vending/shoedispenser
/obj/machinery/vending/snack
/obj/machinery/vending/sovietsoda
/obj/machinery/vending/speak(var/message)
/obj/machinery/vending/stock(var/datum/data/vending_product/R, var/mob/user)
/obj/machinery/vending/suitdispenser
/obj/machinery/vending/sustenance
/obj/machinery/vending/throw_item()
/obj/machinery/vending/tool
/obj/machinery/vending/vend(datum/data/vending_product/R, mob/user)
/obj/machinery/vending/wallmed1
/obj/machinery/vending/wallmed2
/obj/machinery/vending/wires()
/obj/machinery/washing_machine
/obj/machinery/washing_machine/attack_hand(mob/user as mob)
/obj/machinery/washing_machine/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/machinery/washing_machine/update_icon()
/obj/machinery/washing_machine/verb/climb_out()
/obj/machinery/washing_machine/verb/start()
/obj/machinery/wish_granter
/obj/machinery/wish_granter/attack_hand(var/mob/user as mob)
/obj/machinery/zero_point_emitter
/obj/machinery/zero_point_emitter/New()
/obj/machinery/zero_point_emitter/Topic(href, href_list)
/obj/machinery/zero_point_emitter/attack_hand(mob/user as mob)
/obj/machinery/zero_point_emitter/attackby(obj/item/W, mob/user)
/obj/machinery/zero_point_emitter/emp_act(var/severity)
/obj/machinery/zero_point_emitter/power_change()
/obj/machinery/zero_point_emitter/process()
/obj/machinery/zero_point_emitter/update_icon()
/obj/machinery/zero_point_emitter/verb/rotate()
/obj/machinery/zvent
/obj/machinery/zvent/process()
/obj/mecha
/obj/mecha/Bump(var/atom/obstacle)
/obj/mecha/Destroy()
/obj/mecha/Move()
/obj/mecha/New()
/obj/mecha/Topic(href, href_list)
/obj/mecha/absorbDamage(damage,damage_type)
/obj/mecha/addVerb(verb_path)
/obj/mecha/add_airtank()
/obj/mecha/add_cabin()
/obj/mecha/add_cell(var/obj/item/weapon/cell/C=null)
/obj/mecha/add_iterators()
/obj/mecha/add_radio()
/obj/mecha/attack_alien(mob/user as mob)
/obj/mecha/attack_animal(mob/living/simple_animal/user as mob)
/obj/mecha/attack_hand(mob/user as mob)
/obj/mecha/attack_paw(mob/user as mob)
/obj/mecha/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/mecha/blob_act()
/obj/mecha/bullet_act(var/obj/item/projectile/Proj)
/obj/mecha/check_access(obj/item/weapon/card/id/I, list/access_list)
/obj/mecha/check_for_internal_damage(var/list/possible_int_damage,var/ignore_threshold=null)
/obj/mecha/check_for_support()
/obj/mecha/clearInternalDamage(int_dam_flag)
/obj/mecha/click_action(atom/target,mob/user)
/obj/mecha/combat
/obj/mecha/combat/Topic(href,href_list)
/obj/mecha/combat/durand
/obj/mecha/combat/durand/Topic(href, href_list)
/obj/mecha/combat/durand/get_commands()
/obj/mecha/combat/durand/get_stats_part()
/obj/mecha/combat/durand/old
/obj/mecha/combat/durand/relaymove(mob/user,direction)
/obj/mecha/combat/durand/verb/defence_mode()
/obj/mecha/combat/go_out()
/obj/mecha/combat/gygax
/obj/mecha/combat/gygax/Topic(href, href_list)
/obj/mecha/combat/gygax/dark
/obj/mecha/combat/gygax/dark/New()
/obj/mecha/combat/gygax/dark/add_cell(var/obj/item/weapon/cell/C=null)
/obj/mecha/combat/gygax/dyndomove(direction)
/obj/mecha/combat/gygax/get_commands()
/obj/mecha/combat/gygax/get_stats_part()
/obj/mecha/combat/gygax/verb/overload()
/obj/mecha/combat/honker
/obj/mecha/combat/honker/Topic(href, href_list)
/obj/mecha/combat/honker/get_commands()
/obj/mecha/combat/honker/get_equipment_list()
/obj/mecha/combat/honker/get_stats_html()
/obj/mecha/combat/honker/get_stats_part()
/obj/mecha/combat/honker/mechstep(direction)
/obj/mecha/combat/honker/melee_action(target)
/obj/mecha/combat/marauder
/obj/mecha/combat/marauder/New()
/obj/mecha/combat/marauder/Topic(href, href_list)
/obj/mecha/combat/marauder/get_commands()
/obj/mecha/combat/marauder/get_stats_part()
/obj/mecha/combat/marauder/go_out()
/obj/mecha/combat/marauder/mauler
/obj/mecha/combat/marauder/relaymove(mob/user,direction)
/obj/mecha/combat/marauder/seraph
/obj/mecha/combat/marauder/seraph/New()
/obj/mecha/combat/marauder/verb/smoke()
/obj/mecha/combat/marauder/verb/toggle_thrusters()
/obj/mecha/combat/marauder/verb/zoom()
/obj/mecha/combat/melee_action(target as obj|mob|turf)
/obj/mecha/combat/mmi_moved_inside(var/obj/item/device/mmi/mmi_as_oc as obj,mob/user as mob)
/obj/mecha/combat/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/mecha/combat/phazon
/obj/mecha/combat/phazon/Bump(var/atom/obstacle)
/obj/mecha/combat/phazon/New()
/obj/mecha/combat/phazon/Topic(href, href_list)
/obj/mecha/combat/phazon/click_action(atom/target,mob/user)
/obj/mecha/combat/phazon/get_commands()
/obj/mecha/combat/phazon/verb/switch_damtype()
/obj/mecha/combat/recitence
/obj/mecha/combat/recitence/loaded/New()
/obj/mecha/connect(obj/machinery/atmospherics/portables_connector/new_port)
/obj/mecha/destroy()
/obj/mecha/disconnect()
/obj/mecha/do_after(delay as num)
/obj/mecha/domove(direction)
/obj/mecha/drop_item()
/obj/mecha/dynabsorbdamage(damage,damage_type)
/obj/mecha/dynattackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/mecha/dynbulletdamage(var/obj/item/projectile/Proj)
/obj/mecha/dyndomove(direction)
/obj/mecha/dyngetcharge()
/obj/mecha/dynhitby(atom/movable/A)
/obj/mecha/dynusepower(amount)
/obj/mecha/emp_act(severity)
/obj/mecha/enter_after(delay as num, var/mob/user as mob, var/numticks = 5)
/obj/mecha/ex_act(severity)
/obj/mecha/examine()
/obj/mecha/get_charge()
/obj/mecha/get_commands()
/obj/mecha/get_equipment_list()
/obj/mecha/get_equipment_menu()
/obj/mecha/get_log_html()
/obj/mecha/get_stats_html()
/obj/mecha/get_stats_part()
/obj/mecha/get_turf_air()
/obj/mecha/give_power(amount)
/obj/mecha/go_out()
/obj/mecha/hasInternalDamage(int_dam_flag=null)
/obj/mecha/has_charge(amount)
/obj/mecha/hear_talk(mob/M as mob, text)
/obj/mecha/hitby(atom/movable/A as mob|obj)
/obj/mecha/internals_access_allowed(mob/living/carbon/human/H)
/obj/mecha/log_append_to_last(message as text,red=null)
/obj/mecha/log_message(message as text,red=null)
/obj/mecha/mechstep(direction)
/obj/mecha/mechsteprand()
/obj/mecha/mechturn(direction)
/obj/mecha/medical/New()
/obj/mecha/medical/mechstep(direction)
/obj/mecha/medical/mechsteprand()
/obj/mecha/medical/mechturn(direction)
/obj/mecha/medical/odysseus
/obj/mecha/medical/odysseus/New()
/obj/mecha/medical/odysseus/go_out()
/obj/mecha/medical/odysseus/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/mecha/melee_action(atom/target)
/obj/mecha/meteorhit()
/obj/mecha/mmi_move_inside(var/obj/item/device/mmi/mmi_as_oc as obj,mob/user as mob)
/obj/mecha/mmi_moved_inside(var/obj/item/device/mmi/mmi_as_oc as obj,mob/user as mob)
/obj/mecha/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/mecha/occupant_message(message as text)
/obj/mecha/operation_allowed(mob/living/carbon/human/H)
/obj/mecha/output_access_dialog(obj/item/weapon/card/id/id_card, mob/user)
/obj/mecha/output_maintenance_dialog(obj/item/weapon/card/id/id_card,mob/user)
/obj/mecha/range_action(atom/target)
/obj/mecha/relaymove(mob/user,direction)
/obj/mecha/removeVerb(verb_path)
/obj/mecha/remove_air(amount)
/obj/mecha/report_internal_damage()
/obj/mecha/reset_icon()
/obj/mecha/return_air()
/obj/mecha/return_pressure()
/obj/mecha/return_temperature()
/obj/mecha/setInternalDamage(int_dam_flag)
/obj/mecha/take_damage(amount, type="brute")
/obj/mecha/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/mecha/update_health()
/obj/mecha/use_power(amount)
/obj/mecha/verb/connect_to_port()
/obj/mecha/verb/disconnect_from_port()
/obj/mecha/verb/eject()
/obj/mecha/verb/move_inside()
/obj/mecha/verb/toggle_internal_tank()
/obj/mecha/verb/toggle_lights()
/obj/mecha/verb/view_stats()
/obj/mecha/working
/obj/mecha/working/New()
/obj/mecha/working/hoverpod
/obj/mecha/working/hoverpod/dyndomove(direction)
/obj/mecha/working/hoverpod/mechstep(direction)
/obj/mecha/working/hoverpod/mechsteprand()
/obj/mecha/working/hoverpod/mechturn(direction)
/obj/mecha/working/range_action(atom/target as obj|mob|turf)
/obj/mecha/working/ripley
/obj/mecha/working/ripley/Destroy()
/obj/mecha/working/ripley/Exit(atom/movable/O)
/obj/mecha/working/ripley/Topic(href, href_list)
/obj/mecha/working/ripley/deathripley
/obj/mecha/working/ripley/deathripley/New()
/obj/mecha/working/ripley/firefighter
/obj/mecha/working/ripley/get_stats_part()
/obj/mecha/working/ripley/mining
/obj/mecha/working/ripley/mining/New()
/obj/process()
/obj/random
/obj/random/New()
/obj/random/bomb_supply
/obj/random/bomb_supply/item_to_spawn()
/obj/random/item_to_spawn()
/obj/random/powercell
/obj/random/powercell/item_to_spawn()
/obj/random/spawn_item()
/obj/random/tech_supply
/obj/random/tech_supply/item_to_spawn()
/obj/random/technology_scanner
/obj/random/technology_scanner/item_to_spawn()
/obj/random/tool
/obj/random/tool/item_to_spawn()
/obj/random/toolbox
/obj/random/toolbox/item_to_spawn()
/obj/receive_signal(datum/signal/signal, receive_method, receive_param)
/obj/remove_air(amount)
/obj/return_air()
/obj/screen
/obj/screen/Click(location, control, params)
/obj/screen/close
/obj/screen/close/Click()
/obj/screen/grab
/obj/screen/grab/Click()
/obj/screen/grab/attack_hand()
/obj/screen/grab/attackby()
/obj/screen/gun
/obj/screen/gun/item
/obj/screen/gun/mode
/obj/screen/gun/move
/obj/screen/gun/run
/obj/screen/inventory
/obj/screen/inventory/Click()
/obj/screen/item_action
/obj/screen/item_action/Click()
/obj/screen/storage
/obj/screen/storage/Click()
/obj/screen/text
/obj/screen/zone_sel
/obj/screen/zone_sel/Click(location, control,params)
/obj/screen/zone_sel/update_icon()
/obj/sdsdsd()
/obj/skeleton
/obj/skeleton/New()
/obj/skeleton/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/spacepod
/obj/spacepod/MouseDrop_T(mob/M as mob, mob/user as mob)
/obj/spacepod/Move(NewLoc, Dir = 0, step_x = 0, step_y = 0)
/obj/spacepod/New()
/obj/spacepod/Process_Spacemove(var/check_drift = 0, mob/user)
/obj/spacepod/add_airtank()
/obj/spacepod/add_cabin()
/obj/spacepod/attack_hand(mob/user as mob)
/obj/spacepod/attackby(obj/item/W as obj, mob/user as mob)
/obj/spacepod/civilian
/obj/spacepod/enter_after(delay as num, var/mob/user as mob, var/numticks = 5)
/obj/spacepod/fire_weapons()
/obj/spacepod/get_turf_air()
/obj/spacepod/moved_inside(var/mob/living/carbon/human/H as mob)
/obj/spacepod/random
/obj/spacepod/random/New()
/obj/spacepod/relaymove(mob/user, direction)
/obj/spacepod/remove_air(amount)
/obj/spacepod/return_air()
/obj/spacepod/return_pressure()
/obj/spacepod/return_temperature()
/obj/spacepod/verb/exit_pod()
/obj/spacepod/verb/move_inside()
/obj/spacepod/verb/toggle_internal_tank()
/obj/structure
/obj/structure/AIcore
/obj/structure/AIcore/attackby(obj/item/P as obj, mob/user as mob)
/obj/structure/AIcore/deactivated
/obj/structure/AIcore/deactivated/attackby(var/obj/item/device/aicard/A as obj, var/mob/user as mob)
/obj/structure/Del()
/obj/structure/Destroy()
/obj/structure/New()
/obj/structure/artilleryplaceholder
/obj/structure/artilleryplaceholder/decorative
/obj/structure/barricade/wooden
/obj/structure/barricade/wooden/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/barricade/wooden/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/barricade/wooden/blob_act()
/obj/structure/barricade/wooden/ex_act(severity)
/obj/structure/barricade/wooden/meteorhit()
/obj/structure/bedsheetbin
/obj/structure/bedsheetbin/attack_hand(mob/user as mob)
/obj/structure/bedsheetbin/attack_paw(mob/user as mob)
/obj/structure/bedsheetbin/attack_tk(mob/user as mob)
/obj/structure/bedsheetbin/attackby(obj/item/I as obj, mob/user as mob)
/obj/structure/bedsheetbin/examine()
/obj/structure/bedsheetbin/update_icon()
/obj/structure/bigDelivery
/obj/structure/bigDelivery/attack_hand(mob/user as mob)
/obj/structure/bigDelivery/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/blob_act()
/obj/structure/bookcase
/obj/structure/bookcase/attack_hand(var/mob/user as mob)
/obj/structure/bookcase/attackby(obj/O as obj, mob/user as mob)
/obj/structure/bookcase/ex_act(severity)
/obj/structure/bookcase/initialize()
/obj/structure/bookcase/manuals/engineering
/obj/structure/bookcase/manuals/engineering/New()
/obj/structure/bookcase/manuals/medical
/obj/structure/bookcase/manuals/medical/New()
/obj/structure/bookcase/manuals/research_and_development
/obj/structure/bookcase/manuals/research_and_development/New()
/obj/structure/bookcase/manuals/xenoarchaeology
/obj/structure/bookcase/manuals/xenoarchaeology/New()
/obj/structure/bookcase/update_icon()
/obj/structure/boulder
/obj/structure/boulder/New()
/obj/structure/boulder/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/bush
/obj/structure/bush/New()
/obj/structure/bush/attackby(var/obj/I as obj, var/mob/user as mob)
/obj/structure/c_tray
/obj/structure/c_tray/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/structure/c_tray/attack_hand(mob/user as mob)
/obj/structure/c_tray/attack_paw(mob/user as mob)
/obj/structure/cable
/obj/structure/cable/Destroy()
/obj/structure/cable/New()
/obj/structure/cable/attack_tk(mob/user)
/obj/structure/cable/attackby(obj/item/W, mob/user)
/obj/structure/cable/blue
/obj/structure/cable/cableColor(var/colorC)
/obj/structure/cable/cyan
/obj/structure/cable/ex_act(severity)
/obj/structure/cable/get_connections()
/obj/structure/cable/get_powernet()
/obj/structure/cable/green
/obj/structure/cable/heavyduty
/obj/structure/cable/heavyduty/attackby(obj/item/W, mob/user)
/obj/structure/cable/heavyduty/cableColor(var/colorC)
/obj/structure/cable/hide(var/i)
/obj/structure/cable/mergeConnectedNetworks(var/direction)
/obj/structure/cable/mergeConnectedNetworksOnTurf()
/obj/structure/cable/orange
/obj/structure/cable/pink
/obj/structure/cable/shock(mob/user, prb, var/siemens_coeff = 1.0)
/obj/structure/cable/updateicon()
/obj/structure/cable/white
/obj/structure/cable/yellow
/obj/structure/closet
/obj/structure/closet/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/closet/Destroy()
/obj/structure/closet/Exit(atom/movable/AM)
/obj/structure/closet/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/structure/closet/New()
/obj/structure/closet/acloset
/obj/structure/closet/alter_health()
/obj/structure/closet/athletic_mixed
/obj/structure/closet/athletic_mixed/New()
/obj/structure/closet/attack_animal(mob/living/simple_animal/user as mob)
/obj/structure/closet/attack_hand(mob/user as mob)
/obj/structure/closet/attack_paw(mob/user as mob)
/obj/structure/closet/attack_self_tk(mob/user as mob)
/obj/structure/closet/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/closet/blob_act()
/obj/structure/closet/body_bag
/obj/structure/closet/body_bag/MouseDrop(over_object, src_location, over_location)
/obj/structure/closet/body_bag/attackby(W as obj, mob/user as mob)
/obj/structure/closet/body_bag/close()
/obj/structure/closet/body_bag/cryobag
/obj/structure/closet/body_bag/cryobag/MouseDrop(over_object, src_location, over_location)
/obj/structure/closet/body_bag/cryobag/open()
/obj/structure/closet/bodybag/update_icon()
/obj/structure/closet/bombcloset
/obj/structure/closet/bombcloset/New()
/obj/structure/closet/bombclosetsecurity
/obj/structure/closet/bombclosetsecurity/New()
/obj/structure/closet/boxinggloves
/obj/structure/closet/boxinggloves/New()
/obj/structure/closet/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/closet/cabinet
/obj/structure/closet/cabinet/update_icon()
/obj/structure/closet/can_close()
/obj/structure/closet/can_open()
/obj/structure/closet/chefcloset
/obj/structure/closet/chefcloset/New()
/obj/structure/closet/close()
/obj/structure/closet/coffin
/obj/structure/closet/coffin/sarcophagus
/obj/structure/closet/coffin/update_icon()
/obj/structure/closet/crate
/obj/structure/closet/crate/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/closet/crate/bin
/obj/structure/closet/crate/bin/flowers
/obj/structure/closet/crate/bin/flowers/New()
/obj/structure/closet/crate/bin/plants
/obj/structure/closet/crate/bin/plants/New()
/obj/structure/closet/crate/can_close()
/obj/structure/closet/crate/can_open()
/obj/structure/closet/crate/close()
/obj/structure/closet/crate/critter
/obj/structure/closet/crate/ex_act(severity)
/obj/structure/closet/crate/freezer
/obj/structure/closet/crate/freezer/return_air()
/obj/structure/closet/crate/hydroponics
/obj/structure/closet/crate/hydroponics/prespawned
/obj/structure/closet/crate/hydroponics/prespawned/New()
/obj/structure/closet/crate/internals
/obj/structure/closet/crate/juice
/obj/structure/closet/crate/juice/New()
/obj/structure/closet/crate/large
/obj/structure/closet/crate/large/close()
/obj/structure/closet/crate/medical
/obj/structure/closet/crate/miningcar
/obj/structure/closet/crate/open()
/obj/structure/closet/crate/plastic
/obj/structure/closet/crate/radiation
/obj/structure/closet/crate/radiation/New()
/obj/structure/closet/crate/rcd
/obj/structure/closet/crate/rcd/New()
/obj/structure/closet/crate/secure
/obj/structure/closet/crate/secure/New()
/obj/structure/closet/crate/secure/attack_hand(mob/user as mob)
/obj/structure/closet/crate/secure/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/closet/crate/secure/bin
/obj/structure/closet/crate/secure/can_open()
/obj/structure/closet/crate/secure/chemicals
/obj/structure/closet/crate/secure/chemicals/New()
/obj/structure/closet/crate/secure/emp_act(severity)
/obj/structure/closet/crate/secure/gear
/obj/structure/closet/crate/secure/hydrosec
/obj/structure/closet/crate/secure/large
/obj/structure/closet/crate/secure/large/close()
/obj/structure/closet/crate/secure/large/reinforced
/obj/structure/closet/crate/secure/loot
/obj/structure/closet/crate/secure/loot/New()
/obj/structure/closet/crate/secure/loot/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/closet/crate/secure/loot/togglelock(mob/user as mob)
/obj/structure/closet/crate/secure/plasma
/obj/structure/closet/crate/secure/togglelock(mob/user as mob)
/obj/structure/closet/crate/secure/unknownchemicals
/obj/structure/closet/crate/secure/unknownchemicals/New()
/obj/structure/closet/crate/secure/verb/verb_togglelock()
/obj/structure/closet/crate/secure/weapon
/obj/structure/closet/crate/trashcart
/obj/structure/closet/critter
/obj/structure/closet/critter/attack_hand(mob/user as mob)
/obj/structure/closet/critter/can_open()
/obj/structure/closet/critter/cat
/obj/structure/closet/critter/chick
/obj/structure/closet/critter/close()
/obj/structure/closet/critter/corgi
/obj/structure/closet/critter/cow
/obj/structure/closet/critter/goat
/obj/structure/closet/critter/open()
/obj/structure/closet/dump_contents()
/obj/structure/closet/emcloset
/obj/structure/closet/emcloset/New()
/obj/structure/closet/emcloset/legacy/New()
/obj/structure/closet/ex_act(severity)
/obj/structure/closet/excavation
/obj/structure/closet/excavation/New()
/obj/structure/closet/fireaxecabinet
/obj/structure/closet/fireaxecabinet/attack_ai(mob/user as mob)
/obj/structure/closet/fireaxecabinet/attack_hand(mob/user as mob)
/obj/structure/closet/fireaxecabinet/attack_paw(mob/user as mob)
/obj/structure/closet/fireaxecabinet/attack_tk(mob/user as mob)
/obj/structure/closet/fireaxecabinet/attackby(var/obj/item/O as obj, var/mob/user as mob)
/obj/structure/closet/fireaxecabinet/close()
/obj/structure/closet/fireaxecabinet/open()
/obj/structure/closet/fireaxecabinet/update_icon()
/obj/structure/closet/fireaxecabinet/verb/remove_fire_axe()
/obj/structure/closet/fireaxecabinet/verb/toggle_openness()
/obj/structure/closet/firecloset
/obj/structure/closet/firecloset/New()
/obj/structure/closet/firecloset/full/New()
/obj/structure/closet/firecloset/update_icon()
/obj/structure/closet/gimmick
/obj/structure/closet/gimmick/russian
/obj/structure/closet/gimmick/russian/New()
/obj/structure/closet/gimmick/tacticool
/obj/structure/closet/gimmick/tacticool/New()
/obj/structure/closet/gmcloset
/obj/structure/closet/gmcloset/New()
/obj/structure/closet/hydrant
/obj/structure/closet/hydrant/New()
/obj/structure/closet/jcloset
/obj/structure/closet/jcloset/New()
/obj/structure/closet/l3closet
/obj/structure/closet/l3closet/New()
/obj/structure/closet/l3closet/general
/obj/structure/closet/l3closet/general/New()
/obj/structure/closet/l3closet/janitor
/obj/structure/closet/l3closet/janitor/New()
/obj/structure/closet/l3closet/scientist
/obj/structure/closet/l3closet/scientist/New()
/obj/structure/closet/l3closet/security
/obj/structure/closet/l3closet/security/New()
/obj/structure/closet/l3closet/virology
/obj/structure/closet/l3closet/virology/New()
/obj/structure/closet/lasertag/blue
/obj/structure/closet/lasertag/blue/New()
/obj/structure/closet/lasertag/red
/obj/structure/closet/lasertag/red/New()
/obj/structure/closet/lawcloset
/obj/structure/closet/lawcloset/New()
/obj/structure/closet/malf/suits
/obj/structure/closet/malf/suits/New()
/obj/structure/closet/masks
/obj/structure/closet/masks/New()
/obj/structure/closet/medical_wall
/obj/structure/closet/medical_wall/update_icon()
/obj/structure/closet/meteorhit(obj/O as obj)
/obj/structure/closet/open()
/obj/structure/closet/paramedic
/obj/structure/closet/paramedic/New()
/obj/structure/closet/radiation
/obj/structure/closet/radiation/New()
/obj/structure/closet/relaymove(mob/user as mob)
/obj/structure/closet/secure_closet
/obj/structure/closet/secure_closet/CMO
/obj/structure/closet/secure_closet/CMO/New()
/obj/structure/closet/secure_closet/RD
/obj/structure/closet/secure_closet/RD/New()
/obj/structure/closet/secure_closet/animal
/obj/structure/closet/secure_closet/animal/New()
/obj/structure/closet/secure_closet/atmos_personal
/obj/structure/closet/secure_closet/atmos_personal/New()
/obj/structure/closet/secure_closet/attack_hand(mob/user as mob)
/obj/structure/closet/secure_closet/attack_paw(mob/user as mob)
/obj/structure/closet/secure_closet/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/closet/secure_closet/bar
/obj/structure/closet/secure_closet/bar/New()
/obj/structure/closet/secure_closet/bar/update_icon()
/obj/structure/closet/secure_closet/blueshield
/obj/structure/closet/secure_closet/blueshield/New()
/obj/structure/closet/secure_closet/brig
/obj/structure/closet/secure_closet/brig/New()
/obj/structure/closet/secure_closet/can_open()
/obj/structure/closet/secure_closet/captains
/obj/structure/closet/secure_closet/captains/New()
/obj/structure/closet/secure_closet/cargotech
/obj/structure/closet/secure_closet/cargotech/New()
/obj/structure/closet/secure_closet/chemical
/obj/structure/closet/secure_closet/chemical/New()
/obj/structure/closet/secure_closet/close()
/obj/structure/closet/secure_closet/courtroom
/obj/structure/closet/secure_closet/courtroom/New()
/obj/structure/closet/secure_closet/detective
/obj/structure/closet/secure_closet/detective/New()
/obj/structure/closet/secure_closet/detective/update_icon()
/obj/structure/closet/secure_closet/emp_act(severity)
/obj/structure/closet/secure_closet/engineering_chief
/obj/structure/closet/secure_closet/engineering_chief/New()
/obj/structure/closet/secure_closet/engineering_electrical
/obj/structure/closet/secure_closet/engineering_electrical/New()
/obj/structure/closet/secure_closet/engineering_personal
/obj/structure/closet/secure_closet/engineering_personal/New()
/obj/structure/closet/secure_closet/engineering_welding
/obj/structure/closet/secure_closet/engineering_welding/New()
/obj/structure/closet/secure_closet/exile
/obj/structure/closet/secure_closet/exile/New()
/obj/structure/closet/secure_closet/freezer
/obj/structure/closet/secure_closet/freezer/ex_act(var/severity)
/obj/structure/closet/secure_closet/freezer/fridge
/obj/structure/closet/secure_closet/freezer/fridge/New()
/obj/structure/closet/secure_closet/freezer/kitchen
/obj/structure/closet/secure_closet/freezer/kitchen/New()
/obj/structure/closet/secure_closet/freezer/kitchen/mining
/obj/structure/closet/secure_closet/freezer/meat
/obj/structure/closet/secure_closet/freezer/meat/New()
/obj/structure/closet/secure_closet/freezer/money
/obj/structure/closet/secure_closet/freezer/money/New()
/obj/structure/closet/secure_closet/freezer/update_icon()
/obj/structure/closet/secure_closet/guncabinet
/obj/structure/closet/secure_closet/guncabinet/New()
/obj/structure/closet/secure_closet/guncabinet/toggle()
/obj/structure/closet/secure_closet/guncabinet/update_icon()
/obj/structure/closet/secure_closet/hop
/obj/structure/closet/secure_closet/hop/New()
/obj/structure/closet/secure_closet/hop2
/obj/structure/closet/secure_closet/hop2/New()
/obj/structure/closet/secure_closet/hos
/obj/structure/closet/secure_closet/hos/New()
/obj/structure/closet/secure_closet/hydroponics
/obj/structure/closet/secure_closet/hydroponics/New()
/obj/structure/closet/secure_closet/injection
/obj/structure/closet/secure_closet/injection/New()
/obj/structure/closet/secure_closet/medical1
/obj/structure/closet/secure_closet/medical1/New()
/obj/structure/closet/secure_closet/medical2
/obj/structure/closet/secure_closet/medical2/New()
/obj/structure/closet/secure_closet/medical3
/obj/structure/closet/secure_closet/medical3/New()
/obj/structure/closet/secure_closet/medical_wall
/obj/structure/closet/secure_closet/medical_wall/update_icon()
/obj/structure/closet/secure_closet/miner
/obj/structure/closet/secure_closet/miner/New()
/obj/structure/closet/secure_closet/paramedic
/obj/structure/closet/secure_closet/paramedic/New()
/obj/structure/closet/secure_closet/personal
/obj/structure/closet/secure_closet/personal/New()
/obj/structure/closet/secure_closet/personal/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/closet/secure_closet/personal/cabinet
/obj/structure/closet/secure_closet/personal/cabinet/New()
/obj/structure/closet/secure_closet/personal/cabinet/update_icon()
/obj/structure/closet/secure_closet/personal/patient
/obj/structure/closet/secure_closet/personal/patient/New()
/obj/structure/closet/secure_closet/quartermaster
/obj/structure/closet/secure_closet/quartermaster/New()
/obj/structure/closet/secure_closet/random_drinks
/obj/structure/closet/secure_closet/random_drinks/New()
/obj/structure/closet/secure_closet/scientist
/obj/structure/closet/secure_closet/scientist/New()
/obj/structure/closet/secure_closet/security
/obj/structure/closet/secure_closet/security/New()
/obj/structure/closet/secure_closet/security/cargo
/obj/structure/closet/secure_closet/security/cargo/New()
/obj/structure/closet/secure_closet/security/engine
/obj/structure/closet/secure_closet/security/engine/New()
/obj/structure/closet/secure_closet/security/med
/obj/structure/closet/secure_closet/security/med/New()
/obj/structure/closet/secure_closet/security/science
/obj/structure/closet/secure_closet/security/science/New()
/obj/structure/closet/secure_closet/togglelock(mob/user as mob)
/obj/structure/closet/secure_closet/update_icon()
/obj/structure/closet/secure_closet/verb/verb_togglelock()
/obj/structure/closet/secure_closet/wall
/obj/structure/closet/secure_closet/wall/update_icon()
/obj/structure/closet/secure_closet/warden
/obj/structure/closet/secure_closet/warden/New()
/obj/structure/closet/secure_closet/xenoarchaeologist
/obj/structure/closet/secure_closet/xenoarchaeologist/New()
/obj/structure/closet/statue
/obj/structure/closet/statue/MouseDrop_T()
/obj/structure/closet/statue/New(loc, var/mob/living/L)
/obj/structure/closet/statue/attack_animal(mob/living/simple_animal/user as mob)
/obj/structure/closet/statue/attack_hand()
/obj/structure/closet/statue/attackby(obj/item/I as obj, mob/user as mob)
/obj/structure/closet/statue/blob_act()
/obj/structure/closet/statue/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/closet/statue/close()
/obj/structure/closet/statue/dump_contents()
/obj/structure/closet/statue/meteorhit(obj/O as obj)
/obj/structure/closet/statue/open()
/obj/structure/closet/statue/process()
/obj/structure/closet/statue/relaymove()
/obj/structure/closet/statue/shatter(mob/user as mob)
/obj/structure/closet/statue/toggle()
/obj/structure/closet/statue/update_icon()
/obj/structure/closet/statue/verb_toggleopen()
/obj/structure/closet/syndicate
/obj/structure/closet/syndicate/nuclear
/obj/structure/closet/syndicate/nuclear/New()
/obj/structure/closet/syndicate/personal
/obj/structure/closet/syndicate/personal/New()
/obj/structure/closet/syndicate/resources/
/obj/structure/closet/syndicate/resources//New()
/obj/structure/closet/syndicate/resources/everything
/obj/structure/closet/syndicate/resources/everything/New()
/obj/structure/closet/thunderdome
/obj/structure/closet/thunderdome/New()
/obj/structure/closet/thunderdome/tdgreen
/obj/structure/closet/thunderdome/tdgreen/New()
/obj/structure/closet/thunderdome/tdred
/obj/structure/closet/thunderdome/tdred/New()
/obj/structure/closet/toggle(mob/user as mob)
/obj/structure/closet/toolcloset
/obj/structure/closet/toolcloset/New()
/obj/structure/closet/update_icon()
/obj/structure/closet/verb/verb_toggleopen()
/obj/structure/closet/walllocker
/obj/structure/closet/walllocker/emerglocker
/obj/structure/closet/walllocker/emerglocker/attack_hand(mob/user as mob)
/obj/structure/closet/walllocker/emerglocker/east
/obj/structure/closet/walllocker/emerglocker/north
/obj/structure/closet/walllocker/emerglocker/south
/obj/structure/closet/walllocker/emerglocker/west
/obj/structure/closet/wardrobe
/obj/structure/closet/wardrobe/New()
/obj/structure/closet/wardrobe/atmospherics_yellow
/obj/structure/closet/wardrobe/atmospherics_yellow/New()
/obj/structure/closet/wardrobe/black
/obj/structure/closet/wardrobe/black/New()
/obj/structure/closet/wardrobe/chaplain_black
/obj/structure/closet/wardrobe/chaplain_black/New()
/obj/structure/closet/wardrobe/chemistry_white
/obj/structure/closet/wardrobe/chemistry_white/New()
/obj/structure/closet/wardrobe/engineering_yellow
/obj/structure/closet/wardrobe/engineering_yellow/New()
/obj/structure/closet/wardrobe/genetics_white
/obj/structure/closet/wardrobe/genetics_white/New()
/obj/structure/closet/wardrobe/green
/obj/structure/closet/wardrobe/green/New()
/obj/structure/closet/wardrobe/grey
/obj/structure/closet/wardrobe/grey/New()
/obj/structure/closet/wardrobe/medic_white
/obj/structure/closet/wardrobe/medic_white/New()
/obj/structure/closet/wardrobe/mixed
/obj/structure/closet/wardrobe/mixed/New()
/obj/structure/closet/wardrobe/orange
/obj/structure/closet/wardrobe/orange/New()
/obj/structure/closet/wardrobe/pink
/obj/structure/closet/wardrobe/pink/New()
/obj/structure/closet/wardrobe/pjs
/obj/structure/closet/wardrobe/pjs/New()
/obj/structure/closet/wardrobe/red
/obj/structure/closet/wardrobe/red/New()
/obj/structure/closet/wardrobe/robotics_black
/obj/structure/closet/wardrobe/robotics_black/New()
/obj/structure/closet/wardrobe/toxins_white
/obj/structure/closet/wardrobe/toxins_white/New()
/obj/structure/closet/wardrobe/virology_white
/obj/structure/closet/wardrobe/virology_white/New()
/obj/structure/closet/wardrobe/white
/obj/structure/closet/wardrobe/white/New()
/obj/structure/closet/wardrobe/xenos
/obj/structure/closet/wardrobe/xenos/New()
/obj/structure/closet/wardrobe/yellow
/obj/structure/closet/wardrobe/yellow/New()
/obj/structure/coatrack
/obj/structure/coatrack/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/coatrack/attack_hand(mob/user as mob)
/obj/structure/coatrack/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/coatrack/update_icon()
/obj/structure/computer3frame
/obj/structure/computer3frame/attackby(obj/item/P as obj, mob/user as mob)
/obj/structure/computer3frame/insert_peripheral(var/obj/item/I)
/obj/structure/computer3frame/laptop
/obj/structure/computer3frame/remove_peripheral(var/obj/item/I = null)
/obj/structure/computer3frame/server
/obj/structure/computer3frame/wallcomp
/obj/structure/computerframe
/obj/structure/computerframe/HONKputer
/obj/structure/computerframe/HONKputer/attackby(obj/item/P as obj, mob/user as mob)
/obj/structure/computerframe/attackby(obj/item/P as obj, mob/user as mob)
/obj/structure/constructshell
/obj/structure/constructshell/attackby(obj/item/O as obj, mob/user as mob)
/obj/structure/constructshell/attackby(obj/item/O as obj, mob/user as mob)/switch(choice)
/obj/structure/crematorium
/obj/structure/crematorium/alter_health()
/obj/structure/crematorium/attack_hand(mob/user as mob)
/obj/structure/crematorium/attack_paw(mob/user as mob)
/obj/structure/crematorium/attackby(P as obj, mob/user as mob)
/obj/structure/crematorium/cremate(atom/A, mob/user as mob)
/obj/structure/crematorium/ex_act(severity)
/obj/structure/crematorium/relaymove(mob/user as mob)
/obj/structure/crematorium/update()
/obj/structure/cryofeed
/obj/structure/cryofeed/New()
/obj/structure/cryofeed/right
/obj/structure/crystal
/obj/structure/crystal/Destroy()
/obj/structure/crystal/New()
/obj/structure/cult
/obj/structure/cult/forge
/obj/structure/cult/pylon
/obj/structure/cult/talisman
/obj/structure/cult/tome
/obj/structure/cultgirder
/obj/structure/cultgirder/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/cultgirder/blob_act()
/obj/structure/cultgirder/ex_act(severity)
/obj/structure/device/piano
/obj/structure/device/piano/New()
/obj/structure/device/piano/Topic(href, href_list)
/obj/structure/device/piano/attack_hand(var/mob/user as mob)
/obj/structure/device/piano/attackby(obj/item/O as obj, mob/user as mob)
/obj/structure/device/piano/playnote(var/note as text)
/obj/structure/device/piano/playsong()
/obj/structure/dispenser
/obj/structure/dispenser/New()
/obj/structure/dispenser/Topic(href, href_list)
/obj/structure/dispenser/attack_hand(mob/user as mob)
/obj/structure/dispenser/attackby(obj/item/I as obj, mob/user as mob)
/obj/structure/dispenser/oxygen
/obj/structure/dispenser/plasma
/obj/structure/dispenser/update_icon()
/obj/structure/displaycase
/obj/structure/displaycase/attack_hand(mob/user as mob)
/obj/structure/displaycase/attack_paw(mob/user as mob)
/obj/structure/displaycase/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/displaycase/blob_act()
/obj/structure/displaycase/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/displaycase/captains_laser/New()
/obj/structure/displaycase/dump()
/obj/structure/displaycase/ex_act(severity)
/obj/structure/displaycase/examine()
/obj/structure/displaycase/getPrint(mob/user as mob)
/obj/structure/displaycase/healthcheck()
/obj/structure/displaycase/meteorhit(obj/O as obj)
/obj/structure/displaycase/update_icon()
/obj/structure/disposalconstruct
/obj/structure/disposalconstruct/attackby(var/obj/item/I, var/mob/user)
/obj/structure/disposalconstruct/dpipetype()
/obj/structure/disposalconstruct/hide(var/intact)
/obj/structure/disposalconstruct/update()
/obj/structure/disposalconstruct/verb/flip()
/obj/structure/disposalconstruct/verb/rotate()
/obj/structure/disposalholder
/obj/structure/disposalholder/findpipe(var/turf/T)
/obj/structure/disposalholder/init(var/obj/machinery/disposal/D)
/obj/structure/disposalholder/merge(var/obj/structure/disposalholder/other)
/obj/structure/disposalholder/move()
/obj/structure/disposalholder/nextloc()
/obj/structure/disposalholder/relaymove(mob/user as mob)
/obj/structure/disposalholder/start(var/obj/machinery/disposal/D)
/obj/structure/disposalholder/vent_gas(var/atom/location)
/obj/structure/disposaloutlet
/obj/structure/disposaloutlet/New()
/obj/structure/disposaloutlet/attackby(var/obj/item/I, var/mob/user)
/obj/structure/disposaloutlet/expel(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe
/obj/structure/disposalpipe/Destroy()
/obj/structure/disposalpipe/New()
/obj/structure/disposalpipe/attackby(var/obj/item/I, var/mob/user)
/obj/structure/disposalpipe/broken
/obj/structure/disposalpipe/broken(var/remains = 0)
/obj/structure/disposalpipe/broken/New()
/obj/structure/disposalpipe/broken/welded()
/obj/structure/disposalpipe/ex_act(severity)
/obj/structure/disposalpipe/expel(var/obj/structure/disposalholder/H, var/turf/T, var/direction)
/obj/structure/disposalpipe/healthcheck()
/obj/structure/disposalpipe/hide(var/intact)
/obj/structure/disposalpipe/junction
/obj/structure/disposalpipe/junction/New()
/obj/structure/disposalpipe/junction/nextdir(var/fromdir)
/obj/structure/disposalpipe/nextdir(var/fromdir)
/obj/structure/disposalpipe/segment
/obj/structure/disposalpipe/segment/New()
/obj/structure/disposalpipe/sortjunction
/obj/structure/disposalpipe/sortjunction/New()
/obj/structure/disposalpipe/sortjunction/attackby(var/obj/item/I, var/mob/user)
/obj/structure/disposalpipe/sortjunction/nextdir(var/fromdir, var/sortTag)
/obj/structure/disposalpipe/sortjunction/transfer(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe/sortjunction/updatedesc()
/obj/structure/disposalpipe/sortjunction/updatedir()
/obj/structure/disposalpipe/transfer(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe/trunk
/obj/structure/disposalpipe/trunk/New()
/obj/structure/disposalpipe/trunk/attackby(var/obj/item/I, var/mob/user)
/obj/structure/disposalpipe/trunk/getlinked()
/obj/structure/disposalpipe/trunk/nextdir(var/fromdir)
/obj/structure/disposalpipe/trunk/transfer(var/obj/structure/disposalholder/H)
/obj/structure/disposalpipe/update()
/obj/structure/disposalpipe/updateicon()
/obj/structure/disposalpipe/welded()
/obj/structure/disposalpipe/wrapsortjunction
/obj/structure/disposalpipe/wrapsortjunction/New()
/obj/structure/disposalpipe/wrapsortjunction/nextdir(var/fromdir, var/istomail)
/obj/structure/disposalpipe/wrapsortjunction/transfer(var/obj/structure/disposalholder/H)
/obj/structure/door_assembly
/obj/structure/door_assembly/New()
/obj/structure/door_assembly/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/door_assembly/door_assembly_atmo
/obj/structure/door_assembly/door_assembly_com
/obj/structure/door_assembly/door_assembly_eng
/obj/structure/door_assembly/door_assembly_ext
/obj/structure/door_assembly/door_assembly_fre
/obj/structure/door_assembly/door_assembly_hatch
/obj/structure/door_assembly/door_assembly_highsecurity
/obj/structure/door_assembly/door_assembly_mai
/obj/structure/door_assembly/door_assembly_med
/obj/structure/door_assembly/door_assembly_mhatch
/obj/structure/door_assembly/door_assembly_min
/obj/structure/door_assembly/door_assembly_research
/obj/structure/door_assembly/door_assembly_science
/obj/structure/door_assembly/door_assembly_sec
/obj/structure/door_assembly/multi_tile
/obj/structure/door_assembly/multi_tile/Move()
/obj/structure/door_assembly/multi_tile/New()
/obj/structure/door_assembly/update_state()
/obj/structure/ex_act(severity)
/obj/structure/extinguisher_cabinet
/obj/structure/extinguisher_cabinet/attack_hand(mob/user)
/obj/structure/extinguisher_cabinet/attack_paw(mob/user)
/obj/structure/extinguisher_cabinet/attack_tk(mob/user)
/obj/structure/extinguisher_cabinet/attackby(obj/item/O, mob/user)
/obj/structure/extinguisher_cabinet/update_icon()
/obj/structure/falserwall
/obj/structure/falserwall/New()
/obj/structure/falserwall/attack_hand(mob/user as mob)
/obj/structure/falserwall/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/falserwall/relativewall()
/obj/structure/falsewall
/obj/structure/falsewall/Destroy()
/obj/structure/falsewall/New()
/obj/structure/falsewall/attack_hand(mob/user as mob)
/obj/structure/falsewall/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/falsewall/clown
/obj/structure/falsewall/diamond
/obj/structure/falsewall/gold
/obj/structure/falsewall/plasma
/obj/structure/falsewall/relativewall()
/obj/structure/falsewall/sandstone
/obj/structure/falsewall/silver
/obj/structure/falsewall/update_icon()
/obj/structure/falsewall/uranium
/obj/structure/falsewall/uranium/attack_hand(mob/user as mob)
/obj/structure/falsewall/uranium/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/falsewall/uranium/radiate()
/obj/structure/filingcabinet
/obj/structure/filingcabinet/Topic(href, href_list)
/obj/structure/filingcabinet/attack_hand(mob/user as mob)
/obj/structure/filingcabinet/attack_self_tk(mob/user)
/obj/structure/filingcabinet/attack_tk(mob/user)
/obj/structure/filingcabinet/attackby(obj/item/P as obj, mob/user as mob)
/obj/structure/filingcabinet/chestdrawer
/obj/structure/filingcabinet/filingcabinet
/obj/structure/filingcabinet/initialize()
/obj/structure/filingcabinet/medical
/obj/structure/filingcabinet/medical/attack_hand()
/obj/structure/filingcabinet/medical/attack_tk()
/obj/structure/filingcabinet/medical/populate()
/obj/structure/filingcabinet/security
/obj/structure/filingcabinet/security/attack_hand()
/obj/structure/filingcabinet/security/attack_tk()
/obj/structure/filingcabinet/security/populate()
/obj/structure/flora/ausbushes
/obj/structure/flora/ausbushes/New()
/obj/structure/flora/ausbushes/brflowers
/obj/structure/flora/ausbushes/brflowers/New()
/obj/structure/flora/ausbushes/fernybush
/obj/structure/flora/ausbushes/fernybush/New()
/obj/structure/flora/ausbushes/fullgrass
/obj/structure/flora/ausbushes/fullgrass/New()
/obj/structure/flora/ausbushes/genericbush
/obj/structure/flora/ausbushes/genericbush/New()
/obj/structure/flora/ausbushes/grassybush
/obj/structure/flora/ausbushes/grassybush/New()
/obj/structure/flora/ausbushes/lavendergrass
/obj/structure/flora/ausbushes/lavendergrass/New()
/obj/structure/flora/ausbushes/leafybush
/obj/structure/flora/ausbushes/leafybush/New()
/obj/structure/flora/ausbushes/palebush
/obj/structure/flora/ausbushes/palebush/New()
/obj/structure/flora/ausbushes/pointybush
/obj/structure/flora/ausbushes/pointybush/New()
/obj/structure/flora/ausbushes/ppflowers
/obj/structure/flora/ausbushes/ppflowers/New()
/obj/structure/flora/ausbushes/reedbush
/obj/structure/flora/ausbushes/reedbush/New()
/obj/structure/flora/ausbushes/sparsegrass
/obj/structure/flora/ausbushes/sparsegrass/New()
/obj/structure/flora/ausbushes/stalkybush
/obj/structure/flora/ausbushes/stalkybush/New()
/obj/structure/flora/ausbushes/sunnybush
/obj/structure/flora/ausbushes/sunnybush/New()
/obj/structure/flora/ausbushes/ywflowers
/obj/structure/flora/ausbushes/ywflowers/New()
/obj/structure/flora/bush
/obj/structure/flora/bush/New()
/obj/structure/flora/grass
/obj/structure/flora/grass/both
/obj/structure/flora/grass/both/New()
/obj/structure/flora/grass/brown
/obj/structure/flora/grass/brown/New()
/obj/structure/flora/grass/green
/obj/structure/flora/grass/green/New()
/obj/structure/flora/kirbyplants
/obj/structure/flora/kirbyplants/New()
/obj/structure/flora/kirbyplants/dead
/obj/structure/flora/tree
/obj/structure/flora/tree/dead
/obj/structure/flora/tree/dead/New()
/obj/structure/flora/tree/pine
/obj/structure/flora/tree/pine/New()
/obj/structure/flora/tree/pine/xmas
/obj/structure/flora/tree/pine/xmas/New()
/obj/structure/foamedmetal
/obj/structure/foamedmetal/CanPass(atom/movable/mover, turf/target, height=1.5, air_group = 0)
/obj/structure/foamedmetal/Destroy()
/obj/structure/foamedmetal/New()
/obj/structure/foamedmetal/attack_hand(var/mob/user)
/obj/structure/foamedmetal/attack_paw(var/mob/user)
/obj/structure/foamedmetal/attackby(var/obj/item/I, var/mob/user)
/obj/structure/foamedmetal/blob_act()
/obj/structure/foamedmetal/bullet_act()
/obj/structure/foamedmetal/ex_act(severity)
/obj/structure/foamedmetal/update_nearby_tiles(need_rebuild)
/obj/structure/foamedmetal/updateicon()
/obj/structure/girder
/obj/structure/girder/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/girder/blob_act()
/obj/structure/girder/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/girder/displaced
/obj/structure/girder/ex_act(severity)
/obj/structure/girder/reinforced
/obj/structure/grille
/obj/structure/grille/Bumped(atom/user)
/obj/structure/grille/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/grille/Destroy()
/obj/structure/grille/attack_alien(mob/user as mob)
/obj/structure/grille/attack_animal(var/mob/living/simple_animal/M as mob)
/obj/structure/grille/attack_hand(mob/user as mob)
/obj/structure/grille/attack_paw(mob/user as mob)
/obj/structure/grille/attack_slime(mob/user as mob)
/obj/structure/grille/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/grille/blob_act()
/obj/structure/grille/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/grille/ex_act(severity)
/obj/structure/grille/fence/
/obj/structure/grille/fence/New()
/obj/structure/grille/fence/east_west
/obj/structure/grille/fence/north_south
/obj/structure/grille/healthcheck()
/obj/structure/grille/meteorhit(var/obj/M)
/obj/structure/grille/shock(mob/user as mob, prb)
/obj/structure/grille/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/holohoop
/obj/structure/holohoop/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/holohoop/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/holowindow
/obj/structure/holowindow/Destroy()
/obj/structure/inflatable
/obj/structure/inflatable/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/inflatable/Del()
/obj/structure/inflatable/New(location)
/obj/structure/inflatable/attack_alien(mob/user as mob)
/obj/structure/inflatable/attack_animal(mob/user as mob)
/obj/structure/inflatable/attack_generic(mob/user as mob, damage = 0)
/obj/structure/inflatable/attack_hand(mob/user as mob)
/obj/structure/inflatable/attack_paw(mob/user as mob)
/obj/structure/inflatable/attack_slime(mob/user as mob)
/obj/structure/inflatable/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/inflatable/blob_act()
/obj/structure/inflatable/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/inflatable/deflate(var/violent=0)
/obj/structure/inflatable/door
/obj/structure/inflatable/door/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/inflatable/door/Close()
/obj/structure/inflatable/door/Open()
/obj/structure/inflatable/door/SwitchState()
/obj/structure/inflatable/door/TryToSwitchState(atom/user)
/obj/structure/inflatable/door/attack_ai(mob/user as mob)
/obj/structure/inflatable/door/attack_hand(mob/user as mob)
/obj/structure/inflatable/door/attack_paw(mob/user as mob)
/obj/structure/inflatable/door/deflate(var/violent=0)
/obj/structure/inflatable/door/update_icon()
/obj/structure/inflatable/ex_act(severity)
/obj/structure/inflatable/hit(var/damage, var/sound_effect = 1)
/obj/structure/inflatable/meteorhit()
/obj/structure/inflatable/update_nearby_tiles(need_rebuild)
/obj/structure/inflatable/verb/hand_deflate()
/obj/structure/jungle_plant
/obj/structure/jungle_plant/New()
/obj/structure/jungle_plant/attack_hand(var/mob/user as mob)
/obj/structure/kitchenspike
/obj/structure/kitchenspike/attack_hand(mob/user as mob)
/obj/structure/kitchenspike/attack_paw(mob/user as mob)
/obj/structure/kitchenspike/attackby(obj/item/weapon/grab/G as obj, mob/user as mob)
/obj/structure/ladder
/obj/structure/ladder/New()
/obj/structure/ladder/attack_hand(mob/user as mob)
/obj/structure/ladder/attack_paw(mob/user as mob)
/obj/structure/ladder/attackby(obj/item/weapon/W, mob/user as mob)
/obj/structure/ladder/update_icon()
/obj/structure/lamarr
/obj/structure/lamarr/Break()
/obj/structure/lamarr/attack_hand(mob/user as mob)
/obj/structure/lamarr/attack_paw(mob/user as mob)
/obj/structure/lamarr/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/lamarr/blob_act()
/obj/structure/lamarr/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/lamarr/ex_act(severity)
/obj/structure/lamarr/healthcheck()
/obj/structure/lamarr/meteorhit(obj/O as obj)
/obj/structure/lamarr/update_icon()
/obj/structure/largecrate
/obj/structure/largecrate/attack_hand(mob/user as mob)
/obj/structure/largecrate/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/cat
/obj/structure/largecrate/cat/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/chick
/obj/structure/largecrate/chick/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/cow
/obj/structure/largecrate/cow/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/evil
/obj/structure/largecrate/evil/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/goat
/obj/structure/largecrate/goat/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/lisa
/obj/structure/largecrate/lisa/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/mule
/obj/structure/largecrate/ninja
/obj/structure/largecrate/ninja/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/largecrate/schrodinger
/obj/structure/largecrate/schrodinger/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/lattice
/obj/structure/lattice/Destroy()
/obj/structure/lattice/New()
/obj/structure/lattice/attackby(obj/item/C as obj, mob/user as mob)
/obj/structure/lattice/blob_act()
/obj/structure/lattice/ex_act(severity)
/obj/structure/lattice/updateOverlays()
/obj/structure/m_tray
/obj/structure/m_tray/MouseDrop_T(atom/movable/O as mob|obj, mob/user as mob)
/obj/structure/m_tray/attack_hand(mob/user as mob)
/obj/structure/m_tray/attack_paw(mob/user as mob)
/obj/structure/meteorhit(obj/O as obj)
/obj/structure/mineral_door
/obj/structure/mineral_door/Bumped(atom/user)
/obj/structure/mineral_door/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/mineral_door/CheckHardness()
/obj/structure/mineral_door/Close()
/obj/structure/mineral_door/Destroy()
/obj/structure/mineral_door/Dismantle(devastated = 0)
/obj/structure/mineral_door/New(location)
/obj/structure/mineral_door/Open()
/obj/structure/mineral_door/SwitchState()
/obj/structure/mineral_door/TryToSwitchState(atom/user)
/obj/structure/mineral_door/attack_ai(mob/user as mob)
/obj/structure/mineral_door/attack_hand(mob/user as mob)
/obj/structure/mineral_door/attack_paw(mob/user as mob)
/obj/structure/mineral_door/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/mineral_door/ex_act(severity = 1)
/obj/structure/mineral_door/gold
/obj/structure/mineral_door/iron
/obj/structure/mineral_door/resin
/obj/structure/mineral_door/resin/CheckHardness()
/obj/structure/mineral_door/resin/Close()
/obj/structure/mineral_door/resin/Dismantle(devastated = 0)
/obj/structure/mineral_door/resin/Open()
/obj/structure/mineral_door/resin/TryToSwitchState(atom/user)
/obj/structure/mineral_door/sandstone
/obj/structure/mineral_door/silver
/obj/structure/mineral_door/transparent
/obj/structure/mineral_door/transparent/Close()
/obj/structure/mineral_door/transparent/diamond
/obj/structure/mineral_door/transparent/plasma
/obj/structure/mineral_door/transparent/plasma/TemperatureAct(temperature)
/obj/structure/mineral_door/transparent/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/mineral_door/transparent/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/mineral_door/update_icon()
/obj/structure/mineral_door/update_nearby_tiles(need_rebuild)
/obj/structure/mineral_door/uranium
/obj/structure/mineral_door/wood
/obj/structure/mineral_door/wood/Close()
/obj/structure/mineral_door/wood/Dismantle(devastated = 0)
/obj/structure/mineral_door/wood/Open()
/obj/structure/mirror
/obj/structure/mirror/attack_alien(mob/user as mob)
/obj/structure/mirror/attack_animal(mob/user as mob)
/obj/structure/mirror/attack_hand(mob/user as mob)
/obj/structure/mirror/attack_slime(mob/user as mob)
/obj/structure/mirror/attackby(obj/item/I as obj, mob/user as mob)
/obj/structure/mirror/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/mirror/shatter()
/obj/structure/mopbucket
/obj/structure/mopbucket/New()
/obj/structure/mopbucket/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/mopbucket/ex_act(severity)
/obj/structure/mopbucket/examine()
/obj/structure/morgue
/obj/structure/morgue/alter_health()
/obj/structure/morgue/attack_hand(mob/user as mob)
/obj/structure/morgue/attack_paw(mob/user as mob)
/obj/structure/morgue/attackby(P as obj, mob/user as mob)
/obj/structure/morgue/ex_act(severity)
/obj/structure/morgue/relaymove(mob/user as mob)
/obj/structure/morgue/update()
/obj/structure/ninjatele
/obj/structure/ninjatele/attack_hand(mob/user as mob)
/obj/structure/ninjatele/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/noticeboard
/obj/structure/noticeboard/Topic(href, href_list)
/obj/structure/noticeboard/anomaly
/obj/structure/noticeboard/anomaly/New()
/obj/structure/noticeboard/attack_hand(user as mob)
/obj/structure/noticeboard/attackby(var/obj/item/weapon/O as obj, var/mob/user as mob)
/obj/structure/noticeboard/initialize()
/obj/structure/ore_box
/obj/structure/ore_box/Topic(href, href_list)
/obj/structure/ore_box/attack_hand(obj, mob/user as mob)
/obj/structure/ore_box/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/particle_accelerator
/obj/structure/particle_accelerator/Move()
/obj/structure/particle_accelerator/attackby(obj/item/W, mob/user)
/obj/structure/particle_accelerator/blob_act()
/obj/structure/particle_accelerator/connect_master(var/obj/O)
/obj/structure/particle_accelerator/end_cap
/obj/structure/particle_accelerator/ex_act(severity)
/obj/structure/particle_accelerator/examine()
/obj/structure/particle_accelerator/fuel_chamber
/obj/structure/particle_accelerator/fuel_chamber/update_icon()
/obj/structure/particle_accelerator/meteorhit()
/obj/structure/particle_accelerator/particle_emitter
/obj/structure/particle_accelerator/particle_emitter/center
/obj/structure/particle_accelerator/particle_emitter/emit_particle(var/strength = 0)
/obj/structure/particle_accelerator/particle_emitter/left
/obj/structure/particle_accelerator/particle_emitter/right
/obj/structure/particle_accelerator/particle_emitter/set_delay(var/delay)
/obj/structure/particle_accelerator/particle_emitter/update_icon()
/obj/structure/particle_accelerator/power_box
/obj/structure/particle_accelerator/power_box/update_icon()
/obj/structure/particle_accelerator/process_tool_hit(var/obj/O, var/mob/user)
/obj/structure/particle_accelerator/report_master()
/obj/structure/particle_accelerator/report_ready(var/obj/O)
/obj/structure/particle_accelerator/update_icon()
/obj/structure/particle_accelerator/update_state()
/obj/structure/particle_accelerator/verb/rotate()
/obj/structure/particle_accelerator/verb/rotateccw()
/obj/structure/plasticflaps
/obj/structure/plasticflaps/CanPass(atom/A, turf/T)
/obj/structure/plasticflaps/ex_act(severity)
/obj/structure/plasticflaps/mining
/obj/structure/plasticflaps/mining/Destroy()
/obj/structure/plasticflaps/mining/New()
/obj/structure/rack
/obj/structure/rack/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/rack/MouseDrop_T(obj/O as obj, mob/user as mob)
/obj/structure/rack/attack_alien(mob/user)
/obj/structure/rack/attack_animal(mob/living/simple_animal/user)
/obj/structure/rack/attack_paw(mob/user)
/obj/structure/rack/attack_tk()
/obj/structure/rack/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/rack/blob_act()
/obj/structure/rack/destroy()
/obj/structure/rack/ex_act(severity)
/obj/structure/rack/meteorhit(obj/O as obj)
/obj/structure/reagent_dispensers
/obj/structure/reagent_dispensers/New()
/obj/structure/reagent_dispensers/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/reagent_dispensers/beerkeg
/obj/structure/reagent_dispensers/beerkeg/New()
/obj/structure/reagent_dispensers/beerkeg/blob_act()
/obj/structure/reagent_dispensers/blob_act()
/obj/structure/reagent_dispensers/coolanttank
/obj/structure/reagent_dispensers/coolanttank/New()
/obj/structure/reagent_dispensers/coolanttank/blob_act()
/obj/structure/reagent_dispensers/coolanttank/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/reagent_dispensers/coolanttank/ex_act()
/obj/structure/reagent_dispensers/coolanttank/explode()
/obj/structure/reagent_dispensers/ex_act(severity)
/obj/structure/reagent_dispensers/examine()
/obj/structure/reagent_dispensers/fueltank
/obj/structure/reagent_dispensers/fueltank/Move()
/obj/structure/reagent_dispensers/fueltank/New()
/obj/structure/reagent_dispensers/fueltank/attack_hand()
/obj/structure/reagent_dispensers/fueltank/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/reagent_dispensers/fueltank/blob_act()
/obj/structure/reagent_dispensers/fueltank/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/reagent_dispensers/fueltank/ex_act()
/obj/structure/reagent_dispensers/fueltank/examine()
/obj/structure/reagent_dispensers/fueltank/explode()
/obj/structure/reagent_dispensers/fueltank/leak_fuel(amount)
/obj/structure/reagent_dispensers/fueltank/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/reagent_dispensers/peppertank
/obj/structure/reagent_dispensers/peppertank/New()
/obj/structure/reagent_dispensers/spacecleanertank
/obj/structure/reagent_dispensers/spacecleanertank/New()
/obj/structure/reagent_dispensers/verb/set_APTFT()
/obj/structure/reagent_dispensers/virusfood
/obj/structure/reagent_dispensers/virusfood/New()
/obj/structure/reagent_dispensers/water_cooler
/obj/structure/reagent_dispensers/water_cooler/New()
/obj/structure/reagent_dispensers/watertank
/obj/structure/reagent_dispensers/watertank/New()
/obj/structure/safe
/obj/structure/safe/New()
/obj/structure/safe/Topic(href, href_list)
/obj/structure/safe/attack_hand(mob/user as mob)
/obj/structure/safe/attackby(obj/item/I as obj, mob/user as mob)
/obj/structure/safe/blob_act()
/obj/structure/safe/check_unlocked(mob/user as mob, canhear)
/obj/structure/safe/decrement(num)
/obj/structure/safe/ex_act(severity)
/obj/structure/safe/floor
/obj/structure/safe/floor/hide(var/intact)
/obj/structure/safe/floor/initialize()
/obj/structure/safe/increment(num)
/obj/structure/safe/initialize()
/obj/structure/safe/meteorhit(obj/O as obj)
/obj/structure/safe/update_icon()
/obj/structure/showcase
/obj/structure/shuttle
/obj/structure/shuttle/engine
/obj/structure/shuttle/engine/heater
/obj/structure/shuttle/engine/platform
/obj/structure/shuttle/engine/propulsion
/obj/structure/shuttle/engine/propulsion/burst
/obj/structure/shuttle/engine/propulsion/burst/left
/obj/structure/shuttle/engine/propulsion/burst/right
/obj/structure/shuttle/engine/router
/obj/structure/shuttle/window
/obj/structure/shuttle/window/CanPass(atom/movable/mover, turf/target, height, air_group)
/obj/structure/sign
/obj/structure/sign/atmosplaque
/obj/structure/sign/attackby(obj/item/tool as obj, mob/user as mob)
/obj/structure/sign/barber
/obj/structure/sign/biohazard
/obj/structure/sign/blob_act()
/obj/structure/sign/botany
/obj/structure/sign/chemistry
/obj/structure/sign/chinese
/obj/structure/sign/clown
/obj/structure/sign/deathsposal
/obj/structure/sign/directions/engineering
/obj/structure/sign/directions/evac
/obj/structure/sign/directions/medical
/obj/structure/sign/directions/science
/obj/structure/sign/directions/security
/obj/structure/sign/double/barsign
/obj/structure/sign/double/barsign/ChangeSign(var/Text)
/obj/structure/sign/double/barsign/New()
/obj/structure/sign/double/maltesefalcon
/obj/structure/sign/double/maltesefalcon/left
/obj/structure/sign/double/maltesefalcon/right
/obj/structure/sign/double/map
/obj/structure/sign/double/map/left
/obj/structure/sign/double/map/right
/obj/structure/sign/electricshock
/obj/structure/sign/ex_act(severity)
/obj/structure/sign/examroom
/obj/structure/sign/fire
/obj/structure/sign/goldenplaque
/obj/structure/sign/greencross
/obj/structure/sign/kiddieplaque
/obj/structure/sign/mech
/obj/structure/sign/nosmoking_1
/obj/structure/sign/nosmoking_2
/obj/structure/sign/nuke
/obj/structure/sign/pods
/obj/structure/sign/poster
/obj/structure/sign/poster/New(var/serial)
/obj/structure/sign/poster/attack_hand(mob/user as mob)
/obj/structure/sign/poster/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/sign/poster/roll_and_drop(turf/newloc)
/obj/structure/sign/redcross
/obj/structure/sign/science
/obj/structure/sign/securearea
/obj/structure/sign/singulo
/obj/structure/sign/vacuum
/obj/structure/sign/xeno_warning_mining
/obj/structure/signpost
/obj/structure/signpost/attack_hand(mob/user as mob)
/obj/structure/signpost/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/sink
/obj/structure/sink/attack_hand(mob/user as mob)
/obj/structure/sink/attackby(obj/item/O as obj, mob/user as mob)
/obj/structure/sink/kitchen
/obj/structure/sink/puddle
/obj/structure/sink/puddle/attack_hand(mob/M as mob)
/obj/structure/sink/puddle/attackby(obj/item/O as obj, mob/user as mob)
/obj/structure/snowman
/obj/structure/spacepod_frame
/obj/structure/spacepod_frame/New()
/obj/structure/spacepod_frame/attack_hand()
/obj/structure/spacepod_frame/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/spacepoddoor
/obj/structure/spacepoddoor/CanPass(atom/A, turf/T)
/obj/structure/spacepoddoor/Destroy()
/obj/structure/spacepoddoor/New()
/obj/structure/statue
/obj/structure/statue/angel
/obj/structure/statue/corgi
/obj/structure/stool
/obj/structure/stool/MouseDrop(atom/over_object)
/obj/structure/stool/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/stool/bed
/obj/structure/stool/bed/Destroy()
/obj/structure/stool/bed/MouseDrop(atom/over_object)
/obj/structure/stool/bed/MouseDrop_T(mob/M as mob, mob/user as mob)
/obj/structure/stool/bed/alien
/obj/structure/stool/bed/attack_animal(var/mob/living/simple_animal/M)
/obj/structure/stool/bed/attack_hand(mob/user as mob)
/obj/structure/stool/bed/attack_paw(mob/user as mob)
/obj/structure/stool/bed/buckle_mob(mob/M as mob, mob/user as mob)
/obj/structure/stool/bed/chair
/obj/structure/stool/bed/chair/MouseDrop_T(mob/M as mob, mob/user as mob)
/obj/structure/stool/bed/chair/New()
/obj/structure/stool/bed/chair/attack_tk(mob/user as mob)
/obj/structure/stool/bed/chair/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/stool/bed/chair/barber
/obj/structure/stool/bed/chair/cart/
/obj/structure/stool/bed/chair/cart/HealthCheck()
/obj/structure/stool/bed/chair/cart/Move()
/obj/structure/stool/bed/chair/cart/New()
/obj/structure/stool/bed/chair/cart/Process_Spacemove(var/check_drift = 0, mob/user)
/obj/structure/stool/bed/chair/cart/ambulance
/obj/structure/stool/bed/chair/cart/ambulance/relaymove(mob/user, direction)
/obj/structure/stool/bed/chair/cart/attackby(obj/item/W, mob/user)
/obj/structure/stool/bed/chair/cart/buckle_mob(mob/M, mob/user)
/obj/structure/stool/bed/chair/cart/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/stool/bed/chair/cart/emp_act(severity)
/obj/structure/stool/bed/chair/cart/ex_act(severity)
/obj/structure/stool/bed/chair/cart/examine()
/obj/structure/stool/bed/chair/cart/handle_rotation()
/obj/structure/stool/bed/chair/cart/janicart
/obj/structure/stool/bed/chair/cart/janicart/New()
/obj/structure/stool/bed/chair/cart/janicart/attack_hand(mob/user)
/obj/structure/stool/bed/chair/cart/janicart/attackby(obj/item/W, mob/user)
/obj/structure/stool/bed/chair/cart/janicart/examine()
/obj/structure/stool/bed/chair/cart/janicart/relaymove(mob/user, direction)
/obj/structure/stool/bed/chair/cart/process()
/obj/structure/stool/bed/chair/cart/unbuckle()
/obj/structure/stool/bed/chair/cart/update_mob()
/obj/structure/stool/bed/chair/comfy
/obj/structure/stool/bed/chair/comfy/beige
/obj/structure/stool/bed/chair/comfy/black
/obj/structure/stool/bed/chair/comfy/brown
/obj/structure/stool/bed/chair/comfy/lime
/obj/structure/stool/bed/chair/comfy/teal
/obj/structure/stool/bed/chair/e_chair
/obj/structure/stool/bed/chair/e_chair/New()
/obj/structure/stool/bed/chair/e_chair/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/stool/bed/chair/e_chair/rotate()
/obj/structure/stool/bed/chair/e_chair/shock()
/obj/structure/stool/bed/chair/e_chair/verb/toggle()
/obj/structure/stool/bed/chair/handle_rotation()
/obj/structure/stool/bed/chair/office
/obj/structure/stool/bed/chair/office/Move()
/obj/structure/stool/bed/chair/office/dark
/obj/structure/stool/bed/chair/office/light
/obj/structure/stool/bed/chair/segway
/obj/structure/stool/bed/chair/segway/Bump(var/atom/obstacle)
/obj/structure/stool/bed/chair/segway/Move()
/obj/structure/stool/bed/chair/segway/New()
/obj/structure/stool/bed/chair/segway/buckle_mob(mob/M, mob/user)
/obj/structure/stool/bed/chair/segway/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/stool/bed/chair/segway/damage(amount)
/obj/structure/stool/bed/chair/segway/handle_rotation()
/obj/structure/stool/bed/chair/segway/relaymove(mob/user, direction)
/obj/structure/stool/bed/chair/segway/snowmobile
/obj/structure/stool/bed/chair/segway/snowmobile/blue
/obj/structure/stool/bed/chair/segway/snowmobile/relaymove(mob/user, direction)
/obj/structure/stool/bed/chair/segway/unbuckle()
/obj/structure/stool/bed/chair/segway/update_mob()
/obj/structure/stool/bed/chair/sofa
/obj/structure/stool/bed/chair/sofa/corner
/obj/structure/stool/bed/chair/sofa/left
/obj/structure/stool/bed/chair/sofa/right
/obj/structure/stool/bed/chair/verb/rotate()
/obj/structure/stool/bed/chair/wood/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/stool/bed/chair/wood/normal
/obj/structure/stool/bed/chair/wood/wings
/obj/structure/stool/bed/manual_unbuckle(mob/user as mob)
/obj/structure/stool/bed/nest
/obj/structure/stool/bed/nest/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/stool/bed/nest/buckle_mob(mob/M as mob, mob/user as mob)
/obj/structure/stool/bed/nest/healthcheck()
/obj/structure/stool/bed/nest/manual_unbuckle(mob/user as mob)
/obj/structure/stool/bed/roller
/obj/structure/stool/bed/roller/MouseDrop(over_object, src_location, over_location)
/obj/structure/stool/bed/roller/Move()
/obj/structure/stool/bed/roller/buckle_mob(mob/M as mob, mob/user as mob)
/obj/structure/stool/bed/roller/manual_unbuckle(mob/user as mob)
/obj/structure/stool/bed/unbuckle()
/obj/structure/stool/blob_act()
/obj/structure/stool/ex_act(severity)
/obj/structure/stool/psychbed
/obj/structure/table
/obj/structure/table/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/table/CheckExit(atom/movable/O as mob|obj, target as turf)
/obj/structure/table/Destroy()
/obj/structure/table/MouseDrop(atom/over)
/obj/structure/table/MouseDrop_T(obj/O as obj, mob/user as mob)
/obj/structure/table/New()
/obj/structure/table/attack_alien(mob/user)
/obj/structure/table/attack_animal(mob/living/simple_animal/user)
/obj/structure/table/attack_hand(mob/user)
/obj/structure/table/attack_paw(mob/user)
/obj/structure/table/attack_tk()
/obj/structure/table/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/table/blob_act()
/obj/structure/table/check_cover(obj/item/projectile/P, turf/from)
/obj/structure/table/destroy()
/obj/structure/table/do_put()
/obj/structure/table/ex_act(severity)
/obj/structure/table/flip(var/direction)
/obj/structure/table/holotable
/obj/structure/table/holotable/attack_alien(mob/user as mob)
/obj/structure/table/holotable/attack_animal(mob/living/simple_animal/user as mob)
/obj/structure/table/holotable/attack_hand(mob/user as mob)
/obj/structure/table/holotable/attack_paw(mob/user as mob)
/obj/structure/table/holotable/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/table/holotable/wood
/obj/structure/table/reinforced
/obj/structure/table/reinforced/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/table/reinforced/flip(var/direction)
/obj/structure/table/straight_table_check(var/direction)
/obj/structure/table/unflip()
/obj/structure/table/update_adjacent()
/obj/structure/table/update_icon()
/obj/structure/table/verb/do_flip()
/obj/structure/table/woodentable
/obj/structure/table/woodentable/attackby(obj/item/I as obj, mob/user as mob)
/obj/structure/table/woodentable/poker
/obj/structure/table/woodentable/poker/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/target_stake
/obj/structure/target_stake/Move()
/obj/structure/target_stake/attack_hand(mob/user as mob)
/obj/structure/target_stake/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/temple_falsewall
/obj/structure/temple_falsewall/New()
/obj/structure/temple_falsewall/attack_hand(mob/user as mob)
/obj/structure/toilet
/obj/structure/toilet/New()
/obj/structure/toilet/attack_hand(mob/living/user as mob)
/obj/structure/toilet/attackby(obj/item/I as obj, mob/living/user as mob)
/obj/structure/toilet/update_icon()
/obj/structure/transit_tube
/obj/structure/transit_tube/New(loc)
/obj/structure/transit_tube/create_automatic_decorative_corner(location, direction)
/obj/structure/transit_tube/dir2text_short(direction)
/obj/structure/transit_tube/directions()
/obj/structure/transit_tube/enter_delay(pod, to_dir)
/obj/structure/transit_tube/ex_act(severity)
/obj/structure/transit_tube/exit_delay(pod, to_dir)
/obj/structure/transit_tube/generate_automatic_corners(directions)
/obj/structure/transit_tube/get_exit(in_dir)
/obj/structure/transit_tube/has_entrance(from_dir)
/obj/structure/transit_tube/has_exit(in_dir)
/obj/structure/transit_tube/init_dirs()
/obj/structure/transit_tube/init_dirs_automatic()
/obj/structure/transit_tube/parse_dirs(text)
/obj/structure/transit_tube/pod_stopped(pod, from_dir)
/obj/structure/transit_tube/select_automatic_dirs(connected)
/obj/structure/transit_tube/select_automatic_icon_state(directions)
/obj/structure/transit_tube/should_stop_pod(pod, from_dir)
/obj/structure/transit_tube/station
/obj/structure/transit_tube/station/Bumped(mob/AM as mob|obj)
/obj/structure/transit_tube/station/Destroy()
/obj/structure/transit_tube/station/New()
/obj/structure/transit_tube/station/attack_hand(mob/user as mob)
/obj/structure/transit_tube/station/attackby(obj/item/W, mob/user)
/obj/structure/transit_tube/station/close_animation()
/obj/structure/transit_tube/station/init_dirs()
/obj/structure/transit_tube/station/launch_pod()
/obj/structure/transit_tube/station/open_animation()
/obj/structure/transit_tube/station/pod_stopped(obj/structure/transit_tube_pod/pod, from_dir)
/obj/structure/transit_tube/station/process()
/obj/structure/transit_tube/station/reverse
/obj/structure/transit_tube/station/should_stop_pod(pod, from_dir)
/obj/structure/transit_tube/text2dir_extended(direction)
/obj/structure/transit_tube_pod
/obj/structure/transit_tube_pod/Destroy()
/obj/structure/transit_tube_pod/New(loc)
/obj/structure/transit_tube_pod/assume_air(datum/gas_mixture/giver)
/obj/structure/transit_tube_pod/follow_tube(var/reverse_launch)
/obj/structure/transit_tube_pod/mix_air()
/obj/structure/transit_tube_pod/relaymove(mob/mob, direction)
/obj/structure/transit_tube_pod/remove_air(amount)
/obj/structure/transit_tube_pod/return_air()
/obj/structure/tribble_cage
/obj/structure/tribble_cage/Break()
/obj/structure/tribble_cage/attack_hand(mob/user as mob)
/obj/structure/tribble_cage/attack_paw(mob/user as mob)
/obj/structure/tribble_cage/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/tribble_cage/blob_act()
/obj/structure/tribble_cage/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/tribble_cage/ex_act(severity)
/obj/structure/tribble_cage/healthcheck()
/obj/structure/tribble_cage/meteorhit(obj/O as obj)
/obj/structure/tribble_cage/update_icon()
/obj/structure/urinal
/obj/structure/urinal/attackby(obj/item/I as obj, mob/user as mob)
/obj/structure/windoor_assembly
/obj/structure/windoor_assembly/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/windoor_assembly/CheckExit(atom/movable/mover as mob|obj, turf/target as turf)
/obj/structure/windoor_assembly/Destroy()
/obj/structure/windoor_assembly/New(dir=1)
/obj/structure/windoor_assembly/attackby(obj/item/W as obj, mob/user as mob)
/obj/structure/windoor_assembly/update_icon()
/obj/structure/windoor_assembly/update_nearby_tiles(need_rebuild)
/obj/structure/windoor_assembly/verb/flip()
/obj/structure/windoor_assembly/verb/revrotate()
/obj/structure/window
/obj/structure/window/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/window/CheckExit(var/atom/movable/O, var/turf/target)
/obj/structure/window/Destroy()
/obj/structure/window/Move()
/obj/structure/window/New(Loc,re=0)
/obj/structure/window/attack_alien(mob/user as mob)
/obj/structure/window/attack_animal(mob/user as mob)
/obj/structure/window/attack_generic(mob/user as mob, damage = 0)
/obj/structure/window/attack_hand(mob/user as mob)
/obj/structure/window/attack_paw(mob/user as mob)
/obj/structure/window/attack_slime(mob/user as mob)
/obj/structure/window/attackby(obj/item/weapon/W as obj, mob/user as mob)
/obj/structure/window/basic
/obj/structure/window/blob_act()
/obj/structure/window/bullet_act(var/obj/item/projectile/Proj)
/obj/structure/window/destroy()
/obj/structure/window/ex_act(severity)
/obj/structure/window/full
/obj/structure/window/full/CanPass(atom/movable/mover, turf/target, height=0, air_group=0)
/obj/structure/window/full/CheckExit(atom/movable/O as mob|obj, target as turf)
/obj/structure/window/full/basic
/obj/structure/window/full/is_fulltile()
/obj/structure/window/full/plasmabasic
/obj/structure/window/full/plasmabasic/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/window/full/plasmareinforced
/obj/structure/window/full/plasmareinforced/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/window/full/reinforced
/obj/structure/window/full/reinforced/tinted
/obj/structure/window/full/reinforced/tinted/frosted
/obj/structure/window/full/update_icon()
/obj/structure/window/full/update_nearby_tiles(need_rebuild)
/obj/structure/window/hit(var/damage, var/sound_effect = 1)
/obj/structure/window/hitby(AM as mob|obj)
/obj/structure/window/is_fulltile()
/obj/structure/window/meteorhit()
/obj/structure/window/plasmabasic
/obj/structure/window/plasmabasic/New(Loc,re=0)
/obj/structure/window/plasmabasic/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/window/plasmareinforced
/obj/structure/window/plasmareinforced/New(Loc,re=0)
/obj/structure/window/plasmareinforced/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/window/reinforced
/obj/structure/window/reinforced/tinted
/obj/structure/window/reinforced/tinted/frosted
/obj/structure/window/shuttle
/obj/structure/window/shuttle/update_icon()
/obj/structure/window/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/obj/structure/window/update_icon()
/obj/structure/window/update_nearby_icons()
/obj/structure/window/update_nearby_tiles(need_rebuild)
/obj/structure/window/verb/revrotate()
/obj/structure/window/verb/rotate()
/obj/updateDialog()
/obj/updateUsrDialog()
/obj/update_icon()
/onclose(mob/user, windowid, var/atom/ref=null)
/onclosed(mob/user, windowid, var/atom/ref=null)
/oview_or_orange(distance = world.view , center = usr , type)
/parse_zone(zone)
/percentage_antagonists()
/percentage_dead()
/performFalseWallPressureCheck(var/turf/loc)
/performWallPressureCheck(var/turf/loc)
/pick_n_take(list/listfrom)
/pickweight(list/L)
/pl_control
/pl_control/New()
/pl_control/Randomize(V)
/play_vox_word(var/word, var/z_level, var/mob/only_listener)
/playsound(var/atom/source, soundin, vol as num, vary, extrarange as num, falloff, surround = 1)
/pop(list/listfrom)
/populate_fusion_reactions()
/populate_inactive_customitems_list(var/client/C)
/possess(obj/O as obj in world)
/power_failure(var/announce = 1)
/power_list(var/turf/T, var/source, var/d, var/unmarked=0)
/power_restore(var/announce = 1)
/power_restore_quick(var/announce = 1)
/powernet_nextlink(var/obj/O, var/datum/powernet/PN)
/prison_break()
/prob_chance(var/chance)
/probinj(var/pr, var/inj)
/proc/Wrap(val, min, max)
/proc/change_command_name(var/name)
/proc/church_name()
/proc/fake_blood(var/mob/target)
/proc/get_random_find_type(var/digsite)
/proc/get_turf_or_move(turf/location)
/proc/get_uristrune_cult(word1, word2, word3)
/proc/getmobs()
/proc/is_job_whitelisted(mob/M, var/rank)
/proc/move_admin_shuttle()
/proc/move_alien_ship()
/proc/move_ferry()
/proc/playsound(var/atom/source, soundin, vol as num, vary, extrarange as num, falloff, surround = 1)
/proc/process_newscaster()
/proc/reverse_direction(var/dir)
/proc/sql_report_karma(var/mob/spender, var/mob/receiver)
/proc/syndicate_name()
/proc/texttospeechstrip(var/t_in)
/proc/virus_copylist(var/list/datum/disease2/disease/viruses)
/proc/world_name(var/name)
/process_newscaster()
/projectile_trajectory(var/src_x, var/src_y, var/rotation, var/angle, var/power)
/qdel(var/atom/movable/A)
/ran_zone(zone, probability)
/rand_hex_color()
/randmutb(var/mob/living/M)
/randmutg(var/mob/living/M)
/randmuti(var/mob/living/M)
/random_facial_hair_style(gender, species = "Human")
/random_hair_style(gender, species = "Human")
/random_name(gender, speciesName = "Human")
/random_skin_tone()
/rate_control(var/S, var/V, var/C, var/Min=1, var/Max=5, var/Limit=null)
/recall_shuttle(var/mob/user)
/recursive_mob_check(var/atom/O,  var/list/L = list(), var/recursion_limit = 3, var/client_check = 1, var/sight_check = 1, var/include_radio = 1)
/reject_bad_name(var/t_in, var/allow_numbers=0, var/max_length=26)
/reject_bad_text(var/text, var/max_length=512)
/release(obj/O as obj in world)
/religion_name()
/replacetext(text, find, replacement)
/replacetextEx(text, find, replacement)
/returnToPool(const/A)
/return_areas()
/return_file_text(filename)
/return_sorted_areas()
/reverse_direction(var/dir)
/reverse_text(var/text = "")
/reverselist(list/L)
/revoke_maint_all_access()
/rights2text(rights,seperator="")
/robogibs(atom/location, var/list/viruses)
/rotate_icon(file, state, step = 1, aa = FALSE)
/runerandom()
/runtimeError
/runtimeError/DivisionByZero
/runtimeError/DuplicateVariableDeclaration
/runtimeError/DuplicateVariableDeclaration/New(variable)
/runtimeError/IterationLimitReached
/runtimeError/MaxCPU
/runtimeError/RecursionLimitReached
/runtimeError/ToString()
/runtimeError/TypeMismatch
/runtimeError/TypeMismatch/New(op, a, b)
/runtimeError/UndefinedFunction
/runtimeError/UndefinedFunction/New(function)
/runtimeError/UndefinedVariable
/runtimeError/UndefinedVariable/New(variable)
/runtimeError/UnexpectedReturn
/runtimeError/UnknownInstruction
/runtimeError/var
/runtimeError/var/message
/runtimeError/var/name
/runtimeError/var/stack/stack
/safepick(list/list)
/sanitize(var/t,var/list/repl_chars = null)
/sanitizeSQL(var/t as text)
/sanitize_frequency(var/f)
/sanitize_gender(gender,neuter=0,plural=0, default="male")
/sanitize_hexcolor(color, default="#000000")
/sanitize_inlist(value, list/List, default)
/sanitize_integer(number, min=0, max=1, default=0)
/sanitize_simple(var/t,var/list/repl_chars = list("\n"="#","\t"="#","�"="�"))
/sanitize_text(text, default="")
/scope
/scope/New(node/BlockDefinition/B, scope/parent)
/scope/var
/scope/var/list
/scope/var/list/functions
/scope/var/list/variables
/scope/var/node/BlockDefinition/block
/scramble(var/UI, var/mob/M, var/prob)
/scriptError
/scriptError/BadNumber
/scriptError/BadReturn
/scriptError/BadReturn/New(token/t)
/scriptError/BadToken
/scriptError/BadToken/New(token/t)
/scriptError/DuplicateFunction
/scriptError/DuplicateFunction/New(name, token/t)
/scriptError/EndOfFile
/scriptError/ExpectedToken
/scriptError/ExpectedToken/New(id, token/T)
/scriptError/InvalidID
/scriptError/New(msg=null)
/scriptError/ReservedWord
/scriptError/UnterminatedComment
/scriptError/var
/scriptError/var/message
/sd_alert
/sd_alert/Del()
/sd_alert/Display(message,title,list/buttons,default,unfocus,size,table,style,select,flags)
/sd_alert/New(who, tag)
/sd_alert/Response()
/sd_alert/Topic(href,params[])
/sd_alert/var
/sd_alert/var/client/target
/sd_alert/var/list/validation
/sd_alert/var/response
/seclevel2num(var/seclevel)
/secondaryexplosion(turf/epicenter, range)
/seedify(var/obj/item/O as obj, var/t_max)
/seen_by_camera(var/mob/M)
/select_active_ai(var/mob/user)
/select_active_ai_with_fewest_borgs()
/select_active_alien_ai()
/select_recipe(var/list/datum/recipe/avaiable_recipes, var/obj/obj as obj, var/exact = 1 as num)
/send2adminirc(var/msg)
/send2irc(var/channel, var/msg)
/send2mainirc(var/msg)
/send_byjax(receiver, control_id, target_element, new_content=null, callback=null, list/callback_args=null)
/set_security_level(var/level)
/setup_database_connection()
/setup_economy()
/setup_old_database_connection()
/setup_species()
/setupfactions()
/setupgenetics()
/shake_camera(mob/M, duration, strength=1)
/show_player_info_irc(var/key as text)
/shuffle(var/list/shufflelist)
/shuttle_call
/shuttle_call/New(var/mob/user,var/obj/machinery/computer/communications/computer,var/dir)
/sign(x)
/skintone2racedescription(tone)
/slur(phrase)
/smartfind(var/haystack, var/needle, var/start = 1, var/end = 0)
/smartlength(var/container)
/soft_assert(thing,fail)
/sortAssoc(var/list/L)
/sortAtom(var/list/atom/L, var/order = 1)
/sortKey(var/list/client/L, var/order = 1)
/sortList(var/list/L)
/sortNames(var/list/L)
/sortRecord(var/list/datum/data/record/L, var/field = "name", var/order = 1)
/sort_surgeries()
/sortmobs()
/sound
/sound/New(file,repeat,wait,channel,volume=100)
/sound/RscFile()
/sound/proc/RscFile()
/sound/turntable/test
/sound/var
/sound/var/channel
/sound/var/echo
/sound/var/file
/sound/var/repeat
/sound/var/wait
/space_ninja_arrival(var/assign_key = null, var/assign_mission = null)
/spawn_dynamic_event()
/spawn_meteor()
/spawn_meteors(var/number = meteors_in_small_wave)
/spawn_room(var/atom/start_loc,var/x_size,var/y_size,var/wall,var/floor , var/clean = 0 , var/name)
/specops_can_move()
/specops_process()
/specops_return()
/spread_germs_to_organ(datum/organ/external/E, mob/living/carbon/human/user)
/sql_commit_feedback()
/sql_poll_admins()
/sql_poll_players()
/sql_report_cyborg_death(var/mob/living/silicon/robot/H)
/sql_report_death(var/mob/living/carbon/human/H)
/sql_report_karma(var/mob/spender, var/mob/receiver)
/sql_report_round_end()
/sql_report_round_start()
/sql_sanitize_text(var/text)
/stack
/stack/Clear()
/stack/Copy()
/stack/Pop()
/stack/Push(value)
/stack/Top()
/stars(n, pr)
/station_name()
/statistic_cycle()
/string_explode(var/string, var/separator)
/string_replacetext(var/haystack,var/a,var/b)
/stringmerge(var/text,var/compare,replace = "*")
/stringpercent(var/text,character = "*")
/strip_html(var/t,var/limit=1024)
/strip_html_simple(var/t,var/limit=1024)
/stripped_input(var/mob/user, var/message = "", var/title = "", var/default = "", var/max_length=1024)
/stutter(n)
/surprise_room
/surprise_room/AddTypeToTurf(var/turf/T, var/newtype)
/surprise_room/GetTurfInfo(var/turf/T)
/surprise_room/GetTurfs(var/ttype)
/surprise_room/UpdateAdjacentsOfTurf(var/turf/T)
/surprise_room/UpdateTurf(var/turf/T, var/no_adjacent=0)
/surprise_room/UpdateTurfs()
/surprise_turf_info
/surprise_turf_info/GetAdjacentTypes(var/dir)
/surprise_turf_info/New()
/swapmap
/swapmap/AllTurfs(z)
/swapmap/AllocateSwapMap()
/swapmap/BuildFilledRectangle(turf/T1,turf/T2,item)
/swapmap/BuildInTurfs(list/turfs,item)
/swapmap/BuildRectangle(turf/T1,turf/T2,item)
/swapmap/ConsiderRegion(X1,Y1,X2,Y2,Z1,Z2)
/swapmap/Contains(turf/T)
/swapmap/CutXYZ()
/swapmap/Del()
/swapmap/HiCorner(z=z2)
/swapmap/InUse()
/swapmap/LoCorner(z=z1)
/swapmap/New(_id,x,y,z)
/swapmap/Read(savefile/S,_id,turf/locorner)
/swapmap/Save()
/swapmap/SetID(newid)
/swapmap/Unload()
/swapmap/Write(savefile/S)
/syndicate_elite_can_move()
/syndicate_elite_process()
/syndicate_name()
/testing(msg)
/text("<A href='?src=\ref[src];operation=oddbutton'>[src.oddbutton ? "Yes" : "No"]</A>"))
/text("<A href='?src=\ref[src];operation=start'>[src.on ? "On" : "Off"]</A>"))
/text2dir(direction)
/text2list(text, delimiter="\n")
/text2listEx(text, delimiter="\n")
/texttospeechstrip(var/t_in)
/tg_list2text(list/list, glue=",")
/there_can_be_only_one_mask(var/mob/spirit/mask/target)
/time_stamp()
/togglebuildmode(mob/M as mob in player_list)
/token
/token/New(v, l=0, c=0)
/token/accessor
/token/accessor/New(object, member, l=0, c=0)
/token/end
/token/keyword
/token/number
/token/number/New()
/token/string
/token/symbol
/token/word
/topic_link(var/datum/D, var/arglist, var/content)
/trange(var/Dist=0,var/turf/Center=null)
/trigger_armed_response_team(var/force = 0)
/trigger_side_effect(mob/living/carbon/human/H)
/trigger_splash(turf/epicenter as turf, volume as num)
/trim(text)
/trim_left(text)
/trim_right(text)
/try_move_adjacent(atom/movable/AM)
/turf
/turf/Adjacent(var/atom/neighbor, var/atom/target = null)
/turf/AdjacentTurfs()
/turf/AdjacentTurfsSpace()
/turf/Bless()
/turf/CanPass(atom/movable/mover, turf/target, height=1.5,air_group=0)
/turf/CardinalTurfsWithAccess(var/obj/item/weapon/card/id/ID)
/turf/ChangeTurf(var/turf/N)
/turf/ClickCross(var/target_dir, var/border_only, var/target_atom = null)
/turf/Destroy()
/turf/Distance(turf/t)
/turf/Distance_cardinal(turf/t)
/turf/Enter(atom/movable/mover as mob|obj, atom/forget as mob|obj|turf|area)
/turf/Entered(atom/atom as mob|obj)
/turf/Entered(obj/item/I)
/turf/New()
/turf/RemoveLattice()
/turf/ReplaceWithLattice()
/turf/apply_fire_protection()
/turf/assume_air(datum/gas_mixture/giver)
/turf/bullet_act(var/obj/item/projectile/Proj)
/turf/c_airblock(turf/other)
/turf/can_accept_liquid(from_direction)
/turf/can_leave_liquid(from_direction)
/turf/dbg(image/img, d = 0)
/turf/ex_act(severity)
/turf/explosion_spread(power, direction)
/turf/get_cable_node()
/turf/hotspot_expose(exposed_temperature, exposed_volume, soh = 0)
/turf/inertial_drift(atom/movable/A as mob|obj)
/turf/is_asteroid_floor()
/turf/is_carpet_floor()
/turf/is_catwalk()
/turf/is_grass_floor()
/turf/is_light_floor()
/turf/is_plasteel_floor()
/turf/is_plating()
/turf/is_wood_floor()
/turf/kill_creatures(mob/U = null)
/turf/levelupdate()
/turf/make_air()
/turf/post_update_air_properties()
/turf/remove_air(amount as num)
/turf/return_air()
/turf/return_siding_icon_state()
/turf/shift_to_subarea()
/turf/simulated
/turf/simulated/AddTracks(var/typepath,var/mob,var/bloodDNA,var/comingdir,var/goingdir)
/turf/simulated/Del()
/turf/simulated/Entered(atom/A, atom/OL)
/turf/simulated/New()
/turf/simulated/add_blood(mob/living/carbon/human/M as mob)
/turf/simulated/add_blood_floor(mob/living/carbon/M as mob)
/turf/simulated/apply_fire_protection()
/turf/simulated/assume_air(datum/gas_mixture/giver)
/turf/simulated/c_copy_air()
/turf/simulated/floor
/turf/simulated/floor/New()
/turf/simulated/floor/airless
/turf/simulated/floor/airless/New()
/turf/simulated/floor/attack_hand(mob/user as mob)
/turf/simulated/floor/attack_paw(mob/user as mob)
/turf/simulated/floor/attackby(obj/item/C as obj, mob/user as mob)
/turf/simulated/floor/beach
/turf/simulated/floor/beach/coastline
/turf/simulated/floor/beach/sand
/turf/simulated/floor/beach/water
/turf/simulated/floor/beach/water/New()
/turf/simulated/floor/blob_act()
/turf/simulated/floor/bluegrid
/turf/simulated/floor/break_tile()
/turf/simulated/floor/break_tile_to_plating()
/turf/simulated/floor/burn_tile()
/turf/simulated/floor/can_accept_liquid(from_direction)
/turf/simulated/floor/can_leave_liquid(to_direction)
/turf/simulated/floor/carpet
/turf/simulated/floor/carpet/New()
/turf/simulated/floor/engine
/turf/simulated/floor/engine/attack_hand(var/mob/user as mob)
/turf/simulated/floor/engine/attack_paw(var/mob/user as mob)
/turf/simulated/floor/engine/attackby(obj/item/weapon/C as obj, mob/user as mob)
/turf/simulated/floor/engine/blob_act()
/turf/simulated/floor/engine/cult
/turf/simulated/floor/engine/ex_act(severity)
/turf/simulated/floor/engine/n20
/turf/simulated/floor/engine/n20/New()
/turf/simulated/floor/engine/vacuum
/turf/simulated/floor/ex_act(severity)
/turf/simulated/floor/gets_drilled()
/turf/simulated/floor/grass
/turf/simulated/floor/grass/New()
/turf/simulated/floor/greengrid
/turf/simulated/floor/holofloor/
/turf/simulated/floor/holofloor/attackby(obj/item/weapon/W as obj, mob/user as mob)
/turf/simulated/floor/holofloor/grass
/turf/simulated/floor/holofloor/grass/New()
/turf/simulated/floor/is_carpet_floor()
/turf/simulated/floor/is_catwalk()
/turf/simulated/floor/is_grass_floor()
/turf/simulated/floor/is_light_floor()
/turf/simulated/floor/is_plasteel_floor()
/turf/simulated/floor/is_plating()
/turf/simulated/floor/is_wood_floor()
/turf/simulated/floor/light
/turf/simulated/floor/light/New()
/turf/simulated/floor/make_carpet_floor(var/obj/item/stack/tile/carpet/T = null)
/turf/simulated/floor/make_grass_floor(var/obj/item/stack/tile/grass/T = null)
/turf/simulated/floor/make_light_floor(var/obj/item/stack/tile/light/T = null)
/turf/simulated/floor/make_plasteel_floor(var/obj/item/stack/tile/plasteel/T = null)
/turf/simulated/floor/make_plating()
/turf/simulated/floor/make_wood_floor(var/obj/item/stack/tile/wood/T = null)
/turf/simulated/floor/mech_bay_recharge_floor
/turf/simulated/floor/mech_bay_recharge_floor/Entered(var/obj/mecha/mecha)
/turf/simulated/floor/mech_bay_recharge_floor/Exited(atom)
/turf/simulated/floor/mech_bay_recharge_floor/init_devices()
/turf/simulated/floor/plating
/turf/simulated/floor/plating/airless
/turf/simulated/floor/plating/airless/New()
/turf/simulated/floor/plating/airless/asteroid
/turf/simulated/floor/plating/airless/asteroid/Entered(atom/movable/M as mob|obj)
/turf/simulated/floor/plating/airless/asteroid/New()
/turf/simulated/floor/plating/airless/asteroid/attackby(obj/item/weapon/W as obj, mob/user as mob)
/turf/simulated/floor/plating/airless/asteroid/cave
/turf/simulated/floor/plating/airless/asteroid/cave/New(loc, var/length, var/go_backwards = 1, var/exclude_dir = -1)
/turf/simulated/floor/plating/airless/asteroid/cave/SpawnFloor(var/turf/T)
/turf/simulated/floor/plating/airless/asteroid/cave/SpawnMonster(var/turf/T)
/turf/simulated/floor/plating/airless/asteroid/cave/make_tunnel(var/dir)
/turf/simulated/floor/plating/airless/asteroid/ex_act(severity)
/turf/simulated/floor/plating/airless/asteroid/fullUpdateMineralOverlays()
/turf/simulated/floor/plating/airless/asteroid/gets_dug()
/turf/simulated/floor/plating/airless/asteroid/gibtonite_remains
/turf/simulated/floor/plating/airless/asteroid/updateMineralOverlays()
/turf/simulated/floor/plating/airless/catwalk
/turf/simulated/floor/plating/airless/catwalk/New()
/turf/simulated/floor/plating/airless/catwalk/is_catwalk()
/turf/simulated/floor/plating/airless/catwalk/update_icon(var/propogate=1)
/turf/simulated/floor/plating/ironsand/New()
/turf/simulated/floor/plating/snow
/turf/simulated/floor/plating/snow/concrete
/turf/simulated/floor/plating/snow/ex_act(severity)
/turf/simulated/floor/return_siding_icon_state()
/turf/simulated/floor/update_icon()
/turf/simulated/floor/vault
/turf/simulated/floor/vault/New(location,type)
/turf/simulated/floor/wood
/turf/simulated/hotspot_expose(exposed_temperature, exposed_volume, soh)
/turf/simulated/mineral
/turf/simulated/mineral/Bumped(AM)
/turf/simulated/mineral/DropMineral()
/turf/simulated/mineral/GetDrilled(var/artifact_fail = 0)
/turf/simulated/mineral/MineralSpread()
/turf/simulated/mineral/New()
/turf/simulated/mineral/UpdateMineral()
/turf/simulated/mineral/artifact_debris(var/severity = 0)
/turf/simulated/mineral/attackby(obj/item/weapon/W as obj, mob/user as mob)
/turf/simulated/mineral/ex_act(severity)
/turf/simulated/mineral/excavate_find(var/prob_clean = 0, var/datum/find/F)
/turf/simulated/mineral/gibtonite
/turf/simulated/mineral/gibtonite/GetDrilled()
/turf/simulated/mineral/gibtonite/New()
/turf/simulated/mineral/gibtonite/attackby(obj/item/I, mob/user)
/turf/simulated/mineral/gibtonite/countdown()
/turf/simulated/mineral/gibtonite/defuse()
/turf/simulated/mineral/gibtonite/explosive_reaction()
/turf/simulated/mineral/random
/turf/simulated/mineral/random/New()
/turf/simulated/mineral/random/high_chance
/turf/simulated/mineral/random/high_chance_clown
/turf/simulated/mineral/random/labormineral
/turf/simulated/remove_air(amount as num)
/turf/simulated/return_air()
/turf/simulated/set_graphic(new_graphic)
/turf/simulated/shuttle
/turf/simulated/shuttle/floor
/turf/simulated/shuttle/floor4
/turf/simulated/shuttle/plating
/turf/simulated/shuttle/plating/vox
/turf/simulated/shuttle/wall
/turf/simulated/update_air_properties()
/turf/simulated/var/gas_graphic
/turf/simulated/var/open_directions
/turf/simulated/var/zone/zone
/turf/simulated/wall
/turf/simulated/wall/ChangeTurf(var/newtype)
/turf/simulated/wall/Destroy()
/turf/simulated/wall/New()
/turf/simulated/wall/attack_animal(var/mob/living/simple_animal/M)
/turf/simulated/wall/attack_hand(mob/user as mob)
/turf/simulated/wall/attack_paw(mob/user as mob)
/turf/simulated/wall/attackby(obj/item/weapon/W as obj, mob/user as mob)
/turf/simulated/wall/blob_act()
/turf/simulated/wall/can_accept_liquid(from_direction)
/turf/simulated/wall/can_leave_liquid(from_direction)
/turf/simulated/wall/checkForMultipleDoors()
/turf/simulated/wall/cult
/turf/simulated/wall/dismantle_wall(devastated=0, explode=0)
/turf/simulated/wall/ex_act(severity)
/turf/simulated/wall/meteorhit(obj/M as obj)
/turf/simulated/wall/mineral
/turf/simulated/wall/mineral/clown
/turf/simulated/wall/mineral/diamond
/turf/simulated/wall/mineral/gold
/turf/simulated/wall/mineral/plasma
/turf/simulated/wall/mineral/plasma/PlasmaBurn(temperature)
/turf/simulated/wall/mineral/plasma/attackby(obj/item/weapon/W as obj, mob/user as mob)
/turf/simulated/wall/mineral/plasma/bullet_act(var/obj/item/projectile/Proj)
/turf/simulated/wall/mineral/plasma/ignite(exposed_temperature)
/turf/simulated/wall/mineral/plasma/temperature_expose(datum/gas_mixture/air, exposed_temperature, exposed_volume)
/turf/simulated/wall/mineral/sandstone
/turf/simulated/wall/mineral/silver
/turf/simulated/wall/mineral/uranium
/turf/simulated/wall/mineral/uranium/Bumped(AM as mob|obj)
/turf/simulated/wall/mineral/uranium/attack_hand(mob/user as mob)
/turf/simulated/wall/mineral/uranium/attackby(obj/item/weapon/W as obj, mob/user as mob)
/turf/simulated/wall/mineral/uranium/radiate()
/turf/simulated/wall/place_poster(var/obj/item/weapon/contraband/poster/P, var/mob/user)
/turf/simulated/wall/r_wall
/turf/simulated/wall/r_wall/attack_hand(mob/user as mob)
/turf/simulated/wall/r_wall/attackby(obj/item/W as obj, mob/user as mob)
/turf/simulated/wall/relativewall()
/turf/simulated/wall/rot()
/turf/simulated/wall/thermitemelt(mob/user as mob)
/turf/simulated/wall/vault
/turf/simulated/wall/vault/New(location,type)
/turf/space
/turf/space/Entered(atom/movable/A as mob|obj)
/turf/space/New()
/turf/space/Sandbox_Spacemove(atom/movable/A as mob|obj)
/turf/space/attack_hand(mob/user as mob)
/turf/space/attack_paw(mob/user as mob)
/turf/space/attackby(obj/item/C as obj, mob/user as mob)
/turf/space/can_accept_liquid(from_direction)
/turf/space/can_leave_liquid(from_direction)
/turf/space/levelupdate()
/turf/space/transit
/turf/space/transit/attackby(obj/O as obj, mob/user as mob)
/turf/space/transit/east
/turf/space/transit/east/shuttlespace_ew1
/turf/space/transit/east/shuttlespace_ew10
/turf/space/transit/east/shuttlespace_ew11
/turf/space/transit/east/shuttlespace_ew12
/turf/space/transit/east/shuttlespace_ew13
/turf/space/transit/east/shuttlespace_ew14
/turf/space/transit/east/shuttlespace_ew15
/turf/space/transit/east/shuttlespace_ew2
/turf/space/transit/east/shuttlespace_ew3
/turf/space/transit/east/shuttlespace_ew4
/turf/space/transit/east/shuttlespace_ew5
/turf/space/transit/east/shuttlespace_ew6
/turf/space/transit/east/shuttlespace_ew7
/turf/space/transit/east/shuttlespace_ew8
/turf/space/transit/east/shuttlespace_ew9
/turf/space/transit/north
/turf/space/transit/north/shuttlespace_ns1
/turf/space/transit/north/shuttlespace_ns10
/turf/space/transit/north/shuttlespace_ns11
/turf/space/transit/north/shuttlespace_ns12
/turf/space/transit/north/shuttlespace_ns13
/turf/space/transit/north/shuttlespace_ns14
/turf/space/transit/north/shuttlespace_ns15
/turf/space/transit/north/shuttlespace_ns2
/turf/space/transit/north/shuttlespace_ns3
/turf/space/transit/north/shuttlespace_ns4
/turf/space/transit/north/shuttlespace_ns5
/turf/space/transit/north/shuttlespace_ns6
/turf/space/transit/north/shuttlespace_ns7
/turf/space/transit/north/shuttlespace_ns8
/turf/space/transit/north/shuttlespace_ns9
/turf/unsimulated
/turf/unsimulated/beach
/turf/unsimulated/beach/coastline
/turf/unsimulated/beach/sand
/turf/unsimulated/beach/water
/turf/unsimulated/beach/water/New()
/turf/unsimulated/explosion_spread(power)
/turf/unsimulated/floor
/turf/unsimulated/floor/attack_hand(var/mob/user as mob)
/turf/unsimulated/floor/attack_paw(user as mob)
/turf/unsimulated/floor/plating/airless
/turf/unsimulated/floor/plating/airless/New()
/turf/unsimulated/floor/plating/airless/catwalk
/turf/unsimulated/floor/plating/snow
/turf/unsimulated/floor/plating/snow/concrete
/turf/unsimulated/floor/plating/snow/ex_act(severity)
/turf/unsimulated/jungle
/turf/unsimulated/jungle/New()
/turf/unsimulated/jungle/Spread(var/probability, var/prob_loss = 50)
/turf/unsimulated/jungle/clear
/turf/unsimulated/jungle/impenetrable
/turf/unsimulated/jungle/impenetrable/New()
/turf/unsimulated/jungle/path
/turf/unsimulated/jungle/path/New()
/turf/unsimulated/jungle/rock
/turf/unsimulated/jungle/rock/New()
/turf/unsimulated/jungle/temple_wall
/turf/unsimulated/jungle/water
/turf/unsimulated/jungle/water/Entered(atom/movable/O)
/turf/unsimulated/jungle/water/New()
/turf/unsimulated/jungle/water/deep
/turf/unsimulated/mineral
/turf/unsimulated/wall
/turf/unsimulated/wall/fakeglass
/turf/unsimulated/wall/other
/turf/unsimulated/wall/splashscreen
/turf/update_air_properties()
/turf/update_lumcount(amount)
/turf/var/datum/gas_mixture/air
/turf/var/tmp/connection_manager/connections
/turf/var/tmp/dbg_img
/turf/visibilityChanged()
/ui_style2icon(ui_style)
/uniquelist(var/list/L)
/uniquemergelist(var/list/first, var/list/second, var/skiprep=0)
/updateVisibilityNetworks(atom/A, var/opacity_check = 1)
/var
/var/const
/view_or_range(distance = world.view , center = usr , type)
/viral_outbreak(var/virus = null)
/virology_letterhead(var/report_name)
/virus2_greater_infection()
/virus2_lesser_infection()
/virus_copylist(var/list/datum/disease2/disease/viruses)
/vs_control
/vs_control/ChangePlasma()
/vs_control/ChangeSetting(mob/user,ch)
/vs_control/ChangeSettingsDialog(mob/user,list/L)
/vs_control/New()
/vs_control/RandomizeWithProbability()
/vs_control/SetDefault(var/mob/user)
/vs_control/Topic(href,href_list)
/vs_control/proc/SetDefault(var/mob/user)
/wabbajack(mob/living/M)
/warning(msg)
/word_to_uristrune_bit(word)
/world
/world/IsBanned(key,address,computer_id)
/world/KickInactiveClients()
/world/New()
/world/Reboot(var/reason)
/world/Topic(T, addr, master, key)
/world/load_configuration()
/world/load_mode()
/world/load_mods()
/world/load_motd()
/world/proc/update_status()
/world/save_mode(var/the_mode)
/world/update_status()
/world_name(var/name)
/worldtime2text(time = world.time)
/wormhole_event()
/xgibs(atom/location, var/list/viruses)
/zone/New()
/zone/add(turf/simulated/T)
/zone/add_tile_air(datum/gas_mixture/tile_air)
/zone/c_invalidate()
/zone/c_merge(zone/into)
/zone/dbg_data(mob/M)
/zone/movables()
/zone/rebuild()
/zone/remove(turf/simulated/T)
/zone/tick()
/zone/var/name
holder_damage(var/atom/holder)
if(!istype(who)) CRASH("sd_Alert: Invalid target:[who] (\ref[who])")
if(T)
if(duration)
if(ismob(who))
max(0, carbon_dioxide * 30 + (oxygen + nitrogen) * 20 + toxins * 200)
onclose(user, "autosec")
start()
